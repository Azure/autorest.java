&id001 !!com.azure.autorest.extension.base.model.codemodel.CodeModel
globalParameters:
- &id004
  apiVersions: []
  clientDefaultValue: http://localhost:3000
  extensions: {xmsAzureResource: false, xmsClientFlatten: false, xmsFlattened: false,
    xmsLongRunningOperation: false, xmsSkipUrlEncoding: true}
  flattened: false
  implementation: CLIENT
  language:
    default: {description: server parameter, name: $host, serializedName: $host}
    java: {description: server parameter, name: host, serializedName: $host}
  nullable: false
  operation: &id012
    apiVersions:
    - {version: 1.0.0}
    exceptions:
    - language:
        default: {description: Unexpected error, name: ''}
      protocol:
        http:
          explode: false
          knownMediaType: JSON
          mediaTypes: [application/json]
          statusCodes: [default]
      schema: &id002 !!com.azure.autorest.extension.base.model.codemodel.ObjectSchema
        apiVersions:
        - {version: 1.0.0}
        flattenedSchema: false
        language:
          default: {description: '', name: Error}
          java: {description: '', name: Error}
        maxProperties: 0.0
        minProperties: 0.0
        properties:
        - apiVersions: []
          isDiscriminator: false
          language:
            default: {description: '', name: status}
            java: {description: '', name: status}
          nullable: false
          protocol: {}
          readOnly: false
          required: false
          schema: &id039 !!com.azure.autorest.extension.base.model.codemodel.NumberSchema
            apiVersions:
            - {version: 1.0.0}
            exclusiveMaximum: false
            exclusiveMinimum: false
            language:
              default: {description: '', name: ErrorStatus}
            maximum: 0.0
            minimum: 0.0
            multipleOf: 0.0
            precision: 32.0
            protocol: {}
            type: INTEGER
          serializedName: status
        - apiVersions: []
          isDiscriminator: false
          language:
            default: {description: '', name: message}
            java: {description: '', name: message}
          nullable: false
          protocol: {}
          readOnly: false
          required: false
          schema: &id041 !!com.azure.autorest.extension.base.model.codemodel.StringSchema
            apiVersions:
            - {version: 1.0.0}
            language:
              default: {description: '', name: ErrorMessage}
            maxLength: 0.0
            minLength: 0.0
            protocol: {}
            type: STRING
          serializedName: message
        protocol: {}
        type: OBJECT
    language:
      default: {description: 'Sends value ''red color'' from enumeration of ''red
          color'', ''green-color'', ''blue_color''', name: PutReferenced}
      java: {description: 'Sends value ''red color'' from enumeration of ''red color'',
          ''green-color'', ''blue_color''', name: putReferenced}
    operationGroup: &id003
      $key: enum
      codeModel: *id001
      language:
        default: {description: '', name: Enum}
        java: {description: '', name: Enum}
      operations:
      - &id005
        apiVersions:
        - {version: 1.0.0}
        exceptions:
        - language:
            default: {description: Unexpected error, name: ''}
          protocol:
            http:
              explode: false
              knownMediaType: JSON
              mediaTypes: [application/json]
              statusCodes: [default]
          schema: *id002
        language:
          default: {description: 'Get enum value ''red color'' from enumeration of
              ''red color'', ''green-color'', ''blue_color''.', name: GetNotExpandable}
          java: {description: 'Get enum value ''red color'' from enumeration of ''red
              color'', ''green-color'', ''blue_color''.', name: getNotExpandable}
        operationGroup: *id003
        parameters:
        - *id004
        protocol: {}
        requests:
        - language:
            default: {description: '', name: ''}
          parameters:
          - *id004
          - apiVersions: []
            flattened: false
            implementation: METHOD
            language:
              default: {description: Accept header, name: accept, serializedName: Accept}
              java: {description: Accept header, name: accept, serializedName: Accept}
            nullable: false
            operation: *id005
            origin: modelerfour:synthesized/accept
            protocol:
              http: {explode: false, in: Header}
            required: true
            schema: &id009 !!com.azure.autorest.extension.base.model.codemodel.ConstantSchema
              apiVersions: []
              language:
                default: {description: 'Accept: application/json', name: Accept}
              protocol: {}
              type: CONSTANT
              value: {value: application/json}
              valueType: &id006 !!com.azure.autorest.extension.base.model.codemodel.StringSchema
                apiVersions: []
                language:
                  default: {description: simple string, name: String}
                maxLength: 0.0
                minLength: 0.0
                protocol: {}
                type: STRING
          protocol:
            http: {explode: false, method: get, path: /string/enum/notExpandable,
              uri: '{$host}'}
          signatureParameters: []
        responses:
        - language:
            default: {description: 'The String value ''red color'' from enumeration
                of ''red color'', ''green-color'', ''blue_color''', name: ''}
          protocol:
            http:
              explode: false
              knownMediaType: JSON
              mediaTypes: [application/json]
              statusCodes: ['200']
          schema: &id008 !!com.azure.autorest.extension.base.model.codemodel.SealedChoiceSchema
            apiVersions:
            - {version: 1.0.0}
            choiceType: *id006
            choices:
            - language:
                default: {description: '', name: RED_COLOR}
              value: red color
            - language:
                default: {description: '', name: GREEN_COLOR}
              value: green-color
            - language:
                default: {description: '', name: BLUE_COLOR}
              value: blue_color
            language:
              default: {description: Referenced Color Enum Description., name: Colors}
              java: {description: Referenced Color Enum Description., name: Colors}
            protocol: {}
            type: SEALED_CHOICE
        signatureParameters: []
      - &id007
        apiVersions:
        - {version: 1.0.0}
        exceptions:
        - language:
            default: {description: Unexpected error, name: ''}
          protocol:
            http:
              explode: false
              knownMediaType: JSON
              mediaTypes: [application/json]
              statusCodes: [default]
          schema: *id002
        language:
          default: {description: 'Sends value ''red color'' from enumeration of ''red
              color'', ''green-color'', ''blue_color''', name: PutNotExpandable}
          java: {description: 'Sends value ''red color'' from enumeration of ''red
              color'', ''green-color'', ''blue_color''', name: putNotExpandable}
        operationGroup: *id003
        parameters:
        - *id004
        protocol: {}
        requests:
        - language:
            default: {description: '', name: ''}
          parameters:
          - *id004
          - &id010
            apiVersions: []
            flattened: false
            implementation: METHOD
            language:
              default: {description: string body updated, name: stringBodyUpdated}
              java: {description: string body updated, name: stringBodyUpdated}
            nullable: false
            operation: *id007
            protocol:
              http: {explode: false, in: Body, style: JSON}
            required: true
            schema: *id008
          - apiVersions: []
            flattened: false
            implementation: METHOD
            language:
              default: {description: Accept header, name: accept, serializedName: Accept}
              java: {description: Accept header, name: accept, serializedName: Accept}
            nullable: false
            operation: *id007
            origin: modelerfour:synthesized/accept
            protocol:
              http: {explode: false, in: Header}
            required: true
            schema: *id009
          protocol:
            http:
              explode: false
              knownMediaType: JSON
              mediaTypes: [application/json]
              method: put
              path: /string/enum/notExpandable
              uri: '{$host}'
          signatureParameters:
          - *id010
        responses:
        - language:
            default: {description: Empty Response, name: ''}
          protocol:
            http:
              explode: false
              statusCodes: ['200']
        signatureParameters: []
      - &id011
        apiVersions:
        - {version: 1.0.0}
        exceptions:
        - language:
            default: {description: Unexpected error, name: ''}
          protocol:
            http:
              explode: false
              knownMediaType: JSON
              mediaTypes: [application/json]
              statusCodes: [default]
          schema: *id002
        language:
          default: {description: 'Get enum value ''red color'' from enumeration of
              ''red color'', ''green-color'', ''blue_color''.', name: GetReferenced}
          java: {description: 'Get enum value ''red color'' from enumeration of ''red
              color'', ''green-color'', ''blue_color''.', name: getReferenced}
        operationGroup: *id003
        parameters:
        - *id004
        protocol: {}
        requests:
        - language:
            default: {description: '', name: ''}
          parameters:
          - *id004
          - apiVersions: []
            flattened: false
            implementation: METHOD
            language:
              default: {description: Accept header, name: accept, serializedName: Accept}
              java: {description: Accept header, name: accept, serializedName: Accept}
            nullable: false
            operation: *id011
            origin: modelerfour:synthesized/accept
            protocol:
              http: {explode: false, in: Header}
            required: true
            schema: *id009
          protocol:
            http: {explode: false, method: get, path: /string/enum/Referenced, uri: '{$host}'}
          signatureParameters: []
        responses:
        - language:
            default: {description: 'The String value ''red color'' from enumeration
                of ''red color'', ''green-color'', ''blue_color''', name: ''}
          protocol:
            http:
              explode: false
              knownMediaType: JSON
              mediaTypes: [application/json]
              statusCodes: ['200']
          schema: *id008
        signatureParameters: []
      - *id012
      protocol: {}
    parameters:
    - *id004
    protocol: {}
    requests:
    - language:
        default: {description: '', name: ''}
      parameters:
      - *id004
      - &id013
        apiVersions: []
        flattened: false
        implementation: METHOD
        language:
          default: {description: enum string body, name: enumStringBody}
          java: {description: enum string body, name: enumStringBody}
        nullable: false
        operation: *id012
        protocol:
          http: {explode: false, in: Body, style: JSON}
        required: true
        schema: *id008
      - apiVersions: []
        flattened: false
        implementation: METHOD
        language:
          default: {description: Accept header, name: accept, serializedName: Accept}
          java: {description: Accept header, name: accept, serializedName: Accept}
        nullable: false
        operation: *id012
        origin: modelerfour:synthesized/accept
        protocol:
          http: {explode: false, in: Header}
        required: true
        schema: *id009
      protocol:
        http:
          explode: false
          knownMediaType: JSON
          mediaTypes: [application/json]
          method: put
          path: /string/enum/Referenced
          uri: '{$host}'
      signatureParameters:
      - *id013
    responses:
    - language:
        default: {description: Empty Response, name: ''}
      protocol:
        http:
          explode: false
          statusCodes: ['200']
    signatureParameters: []
  origin: modelerfour:synthesized/host
  protocol:
    http: {explode: false, in: Uri}
  required: true
  schema: *id006
info: {description: Test Infrastructure for AutoRest Swagger BAT, title: AutoRest
    Swagger BAT Service}
language:
  default: {description: '', name: AutoRestSwaggerBatService}
  java: {description: '', name: AutoRestSwaggerBatService}
operationGroups:
- &id014
  $key: string
  codeModel: *id001
  language:
    default: {description: '', name: String}
    java: {description: '', name: StringOperation}
  operations:
  - &id015
    apiVersions:
    - {version: 1.0.0}
    exceptions:
    - language:
        default: {description: Unexpected error, name: ''}
      protocol:
        http:
          explode: false
          knownMediaType: JSON
          mediaTypes: [application/json]
          statusCodes: [default]
      schema: *id002
    language:
      default: {description: Get null string value value, name: GetNull}
      java: {description: Get null string value value, name: getNull}
    operationGroup: *id014
    parameters:
    - *id004
    protocol: {}
    requests:
    - language:
        default: {description: '', name: ''}
      parameters:
      - *id004
      - apiVersions: []
        flattened: false
        implementation: METHOD
        language:
          default: {description: Accept header, name: accept, serializedName: Accept}
          java: {description: Accept header, name: accept, serializedName: Accept}
        nullable: false
        operation: *id015
        origin: modelerfour:synthesized/accept
        protocol:
          http: {explode: false, in: Header}
        required: true
        schema: *id009
      protocol:
        http: {explode: false, method: get, path: /string/null, uri: '{$host}'}
      signatureParameters: []
    responses:
    - language:
        default: {description: The null String value, name: ''}
      protocol:
        http:
          explode: false
          knownMediaType: JSON
          mediaTypes: [application/json]
          statusCodes: ['200']
      schema: &id017 !!com.azure.autorest.extension.base.model.codemodel.StringSchema
        apiVersions:
        - {version: 1.0.0}
        language:
          default: {description: '', name: String}
        maxLength: 0.0
        minLength: 0.0
        protocol: {}
        type: STRING
    signatureParameters: []
  - &id016
    apiVersions:
    - {version: 1.0.0}
    exceptions:
    - language:
        default: {description: Unexpected error, name: ''}
      protocol:
        http:
          explode: false
          knownMediaType: JSON
          mediaTypes: [application/json]
          statusCodes: [default]
      schema: *id002
    language:
      default: {description: Set string value null, name: PutNull}
      java: {description: Set string value null, name: putNull}
    operationGroup: *id014
    parameters:
    - *id004
    protocol: {}
    requests:
    - language:
        default: {description: '', name: ''}
      parameters:
      - *id004
      - &id018
        apiVersions: []
        flattened: false
        implementation: METHOD
        language:
          default: {description: string body, name: stringBody}
          java: {description: string body, name: stringBody}
        nullable: true
        operation: *id016
        protocol:
          http: {explode: false, in: Body, style: JSON}
        required: false
        schema: *id017
      - apiVersions: []
        flattened: false
        implementation: METHOD
        language:
          default: {description: Accept header, name: accept, serializedName: Accept}
          java: {description: Accept header, name: accept, serializedName: Accept}
        nullable: false
        operation: *id016
        origin: modelerfour:synthesized/accept
        protocol:
          http: {explode: false, in: Header}
        required: true
        schema: *id009
      protocol:
        http:
          explode: false
          knownMediaType: JSON
          mediaTypes: [application/json]
          method: put
          path: /string/null
          uri: '{$host}'
      signatureParameters:
      - *id018
    responses:
    - language:
        default: {description: Empty Response, name: ''}
      protocol:
        http:
          explode: false
          statusCodes: ['200']
    signatureParameters: []
  - &id019
    apiVersions:
    - {version: 1.0.0}
    exceptions:
    - language:
        default: {description: Unexpected error, name: ''}
      protocol:
        http:
          explode: false
          knownMediaType: JSON
          mediaTypes: [application/json]
          statusCodes: [default]
      schema: *id002
    language:
      default: {description: Get empty string value value '', name: GetEmpty}
      java: {description: Get empty string value value '', name: getEmpty}
    operationGroup: *id014
    parameters:
    - *id004
    protocol: {}
    requests:
    - language:
        default: {description: '', name: ''}
      parameters:
      - *id004
      - apiVersions: []
        flattened: false
        implementation: METHOD
        language:
          default: {description: Accept header, name: accept, serializedName: Accept}
          java: {description: Accept header, name: accept, serializedName: Accept}
        nullable: false
        operation: *id019
        origin: modelerfour:synthesized/accept
        protocol:
          http: {explode: false, in: Header}
        required: true
        schema: *id009
      protocol:
        http: {explode: false, method: get, path: /string/empty, uri: '{$host}'}
      signatureParameters: []
    responses:
    - language:
        default: {description: The empty String value, name: ''}
      protocol:
        http:
          explode: false
          knownMediaType: JSON
          mediaTypes: [application/json]
          statusCodes: ['200']
      schema: *id006
    signatureParameters: []
  - &id020
    apiVersions:
    - {version: 1.0.0}
    exceptions:
    - language:
        default: {description: Unexpected error, name: ''}
      protocol:
        http:
          explode: false
          knownMediaType: JSON
          mediaTypes: [application/json]
          statusCodes: [default]
      schema: *id002
    language:
      default: {description: Set string value empty '', name: PutEmpty}
      java: {description: Set string value empty '', name: putEmpty}
    operationGroup: *id014
    parameters:
    - *id004
    protocol: {}
    requests:
    - language:
        default: {description: '', name: ''}
      parameters:
      - *id004
      - apiVersions: []
        flattened: false
        implementation: METHOD
        language:
          default: {description: string body, name: stringBody}
          java: {description: string body, name: stringBody}
        nullable: false
        operation: *id020
        protocol:
          http: {explode: false, in: Body, style: JSON}
        required: true
        schema: &id036 !!com.azure.autorest.extension.base.model.codemodel.ConstantSchema
          apiVersions:
          - {version: 1.0.0}
          language:
            default: {description: '', name: Constant3}
          protocol: {}
          type: CONSTANT
          value: {value: ''}
          valueType: *id006
      - apiVersions: []
        flattened: false
        implementation: METHOD
        language:
          default: {description: Accept header, name: accept, serializedName: Accept}
          java: {description: Accept header, name: accept, serializedName: Accept}
        nullable: false
        operation: *id020
        origin: modelerfour:synthesized/accept
        protocol:
          http: {explode: false, in: Header}
        required: true
        schema: *id009
      protocol:
        http:
          explode: false
          knownMediaType: JSON
          mediaTypes: [application/json]
          method: put
          path: /string/empty
          uri: '{$host}'
      signatureParameters: []
    responses:
    - language:
        default: {description: Empty Response, name: ''}
      protocol:
        http:
          explode: false
          statusCodes: ['200']
    signatureParameters: []
  - &id021
    apiVersions:
    - {version: 1.0.0}
    exceptions:
    - language:
        default: {description: Unexpected error, name: ''}
      protocol:
        http:
          explode: false
          knownMediaType: JSON
          mediaTypes: [application/json]
          statusCodes: [default]
      schema: *id002
    language:
      default: {description: Get mbcs string value '啊齄丂狛狜隣郎隣兀﨩ˊ〞〡￤℡㈱‐ー﹡﹢﹫、〓ⅰⅹ⒈€㈠㈩ⅠⅫ！￣ぁんァヶΑ︴АЯаяāɡㄅㄩ─╋︵﹄︻︱︳︴ⅰⅹɑɡ〇〾⿻⺁䜣€',
        name: GetMbcs}
      java: {description: Get mbcs string value '啊齄丂狛狜隣郎隣兀﨩ˊ〞〡￤℡㈱‐ー﹡﹢﹫、〓ⅰⅹ⒈€㈠㈩ⅠⅫ！￣ぁんァヶΑ︴АЯаяāɡㄅㄩ─╋︵﹄︻︱︳︴ⅰⅹɑɡ〇〾⿻⺁䜣€',
        name: getMbcs}
    operationGroup: *id014
    parameters:
    - *id004
    protocol: {}
    requests:
    - language:
        default: {description: '', name: ''}
      parameters:
      - *id004
      - apiVersions: []
        flattened: false
        implementation: METHOD
        language:
          default: {description: Accept header, name: accept, serializedName: Accept}
          java: {description: Accept header, name: accept, serializedName: Accept}
        nullable: false
        operation: *id021
        origin: modelerfour:synthesized/accept
        protocol:
          http: {explode: false, in: Header}
        required: true
        schema: *id009
      protocol:
        http: {explode: false, method: get, path: /string/mbcs, uri: '{$host}'}
      signatureParameters: []
    responses:
    - language:
        default: {description: The mbcs String value, name: ''}
      protocol:
        http:
          explode: false
          knownMediaType: JSON
          mediaTypes: [application/json]
          statusCodes: ['200']
      schema: *id006
    signatureParameters: []
  - &id022
    apiVersions:
    - {version: 1.0.0}
    exceptions:
    - language:
        default: {description: Unexpected error, name: ''}
      protocol:
        http:
          explode: false
          knownMediaType: JSON
          mediaTypes: [application/json]
          statusCodes: [default]
      schema: *id002
    language:
      default: {description: Set string value mbcs '啊齄丂狛狜隣郎隣兀﨩ˊ〞〡￤℡㈱‐ー﹡﹢﹫、〓ⅰⅹ⒈€㈠㈩ⅠⅫ！￣ぁんァヶΑ︴АЯаяāɡㄅㄩ─╋︵﹄︻︱︳︴ⅰⅹɑɡ〇〾⿻⺁䜣€',
        name: PutMbcs}
      java: {description: Set string value mbcs '啊齄丂狛狜隣郎隣兀﨩ˊ〞〡￤℡㈱‐ー﹡﹢﹫、〓ⅰⅹ⒈€㈠㈩ⅠⅫ！￣ぁんァヶΑ︴АЯаяāɡㄅㄩ─╋︵﹄︻︱︳︴ⅰⅹɑɡ〇〾⿻⺁䜣€',
        name: putMbcs}
    operationGroup: *id014
    parameters:
    - *id004
    protocol: {}
    requests:
    - language:
        default: {description: '', name: ''}
      parameters:
      - *id004
      - apiVersions: []
        flattened: false
        implementation: METHOD
        language:
          default: {description: string body, name: stringBody}
          java: {description: string body, name: stringBody}
        nullable: false
        operation: *id022
        protocol:
          http: {explode: false, in: Body, style: JSON}
        required: true
        schema: &id037 !!com.azure.autorest.extension.base.model.codemodel.ConstantSchema
          apiVersions:
          - {version: 1.0.0}
          language:
            default: {description: '', name: Constant5}
          protocol: {}
          type: CONSTANT
          value: {value: 啊齄丂狛狜隣郎隣兀﨩ˊ〞〡￤℡㈱‐ー﹡﹢﹫、〓ⅰⅹ⒈€㈠㈩ⅠⅫ！￣ぁんァヶΑ︴АЯаяāɡㄅㄩ─╋︵﹄︻︱︳︴ⅰⅹɑɡ〇〾⿻⺁䜣€}
          valueType: *id006
      - apiVersions: []
        flattened: false
        implementation: METHOD
        language:
          default: {description: Accept header, name: accept, serializedName: Accept}
          java: {description: Accept header, name: accept, serializedName: Accept}
        nullable: false
        operation: *id022
        origin: modelerfour:synthesized/accept
        protocol:
          http: {explode: false, in: Header}
        required: true
        schema: *id009
      protocol:
        http:
          explode: false
          knownMediaType: JSON
          mediaTypes: [application/json]
          method: put
          path: /string/mbcs
          uri: '{$host}'
      signatureParameters: []
    responses:
    - language:
        default: {description: Empty Response, name: ''}
      protocol:
        http:
          explode: false
          statusCodes: ['200']
    signatureParameters: []
  - &id023
    apiVersions:
    - {version: 1.0.0}
    exceptions:
    - language:
        default: {description: Unexpected error, name: ''}
      protocol:
        http:
          explode: false
          knownMediaType: JSON
          mediaTypes: [application/json]
          statusCodes: [default]
      schema: *id002
    language:
      default: {description: Get string value with leading and trailing whitespace
          '<tab><space><space>Now is the time for all good men to come to the aid
          of their country<tab><space><space>', name: GetWhitespace}
      java: {description: Get string value with leading and trailing whitespace '<tab><space><space>Now
          is the time for all good men to come to the aid of their country<tab><space><space>',
        name: getWhitespace}
    operationGroup: *id014
    parameters:
    - *id004
    protocol: {}
    requests:
    - language:
        default: {description: '', name: ''}
      parameters:
      - *id004
      - apiVersions: []
        flattened: false
        implementation: METHOD
        language:
          default: {description: Accept header, name: accept, serializedName: Accept}
          java: {description: Accept header, name: accept, serializedName: Accept}
        nullable: false
        operation: *id023
        origin: modelerfour:synthesized/accept
        protocol:
          http: {explode: false, in: Header}
        required: true
        schema: *id009
      protocol:
        http: {explode: false, method: get, path: /string/whitespace, uri: '{$host}'}
      signatureParameters: []
    responses:
    - language:
        default: {description: The String value with leading and trailing whitespace
            '<tab><space><space>Now is the time for all good men to come to the aid
            of their country<tab><space><space>', name: ''}
      protocol:
        http:
          explode: false
          knownMediaType: JSON
          mediaTypes: [application/json]
          statusCodes: ['200']
      schema: *id006
    signatureParameters: []
  - &id024
    apiVersions:
    - {version: 1.0.0}
    exceptions:
    - language:
        default: {description: Unexpected error, name: ''}
      protocol:
        http:
          explode: false
          knownMediaType: JSON
          mediaTypes: [application/json]
          statusCodes: [default]
      schema: *id002
    language:
      default: {description: Set String value with leading and trailing whitespace
          '<tab><space><space>Now is the time for all good men to come to the aid
          of their country<tab><space><space>', name: PutWhitespace}
      java: {description: Set String value with leading and trailing whitespace '<tab><space><space>Now
          is the time for all good men to come to the aid of their country<tab><space><space>',
        name: putWhitespace}
    operationGroup: *id014
    parameters:
    - *id004
    protocol: {}
    requests:
    - language:
        default: {description: '', name: ''}
      parameters:
      - *id004
      - apiVersions: []
        flattened: false
        implementation: METHOD
        language:
          default: {description: string body, name: stringBody}
          java: {description: string body, name: stringBody}
        nullable: false
        operation: *id024
        protocol:
          http: {explode: false, in: Body, style: JSON}
        required: true
        schema: &id038 !!com.azure.autorest.extension.base.model.codemodel.ConstantSchema
          apiVersions:
          - {version: 1.0.0}
          language:
            default: {description: '', name: Constant7}
          protocol: {}
          type: CONSTANT
          value: {value: '    Now is the time for all good men to come to the aid
              of their country    '}
          valueType: *id006
      - apiVersions: []
        flattened: false
        implementation: METHOD
        language:
          default: {description: Accept header, name: accept, serializedName: Accept}
          java: {description: Accept header, name: accept, serializedName: Accept}
        nullable: false
        operation: *id024
        origin: modelerfour:synthesized/accept
        protocol:
          http: {explode: false, in: Header}
        required: true
        schema: *id009
      protocol:
        http:
          explode: false
          knownMediaType: JSON
          mediaTypes: [application/json]
          method: put
          path: /string/whitespace
          uri: '{$host}'
      signatureParameters: []
    responses:
    - language:
        default: {description: Empty Response, name: ''}
      protocol:
        http:
          explode: false
          statusCodes: ['200']
    signatureParameters: []
  - &id025
    apiVersions:
    - {version: 1.0.0}
    exceptions:
    - language:
        default: {description: Unexpected error, name: ''}
      protocol:
        http:
          explode: false
          knownMediaType: JSON
          mediaTypes: [application/json]
          statusCodes: [default]
      schema: *id002
    language:
      default: {description: Get String value when no string value is sent in response
          payload, name: GetNotProvided}
      java: {description: Get String value when no string value is sent in response
          payload, name: getNotProvided}
    operationGroup: *id014
    parameters:
    - *id004
    protocol: {}
    requests:
    - language:
        default: {description: '', name: ''}
      parameters:
      - *id004
      - apiVersions: []
        flattened: false
        implementation: METHOD
        language:
          default: {description: Accept header, name: accept, serializedName: Accept}
          java: {description: Accept header, name: accept, serializedName: Accept}
        nullable: false
        operation: *id025
        origin: modelerfour:synthesized/accept
        protocol:
          http: {explode: false, in: Header}
        required: true
        schema: *id009
      protocol:
        http: {explode: false, method: get, path: /string/notProvided, uri: '{$host}'}
      signatureParameters: []
    responses:
    - language:
        default: {description: The not provided string value, name: ''}
      protocol:
        http:
          explode: false
          knownMediaType: JSON
          mediaTypes: [application/json]
          statusCodes: ['200']
      schema: *id017
    signatureParameters: []
  - &id026
    apiVersions:
    - {version: 1.0.0}
    exceptions:
    - language:
        default: {description: Unexpected error, name: ''}
      protocol:
        http:
          explode: false
          knownMediaType: JSON
          mediaTypes: [application/json]
          statusCodes: [default]
      schema: *id002
    language:
      default: {description: Get value that is base64 encoded, name: GetBase64Encoded}
      java: {description: Get value that is base64 encoded, name: getBase64Encoded}
    operationGroup: *id014
    parameters:
    - *id004
    protocol: {}
    requests:
    - language:
        default: {description: '', name: ''}
      parameters:
      - *id004
      - apiVersions: []
        flattened: false
        implementation: METHOD
        language:
          default: {description: Accept header, name: accept, serializedName: Accept}
          java: {description: Accept header, name: accept, serializedName: Accept}
        nullable: false
        operation: *id026
        origin: modelerfour:synthesized/accept
        protocol:
          http: {explode: false, in: Header}
        required: true
        schema: *id009
      protocol:
        http: {explode: false, method: get, path: /string/base64Encoding, uri: '{$host}'}
      signatureParameters: []
    responses:
    - language:
        default: {description: The base64 encoded string value, name: ''}
      protocol:
        http:
          explode: false
          knownMediaType: JSON
          mediaTypes: [application/json]
          statusCodes: ['200']
      schema: &id032 !!com.azure.autorest.extension.base.model.codemodel.ByteArraySchema
        apiVersions:
        - {version: 1.0.0}
        format: BYTE
        language:
          default: {description: '', name: ByteArray}
        protocol: {}
        type: BYTE_ARRAY
    signatureParameters: []
  - &id027
    apiVersions:
    - {version: 1.0.0}
    exceptions:
    - language:
        default: {description: Unexpected error, name: ''}
      protocol:
        http:
          explode: false
          knownMediaType: JSON
          mediaTypes: [application/json]
          statusCodes: [default]
      schema: *id002
    language:
      default: {description: This is an added method, name: GetStringAdded}
      java: {description: This is an added method, name: getStringAdded}
    operationGroup: *id014
    parameters:
    - *id004
    protocol: {}
    requests:
    - language:
        default: {description: '', name: ''}
      parameters:
      - *id004
      - apiVersions: []
        flattened: false
        implementation: METHOD
        language:
          default: {description: Accept header, name: accept, serializedName: Accept}
          java: {description: Accept header, name: accept, serializedName: Accept}
        nullable: false
        operation: *id027
        origin: modelerfour:synthesized/accept
        protocol:
          http: {explode: false, in: Header}
        required: true
        schema: *id009
      protocol:
        http: {explode: false, method: get, path: /string/getStringAdded, uri: '{$host}'}
      signatureParameters: []
    responses:
    - language:
        default: {description: The string value, name: ''}
      protocol:
        http:
          explode: false
          knownMediaType: JSON
          mediaTypes: [application/json]
          statusCodes: ['200']
      schema: *id017
    signatureParameters: []
  - &id028
    apiVersions:
    - {version: 1.0.0}
    exceptions:
    - language:
        default: {description: Unexpected error, name: ''}
      protocol:
        http:
          explode: false
          knownMediaType: JSON
          mediaTypes: [application/json]
          statusCodes: [default]
      schema: *id002
    language:
      default: {description: Get value that is base64url encoded, name: GetBase64UrlEncoded}
      java: {description: Get value that is base64url encoded, name: getBase64UrlEncoded}
    operationGroup: *id014
    parameters:
    - *id004
    protocol: {}
    requests:
    - language:
        default: {description: '', name: ''}
      parameters:
      - *id004
      - apiVersions: []
        flattened: false
        implementation: METHOD
        language:
          default: {description: Accept header, name: accept, serializedName: Accept}
          java: {description: Accept header, name: accept, serializedName: Accept}
        nullable: false
        operation: *id028
        origin: modelerfour:synthesized/accept
        protocol:
          http: {explode: false, in: Header}
        required: true
        schema: *id009
      protocol:
        http: {explode: false, method: get, path: /string/base64UrlEncoding, uri: '{$host}'}
      signatureParameters: []
    responses:
    - language:
        default: {description: The base64url encoded string value, name: ''}
      protocol:
        http:
          explode: false
          knownMediaType: JSON
          mediaTypes: [application/json]
          statusCodes: ['200']
      schema: &id033 !!com.azure.autorest.extension.base.model.codemodel.ByteArraySchema
        apiVersions:
        - {version: 1.0.0}
        format: BASE_64_URL
        language:
          default: {description: '', name: ByteArray}
        protocol: {}
        type: BYTE_ARRAY
    signatureParameters: []
  - &id029
    apiVersions:
    - {version: 1.0.0}
    exceptions:
    - language:
        default: {description: Unexpected error, name: ''}
      protocol:
        http:
          explode: false
          knownMediaType: JSON
          mediaTypes: [application/json]
          statusCodes: [default]
      schema: *id002
    language:
      default: {description: Put value that is base64url encoded, name: PutBase64UrlEncoded}
      java: {description: Put value that is base64url encoded, name: putBase64UrlEncoded}
    operationGroup: *id014
    parameters:
    - *id004
    protocol: {}
    requests:
    - language:
        default: {description: '', name: ''}
      parameters:
      - *id004
      - &id030
        apiVersions: []
        flattened: false
        implementation: METHOD
        language:
          default: {description: string body, name: stringBody}
          java: {description: string body, name: stringBody}
        nullable: false
        operation: *id029
        protocol:
          http: {explode: false, in: Body, style: JSON}
        required: true
        schema: &id034 !!com.azure.autorest.extension.base.model.codemodel.ByteArraySchema
          apiVersions:
          - {version: 1.0.0}
          format: BASE_64_URL
          language:
            default: {description: '', name: ByteArray}
          protocol: {}
          type: BYTE_ARRAY
      - apiVersions: []
        flattened: false
        implementation: METHOD
        language:
          default: {description: Accept header, name: accept, serializedName: Accept}
          java: {description: Accept header, name: accept, serializedName: Accept}
        nullable: false
        operation: *id029
        origin: modelerfour:synthesized/accept
        protocol:
          http: {explode: false, in: Header}
        required: true
        schema: *id009
      protocol:
        http:
          explode: false
          knownMediaType: JSON
          mediaTypes: [application/json]
          method: put
          path: /string/base64UrlEncoding
          uri: '{$host}'
      signatureParameters:
      - *id030
    responses:
    - language:
        default: {description: Empty Response, name: ''}
      protocol:
        http:
          explode: false
          statusCodes: ['200']
    signatureParameters: []
  - &id031
    apiVersions:
    - {version: 1.0.0}
    exceptions:
    - language:
        default: {description: Unexpected error, name: ''}
      protocol:
        http:
          explode: false
          knownMediaType: JSON
          mediaTypes: [application/json]
          statusCodes: [default]
      schema: *id002
    language:
      default: {description: Get null value that is expected to be base64url encoded,
        name: GetNullBase64UrlEncoded}
      java: {description: Get null value that is expected to be base64url encoded,
        name: getNullBase64UrlEncoded}
    operationGroup: *id014
    parameters:
    - *id004
    protocol: {}
    requests:
    - language:
        default: {description: '', name: ''}
      parameters:
      - *id004
      - apiVersions: []
        flattened: false
        implementation: METHOD
        language:
          default: {description: Accept header, name: accept, serializedName: Accept}
          java: {description: Accept header, name: accept, serializedName: Accept}
        nullable: false
        operation: *id031
        origin: modelerfour:synthesized/accept
        protocol:
          http: {explode: false, in: Header}
        required: true
        schema: *id009
      protocol:
        http: {explode: false, method: get, path: /string/nullBase64UrlEncoding, uri: '{$host}'}
      signatureParameters: []
    responses:
    - language:
        default: {description: The null value, name: ''}
      protocol:
        http:
          explode: false
          knownMediaType: JSON
          mediaTypes: [application/json]
          statusCodes: ['200']
      schema: &id035 !!com.azure.autorest.extension.base.model.codemodel.ByteArraySchema
        apiVersions:
        - {version: 1.0.0}
        format: BASE_64_URL
        language:
          default: {description: '', name: ByteArray}
        protocol: {}
        type: BYTE_ARRAY
    signatureParameters: []
  protocol: {}
- *id003
protocol:
  http: {explode: false}
schemas:
  ands: []
  arrays: []
  binaries: []
  booleans: []
  byteArrays:
  - *id032
  - *id033
  - *id034
  - *id035
  chars: []
  choices: []
  constants:
  - *id009
  - apiVersions:
    - {version: 1.0.0}
    language:
      default: {description: '', name: Constant2}
    protocol: {}
    type: CONSTANT
    value: {value: ''}
    valueType: *id006
  - *id036
  - apiVersions:
    - {version: 1.0.0}
    language:
      default: {description: '', name: Constant4}
    protocol: {}
    type: CONSTANT
    value: {value: 啊齄丂狛狜隣郎隣兀﨩ˊ〞〡￤℡㈱‐ー﹡﹢﹫、〓ⅰⅹ⒈€㈠㈩ⅠⅫ！￣ぁんァヶΑ︴АЯаяāɡㄅㄩ─╋︵﹄︻︱︳︴ⅰⅹɑɡ〇〾⿻⺁䜣€}
    valueType: *id006
  - *id037
  - apiVersions:
    - {version: 1.0.0}
    language:
      default: {description: '', name: Constant6}
    protocol: {}
    type: CONSTANT
    value: {value: '    Now is the time for all good men to come to the aid of their
        country    '}
    valueType: *id006
  - *id038
  - &id040
    apiVersions:
    - {version: 1.0.0}
    language:
      default: {description: Referenced Color Constant Description., name: ColorConstant}
    protocol: {}
    type: CONSTANT
    value: {value: green-color}
    valueType: *id006
  credentials: []
  dateTimes: []
  dates: []
  dictionaries: []
  durations: []
  flags: []
  groups: []
  numbers:
  - *id039
  objects:
  - *id002
  - apiVersions:
    - {version: 1.0.0}
    flattenedSchema: false
    language:
      default: {description: '', name: RefColorConstant}
      java: {description: '', name: RefColorConstant}
    maxProperties: 0.0
    minProperties: 0.0
    properties:
    - apiVersions: []
      isDiscriminator: false
      language:
        default: {description: Referenced Color Constant Description., name: colorConstant}
        java: {description: Referenced Color Constant Description., name: colorConstant}
      nullable: false
      protocol: {}
      readOnly: false
      required: true
      schema: *id040
      serializedName: ColorConstant
    - apiVersions: []
      isDiscriminator: false
      language:
        default: {description: Sample string., name: field1}
        java: {description: Sample string., name: field1}
      nullable: false
      protocol: {}
      readOnly: false
      required: false
      schema: &id042 !!com.azure.autorest.extension.base.model.codemodel.StringSchema
        apiVersions:
        - {version: 1.0.0}
        language:
          default: {description: Sample string., name: RefColorConstantField1}
        maxLength: 0.0
        minLength: 0.0
        protocol: {}
        type: STRING
      serializedName: field1
    protocol: {}
    type: OBJECT
  odataQueries: []
  ors: []
  parameterGroups: []
  sealedChoices:
  - *id008
  streams: []
  strings:
  - *id006
  - *id017
  - *id041
  - *id042
  unixtimes: []
  unknowns: []
  uris: []
  uuids: []
  xors: []
