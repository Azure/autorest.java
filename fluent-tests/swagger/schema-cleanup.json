{
  "swagger": "2.0",
  "info": {
    "version": "2020-12-01",
    "title": "SchemaCleanUp"
  },
  "schemes": ["https"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/applications": {
      "get":{
        "tags": [
          "applications.application"
        ],
        "summary": "Get entities from applications",
        "operationId": "applications.application_ListApplication",
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdOnBehalfOf",
                "owner"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "$ref": "#/definitions/Application"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "LinkedServiceReference": {
      "description": "Linked service reference type.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Linked service reference type.",
          "enum": ["LinkedServiceReference"],
          "x-ms-enum": {
            "name": "Type",
            "modelAsString": true
          }
        },
        "referenceName": {
          "type": "string",
          "description": "Reference LinkedService name."
        },
        "parameters": {
          "type": "object",
          "description": "Arguments for LinkedService."
        }
      },
      "required": ["type", "referenceName"]
    },
    "Application": {
      "description": "Application.",
      "type": "object",
      "properties": {
        "userAssignedIdentities": {
          "$ref": "#/definitions/UserAssignedIdentities",
          "description": "The identities assigned to this resource by the user."
        },
        "Dog": {
          "$ref": "#/definitions/Dog",
          "description": "A beautiful dog."
        }
      }
    },
    "Record": {
      "type": "object",
      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.\",",
      "additionalProperties": {
        "$ref": "#/definitions/UserAssignedIdentity"
      }
    },
    "UserAssignedIdentities": {
      "allOf": [{
        "$ref": "#/definitions/UserAssignedIdentitiesIntermediate"
      }]
    },
    "UserAssignedIdentitiesIntermediate": {
      "allOf": [{
        "$ref": "#/definitions/Record"
      }]
    },
    "UserAssignedIdentity": {
      "type": "object",
      "description": "A managed identity assigned by the user.",
      "properties": {
        "clientId": {
          "type": "string",
          "description": "The active directory client identifier for this principal."
        },
        "principalId": {
          "type": "string",
          "description": "The active directory identifier for this principal."
        }
      }
    },
    "Dog": {
      "type": "object",
      "description": "Test extensible enum type for discriminator",
      "properties": {
        "kind": {
          "$ref": "#/definitions/DogKind",
          "description": "discriminator property"
        },
        "weight": {
          "type": "integer",
          "format": "int32",
          "description": "Weight of the dog"
        }
      },
      "discriminator": "kind",
      "required": [
        "kind",
        "weight"
      ]
    },
    "DogKind": {
      "type": "string",
      "description": "extensible enum type for discriminator",
      "enum": [
        "golden"
      ],
      "x-ms-enum": {
        "name": "DogKind",
        "modelAsString": true,
        "values": [
          {
            "name": "Golden",
            "value": "golden",
            "description": "Species golden"
          }
        ]
      }
    },
    "Golden": {
      "type": "object",
      "description": "Golden dog model",
      "allOf": [
        {
          "$ref": "#/definitions/Dog"
        }
      ],
      "x-ms-discriminator-value": "golden"
    },
    "CloudError": {
      "x-ms-external": true,
      "description": "The object that defines the structure of an Azure Synapse error response.",
      "type": "object",
      "properties": {
        "error": {
          "description": "Error data",
          "$ref": "#/definitions/CloudErrorBody"
        }
      },
      "required": ["error"]
    },
    "CloudErrorBody": {
      "x-ms-external": true,
      "description": "The object that defines the structure of an Azure Synapse error.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code.",
          "type": "string"
        },
        "message": {
          "description": "Error message.",
          "type": "string"
        },
        "target": {
          "description": "Property name/path in request associated with error.",
          "type": "string"
        },
        "details": {
          "description": "Array with additional error details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CloudErrorBody"
          }
        }
      },
      "required": ["code", "message"]
    },
    "CloudErrorBodyNoRecursive": {
      "x-ms-external": true,
      "description": "The object that defines the structure of an Azure Synapse error.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code.",
          "type": "string"
        },
        "message": {
          "description": "Error message.",
          "type": "string"
        },
        "target": {
          "description": "Property name/path in request associated with error.",
          "type": "string"
        }
      },
      "required": ["code", "message"]
    }
  }
}