// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

package fixtures.requiredoptional.implementation;

import com.azure.core.http.HttpPipeline;
import com.azure.core.implementation.RestProxy;
import com.azure.core.implementation.annotation.ServiceClientBuilder;
import fixtures.requiredoptional.AutoRestRequiredOptionalTestService;
import fixtures.requiredoptional.Explicits;
import fixtures.requiredoptional.Implicits;

/**
 * A builder for creating a new instance of the AutoRestRequiredOptionalTestService type.
 */
@ServiceClientBuilder(serviceClients = AutoRestRequiredOptionalTestService.class)
public final class AutoRestRequiredOptionalTestServiceBuilder {
    /*
     * number of items to skip
     */
    private String requiredGlobalPath;

    /**
     * Sets number of items to skip.
     *
     * @param requiredGlobalPath the requiredGlobalPath value.
     * @return the AutoRestRequiredOptionalTestServiceBuilder.
     */
    public AutoRestRequiredOptionalTestServiceBuilder requiredGlobalPath(String requiredGlobalPath) {
        this.requiredGlobalPath = requiredGlobalPath;
        return this;
    }

    /*
     * number of items to skip
     */
    private String requiredGlobalQuery;

    /**
     * Sets number of items to skip.
     *
     * @param requiredGlobalQuery the requiredGlobalQuery value.
     * @return the AutoRestRequiredOptionalTestServiceBuilder.
     */
    public AutoRestRequiredOptionalTestServiceBuilder requiredGlobalQuery(String requiredGlobalQuery) {
        this.requiredGlobalQuery = requiredGlobalQuery;
        return this;
    }

    /*
     * number of items to skip
     */
    private Integer optionalGlobalQuery;

    /**
     * Sets number of items to skip.
     *
     * @param optionalGlobalQuery the optionalGlobalQuery value.
     * @return the AutoRestRequiredOptionalTestServiceBuilder.
     */
    public AutoRestRequiredOptionalTestServiceBuilder optionalGlobalQuery(Integer optionalGlobalQuery) {
        this.optionalGlobalQuery = optionalGlobalQuery;
        return this;
    }

    /*
     * The HTTP pipeline to send requests through
     */
    private HttpPipeline pipeline;

    /**
     * Sets The HTTP pipeline to send requests through.
     *
     * @param pipeline the pipeline value.
     * @return the AutoRestRequiredOptionalTestServiceBuilder.
     */
    public AutoRestRequiredOptionalTestServiceBuilder pipeline(HttpPipeline pipeline) {
        this.pipeline = pipeline;
        return this;
    }

    /**
     * Builds an instance of AutoRestRequiredOptionalTestService with the provided parameters.
     *
     * @return an instance of AutoRestRequiredOptionalTestService.
     */
    public AutoRestRequiredOptionalTestService build() {
        if (pipeline == null) {
            this.pipeline = RestProxy.createDefaultPipeline();
        }
        AutoRestRequiredOptionalTestServiceImpl client = new AutoRestRequiredOptionalTestServiceImpl(pipeline);
        if (this.requiredGlobalPath != null) {
            client.setRequiredGlobalPath(this.requiredGlobalPath);
        }
        if (this.requiredGlobalQuery != null) {
            client.setRequiredGlobalQuery(this.requiredGlobalQuery);
        }
        if (this.optionalGlobalQuery != null) {
            client.setOptionalGlobalQuery(this.optionalGlobalQuery);
        }
        return client;
    }
}
