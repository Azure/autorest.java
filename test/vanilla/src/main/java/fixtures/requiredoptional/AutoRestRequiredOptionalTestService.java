/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package fixtures.requiredoptional;

import com.microsoft.rest.RestClient;

/**
 * The interface for AutoRestRequiredOptionalTestService class.
 */
public interface AutoRestRequiredOptionalTestService {
    /**
     * Gets the REST client.
     *
     * @return the {@link RestClient} object.
    */
    RestClient restClient();

    /**
     * The default base URL.
     */
    String DEFAULT_BASE_URL = "http://localhost";

    /**
     * Gets number of items to skip.
     *
     * @return the requiredGlobalPath value.
     */
    String requiredGlobalPath();

    /**
     * Sets number of items to skip.
     *
     * @param requiredGlobalPath the requiredGlobalPath value.
     * @return the service client itself
     */
    AutoRestRequiredOptionalTestService withRequiredGlobalPath(String requiredGlobalPath);

    /**
     * Gets number of items to skip.
     *
     * @return the requiredGlobalQuery value.
     */
    String requiredGlobalQuery();

    /**
     * Sets number of items to skip.
     *
     * @param requiredGlobalQuery the requiredGlobalQuery value.
     * @return the service client itself
     */
    AutoRestRequiredOptionalTestService withRequiredGlobalQuery(String requiredGlobalQuery);

    /**
     * Gets number of items to skip.
     *
     * @return the optionalGlobalQuery value.
     */
    int optionalGlobalQuery();

    /**
     * Sets number of items to skip.
     *
     * @param optionalGlobalQuery the optionalGlobalQuery value.
     * @return the service client itself
     */
    AutoRestRequiredOptionalTestService withOptionalGlobalQuery(int optionalGlobalQuery);

    /**
     * Gets the Implicits object to access its operations.
     * @return the Implicits object.
     */
    Implicits implicits();

    /**
     * Gets the Explicits object to access its operations.
     * @return the Explicits object.
     */
    Explicits explicits();

}
