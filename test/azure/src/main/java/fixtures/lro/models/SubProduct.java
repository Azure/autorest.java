// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

package fixtures.lro.models;

import com.azure.core.implementation.annotation.Fluent;
import com.azure.core.implementation.annotation.JsonFlatten;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.azure.v3.SubResource;

/**
 * The SubProduct model.
 */
@JsonFlatten
@Fluent
public class SubProduct extends SubResource {
    /*
     * The provisioningState property.
     */
    @JsonProperty(value = "properties.provisioningState")
    private String provisioningState;

    /*
     * Possible values include: 'Succeeded', 'Failed', 'canceled', 'Accepted',
     * 'Creating', 'Created', 'Updating', 'Updated', 'Deleting', 'Deleted',
     * 'OK'
     */
    @JsonProperty(value = "properties.provisioningStateValues", access = JsonProperty.Access.WRITE_ONLY)
    private String provisioningStateValues;

    /**
     * Get the provisioningState property: The provisioningState property.
     *
     * @return the provisioningState value.
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Set the provisioningState property: The provisioningState property.
     *
     * @param provisioningState the provisioningState value to set.
     * @return the SubProduct object itself.
     */
    public SubProduct provisioningState(String provisioningState) {
        this.provisioningState = provisioningState;
        return this;
    }

    /**
     * Get the provisioningStateValues property: Possible values include:
     * 'Succeeded', 'Failed', 'canceled', 'Accepted', 'Creating', 'Created',
     * 'Updating', 'Updated', 'Deleting', 'Deleted', 'OK'.
     *
     * @return the provisioningStateValues value.
     */
    public String provisioningStateValues() {
        return this.provisioningStateValues;
    }
}
