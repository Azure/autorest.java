// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package fixtures.paging.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The ProductResultValueWithXMSClientName model.
 */
@Fluent
public final class ProductResultValueWithXMSClientName
    implements JsonSerializable<ProductResultValueWithXMSClientName> {
    /*
     * The values property.
     */
    @Generated
    private List<Product> indexes;

    /*
     * The nextLink property.
     */
    @Generated
    private String nextLink;

    /**
     * Creates an instance of ProductResultValueWithXMSClientName class.
     */
    @Generated
    public ProductResultValueWithXMSClientName() {
    }

    /**
     * Get the indexes property: The values property.
     * 
     * @return the indexes value.
     */
    @Generated
    public List<Product> getIndexes() {
        return this.indexes;
    }

    /**
     * Set the indexes property: The values property.
     * 
     * @param indexes the indexes value to set.
     * @return the ProductResultValueWithXMSClientName object itself.
     */
    @Generated
    public ProductResultValueWithXMSClientName setIndexes(List<Product> indexes) {
        this.indexes = indexes;
        return this;
    }

    /**
     * Get the nextLink property: The nextLink property.
     * 
     * @return the nextLink value.
     */
    @Generated
    public String getNextLink() {
        return this.nextLink;
    }

    /**
     * Set the nextLink property: The nextLink property.
     * 
     * @param nextLink the nextLink value to set.
     * @return the ProductResultValueWithXMSClientName object itself.
     */
    @Generated
    public ProductResultValueWithXMSClientName setNextLink(String nextLink) {
        this.nextLink = nextLink;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (getIndexes() != null) {
            getIndexes().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("values", this.indexes, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeStringField("nextLink", this.nextLink);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ProductResultValueWithXMSClientName from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ProductResultValueWithXMSClientName if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ProductResultValueWithXMSClientName.
     */
    @Generated
    public static ProductResultValueWithXMSClientName fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ProductResultValueWithXMSClientName deserializedProductResultValueWithXMSClientName
                = new ProductResultValueWithXMSClientName();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("values".equals(fieldName)) {
                    List<Product> indexes = reader.readArray(reader1 -> Product.fromJson(reader1));
                    deserializedProductResultValueWithXMSClientName.indexes = indexes;
                } else if ("nextLink".equals(fieldName)) {
                    deserializedProductResultValueWithXMSClientName.nextLink = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedProductResultValueWithXMSClientName;
        });
    }
}
