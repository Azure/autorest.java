// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package fixtures.azurespecials.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Parameter group.
 */
@Fluent
public final class HeaderCustomNamedRequestIdParamGroupingParameters
    implements JsonSerializable<HeaderCustomNamedRequestIdParamGroupingParameters> {
    /*
     * The fooRequestId
     */
    private String fooClientRequestId;

    /**
     * Creates an instance of HeaderCustomNamedRequestIdParamGroupingParameters class.
     */
    public HeaderCustomNamedRequestIdParamGroupingParameters() {
    }

    /**
     * Get the fooClientRequestId property: The fooRequestId.
     * 
     * @return the fooClientRequestId value.
     */
    public String getFooClientRequestId() {
        return this.fooClientRequestId;
    }

    /**
     * Set the fooClientRequestId property: The fooRequestId.
     * 
     * @param fooClientRequestId the fooClientRequestId value to set.
     * @return the HeaderCustomNamedRequestIdParamGroupingParameters object itself.
     */
    public HeaderCustomNamedRequestIdParamGroupingParameters setFooClientRequestId(String fooClientRequestId) {
        this.fooClientRequestId = fooClientRequestId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (getFooClientRequestId() == null) {
            throw new IllegalArgumentException(
                "Missing required property fooClientRequestId in model HeaderCustomNamedRequestIdParamGroupingParameters");
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("foo-client-request-id", this.fooClientRequestId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of HeaderCustomNamedRequestIdParamGroupingParameters from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of HeaderCustomNamedRequestIdParamGroupingParameters if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the HeaderCustomNamedRequestIdParamGroupingParameters.
     */
    public static HeaderCustomNamedRequestIdParamGroupingParameters fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            HeaderCustomNamedRequestIdParamGroupingParameters deserializedHeaderCustomNamedRequestIdParamGroupingParameters
                = new HeaderCustomNamedRequestIdParamGroupingParameters();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("foo-client-request-id".equals(fieldName)) {
                    deserializedHeaderCustomNamedRequestIdParamGroupingParameters.fooClientRequestId
                        = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedHeaderCustomNamedRequestIdParamGroupingParameters;
        });
    }
}
