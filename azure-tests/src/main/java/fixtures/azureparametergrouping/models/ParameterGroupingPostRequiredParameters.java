// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package fixtures.azureparametergrouping.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Parameter group.
 */
@Fluent
public final class ParameterGroupingPostRequiredParameters
    implements JsonSerializable<ParameterGroupingPostRequiredParameters> {
    /*
     * The customHeader property.
     */
    private String customHeader;

    /*
     * Query parameter with default
     */
    private Integer query;

    /*
     * Path parameter
     */
    private String path;

    /*
     * The body property.
     */
    private int body;

    /**
     * Creates an instance of ParameterGroupingPostRequiredParameters class.
     */
    public ParameterGroupingPostRequiredParameters() {
    }

    /**
     * Get the customHeader property: The customHeader property.
     * 
     * @return the customHeader value.
     */
    public String getCustomHeader() {
        return this.customHeader;
    }

    /**
     * Set the customHeader property: The customHeader property.
     * 
     * @param customHeader the customHeader value to set.
     * @return the ParameterGroupingPostRequiredParameters object itself.
     */
    public ParameterGroupingPostRequiredParameters setCustomHeader(String customHeader) {
        this.customHeader = customHeader;
        return this;
    }

    /**
     * Get the query property: Query parameter with default.
     * 
     * @return the query value.
     */
    public Integer getQuery() {
        return this.query;
    }

    /**
     * Set the query property: Query parameter with default.
     * 
     * @param query the query value to set.
     * @return the ParameterGroupingPostRequiredParameters object itself.
     */
    public ParameterGroupingPostRequiredParameters setQuery(Integer query) {
        this.query = query;
        return this;
    }

    /**
     * Get the path property: Path parameter.
     * 
     * @return the path value.
     */
    public String getPath() {
        return this.path;
    }

    /**
     * Set the path property: Path parameter.
     * 
     * @param path the path value to set.
     * @return the ParameterGroupingPostRequiredParameters object itself.
     */
    public ParameterGroupingPostRequiredParameters setPath(String path) {
        this.path = path;
        return this;
    }

    /**
     * Get the body property: The body property.
     * 
     * @return the body value.
     */
    public int getBody() {
        return this.body;
    }

    /**
     * Set the body property: The body property.
     * 
     * @param body the body value to set.
     * @return the ParameterGroupingPostRequiredParameters object itself.
     */
    public ParameterGroupingPostRequiredParameters setBody(int body) {
        this.body = body;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (getPath() == null) {
            throw new IllegalArgumentException(
                "Missing required property path in model ParameterGroupingPostRequiredParameters");
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("path", this.path);
        jsonWriter.writeIntField("body", this.body);
        jsonWriter.writeStringField("customHeader", this.customHeader);
        jsonWriter.writeNumberField("query", this.query);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ParameterGroupingPostRequiredParameters from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ParameterGroupingPostRequiredParameters if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the ParameterGroupingPostRequiredParameters.
     */
    public static ParameterGroupingPostRequiredParameters fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ParameterGroupingPostRequiredParameters deserializedParameterGroupingPostRequiredParameters
                = new ParameterGroupingPostRequiredParameters();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("path".equals(fieldName)) {
                    deserializedParameterGroupingPostRequiredParameters.path = reader.getString();
                } else if ("body".equals(fieldName)) {
                    deserializedParameterGroupingPostRequiredParameters.body = reader.getInt();
                } else if ("customHeader".equals(fieldName)) {
                    deserializedParameterGroupingPostRequiredParameters.customHeader = reader.getString();
                } else if ("query".equals(fieldName)) {
                    deserializedParameterGroupingPostRequiredParameters.query = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedParameterGroupingPostRequiredParameters;
        });
    }
}
