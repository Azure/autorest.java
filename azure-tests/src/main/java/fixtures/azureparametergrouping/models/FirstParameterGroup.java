// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package fixtures.azureparametergrouping.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Parameter group.
 */
@Fluent
public final class FirstParameterGroup implements JsonSerializable<FirstParameterGroup> {
    /*
     * The header-one property.
     */
    private String headerOne;

    /*
     * Query parameter with default
     */
    private Integer queryOne;

    /**
     * Creates an instance of FirstParameterGroup class.
     */
    public FirstParameterGroup() {
    }

    /**
     * Get the headerOne property: The header-one property.
     * 
     * @return the headerOne value.
     */
    public String getHeaderOne() {
        return this.headerOne;
    }

    /**
     * Set the headerOne property: The header-one property.
     * 
     * @param headerOne the headerOne value to set.
     * @return the FirstParameterGroup object itself.
     */
    public FirstParameterGroup setHeaderOne(String headerOne) {
        this.headerOne = headerOne;
        return this;
    }

    /**
     * Get the queryOne property: Query parameter with default.
     * 
     * @return the queryOne value.
     */
    public Integer getQueryOne() {
        return this.queryOne;
    }

    /**
     * Set the queryOne property: Query parameter with default.
     * 
     * @param queryOne the queryOne value to set.
     * @return the FirstParameterGroup object itself.
     */
    public FirstParameterGroup setQueryOne(Integer queryOne) {
        this.queryOne = queryOne;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("header-one", this.headerOne);
        jsonWriter.writeNumberField("query-one", this.queryOne);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of FirstParameterGroup from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of FirstParameterGroup if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the FirstParameterGroup.
     */
    public static FirstParameterGroup fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            FirstParameterGroup deserializedFirstParameterGroup = new FirstParameterGroup();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("header-one".equals(fieldName)) {
                    deserializedFirstParameterGroup.headerOne = reader.getString();
                } else if ("query-one".equals(fieldName)) {
                    deserializedFirstParameterGroup.queryOne = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedFirstParameterGroup;
        });
    }
}
