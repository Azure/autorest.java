// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.containers.containerregistry.models;

import com.azure.core.util.ExpandableStringEnum;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.Collection;

/**
 * Sort options for ordering tags in a collection.
 */
public final class ArtifactTagOrder extends ExpandableStringEnum<ArtifactTagOrder>
    implements JsonSerializable<ArtifactTagOrder> {
    /**
     * Do not provide an orderby value in the request.
     */
    public static final ArtifactTagOrder NONE = fromString("none");

    /**
     * Order tags by LastUpdatedOn field, from most recently updated to least recently updated.
     */
    public static final ArtifactTagOrder LAST_UPDATED_ON_DESCENDING = fromString("timedesc");

    /**
     * Order tags by LastUpdatedOn field, from least recently updated to most recently updated.
     */
    public static final ArtifactTagOrder LAST_UPDATED_ON_ASCENDING = fromString("timeasc");

    /**
     * Creates a new instance of ArtifactTagOrder value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public ArtifactTagOrder() {
    }

    /**
     * Creates or finds a ArtifactTagOrder from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding ArtifactTagOrder.
     */
    public static ArtifactTagOrder fromString(String name) {
        return fromString(name, ArtifactTagOrder.class);
    }

    /**
     * Gets known ArtifactTagOrder values.
     * 
     * @return known ArtifactTagOrder values.
     */
    public static Collection<ArtifactTagOrder> values() {
        return values(ArtifactTagOrder.class);
    }

    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        return jsonWriter.writeString(toString());
    }

    /**
     * Reads a ArtifactTagOrder from the JSON stream.
     * <p>
     * The passed JsonReader must be positioned at a JsonToken.STRING value.
     * 
     * @param jsonReader The JsonReader being read.
     * @return The ArtifactTagOrder that the JSON stream represented, may return null.
     * @throws java.io.IOException If a ArtifactTagOrder fails to be read from the JsonReader.
     */
    public static ArtifactTagOrder fromJson(JsonReader jsonReader) throws IOException {
        return fromString(jsonReader.getString(), ArtifactTagOrder.class);
    }
}
