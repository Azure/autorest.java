// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.openai.implementation;

import com.azure.core.annotation.BodyParam;
import com.azure.core.annotation.Delete;
import com.azure.core.annotation.ExpectedResponses;
import com.azure.core.annotation.Get;
import com.azure.core.annotation.HeaderParam;
import com.azure.core.annotation.Host;
import com.azure.core.annotation.HostParam;
import com.azure.core.annotation.Patch;
import com.azure.core.annotation.PathParam;
import com.azure.core.annotation.Post;
import com.azure.core.annotation.QueryParam;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceInterface;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.annotation.UnexpectedResponseExceptionType;
import com.azure.core.exception.ClientAuthenticationException;
import com.azure.core.exception.HttpResponseException;
import com.azure.core.exception.ResourceModifiedException;
import com.azure.core.exception.ResourceNotFoundException;
import com.azure.core.http.HttpPipeline;
import com.azure.core.http.HttpPipelineBuilder;
import com.azure.core.http.policy.CookiePolicy;
import com.azure.core.http.policy.RetryPolicy;
import com.azure.core.http.policy.UserAgentPolicy;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.RestProxy;
import com.azure.core.util.BinaryData;
import com.azure.core.util.Context;
import com.azure.core.util.FluxUtil;
import com.azure.core.util.serializer.JacksonAdapter;
import com.azure.core.util.serializer.SerializerAdapter;
import com.azure.openai.OpenAiServiceVersion;
import reactor.core.publisher.Mono;

/** Initializes a new instance of the OpenAiClient type. */
public final class OpenAiClientImpl {
    /** The proxy service used to perform REST calls. */
    private final OpenAiClientService service;

    /**
     * Supported Cognitive Services endpoints (protocol and hostname, for example:
     * https://westus.api.cognitive.microsoft.com).
     */
    private final String endpoint;

    /**
     * Gets Supported Cognitive Services endpoints (protocol and hostname, for example:
     * https://westus.api.cognitive.microsoft.com).
     *
     * @return the endpoint value.
     */
    public String getEndpoint() {
        return this.endpoint;
    }

    /** Service version. */
    private final OpenAiServiceVersion serviceVersion;

    /**
     * Gets Service version.
     *
     * @return the serviceVersion value.
     */
    public OpenAiServiceVersion getServiceVersion() {
        return this.serviceVersion;
    }

    /** The HTTP pipeline to send requests through. */
    private final HttpPipeline httpPipeline;

    /**
     * Gets The HTTP pipeline to send requests through.
     *
     * @return the httpPipeline value.
     */
    public HttpPipeline getHttpPipeline() {
        return this.httpPipeline;
    }

    /** The serializer to serialize an object into a string. */
    private final SerializerAdapter serializerAdapter;

    /**
     * Gets The serializer to serialize an object into a string.
     *
     * @return the serializerAdapter value.
     */
    public SerializerAdapter getSerializerAdapter() {
        return this.serializerAdapter;
    }

    /**
     * Initializes an instance of OpenAiClient client.
     *
     * @param endpoint Supported Cognitive Services endpoints (protocol and hostname, for example:
     *     https://westus.api.cognitive.microsoft.com).
     * @param serviceVersion Service version.
     */
    public OpenAiClientImpl(String endpoint, OpenAiServiceVersion serviceVersion) {
        this(
                new HttpPipelineBuilder()
                        .policies(new UserAgentPolicy(), new RetryPolicy(), new CookiePolicy())
                        .build(),
                JacksonAdapter.createDefaultSerializerAdapter(),
                endpoint,
                serviceVersion);
    }

    /**
     * Initializes an instance of OpenAiClient client.
     *
     * @param httpPipeline The HTTP pipeline to send requests through.
     * @param endpoint Supported Cognitive Services endpoints (protocol and hostname, for example:
     *     https://westus.api.cognitive.microsoft.com).
     * @param serviceVersion Service version.
     */
    public OpenAiClientImpl(HttpPipeline httpPipeline, String endpoint, OpenAiServiceVersion serviceVersion) {
        this(httpPipeline, JacksonAdapter.createDefaultSerializerAdapter(), endpoint, serviceVersion);
    }

    /**
     * Initializes an instance of OpenAiClient client.
     *
     * @param httpPipeline The HTTP pipeline to send requests through.
     * @param serializerAdapter The serializer to serialize an object into a string.
     * @param endpoint Supported Cognitive Services endpoints (protocol and hostname, for example:
     *     https://westus.api.cognitive.microsoft.com).
     * @param serviceVersion Service version.
     */
    public OpenAiClientImpl(
            HttpPipeline httpPipeline,
            SerializerAdapter serializerAdapter,
            String endpoint,
            OpenAiServiceVersion serviceVersion) {
        this.httpPipeline = httpPipeline;
        this.serializerAdapter = serializerAdapter;
        this.endpoint = endpoint;
        this.serviceVersion = serviceVersion;
        this.service = RestProxy.create(OpenAiClientService.class, this.httpPipeline, this.getSerializerAdapter());
    }

    /**
     * The interface defining all the services for OpenAiClient to be used by the proxy service to perform REST calls.
     */
    @Host("{endpoint}/openai")
    @ServiceInterface(name = "OpenAiClient")
    public interface OpenAiClientService {
        @Get("/deployments")
        @ExpectedResponses({200})
        @UnexpectedResponseExceptionType(
                value = ClientAuthenticationException.class,
                code = {401})
        @UnexpectedResponseExceptionType(
                value = ResourceNotFoundException.class,
                code = {404})
        @UnexpectedResponseExceptionType(
                value = ResourceModifiedException.class,
                code = {409})
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<BinaryData>> listDeployments(
                @HostParam("endpoint") String endpoint,
                @QueryParam("api-version") String apiVersion,
                @HeaderParam("accept") String accept,
                RequestOptions requestOptions,
                Context context);

        @Post("/deployments")
        @ExpectedResponses({201})
        @UnexpectedResponseExceptionType(
                value = ClientAuthenticationException.class,
                code = {401})
        @UnexpectedResponseExceptionType(
                value = ResourceNotFoundException.class,
                code = {404})
        @UnexpectedResponseExceptionType(
                value = ResourceModifiedException.class,
                code = {409})
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<BinaryData>> createDeployment(
                @HostParam("endpoint") String endpoint,
                @QueryParam("api-version") String apiVersion,
                @HeaderParam("accept") String accept,
                @BodyParam("application/json") BinaryData resourceCreateOrReplaceModel,
                RequestOptions requestOptions,
                Context context);

        @Get("/deployments/{deploymentId}")
        @ExpectedResponses({200})
        @UnexpectedResponseExceptionType(
                value = ClientAuthenticationException.class,
                code = {401})
        @UnexpectedResponseExceptionType(
                value = ResourceNotFoundException.class,
                code = {404})
        @UnexpectedResponseExceptionType(
                value = ResourceModifiedException.class,
                code = {409})
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<BinaryData>> getDeployment(
                @HostParam("endpoint") String endpoint,
                @PathParam("deploymentId") String deploymentId,
                @QueryParam("api-version") String apiVersion,
                @HeaderParam("accept") String accept,
                RequestOptions requestOptions,
                Context context);

        @Patch("/deployments/{deploymentId}")
        @ExpectedResponses({200, 201})
        @UnexpectedResponseExceptionType(
                value = ClientAuthenticationException.class,
                code = {401})
        @UnexpectedResponseExceptionType(
                value = ResourceNotFoundException.class,
                code = {404})
        @UnexpectedResponseExceptionType(
                value = ResourceModifiedException.class,
                code = {409})
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<BinaryData>> updateDeployment(
                @HostParam("endpoint") String endpoint,
                @PathParam("deploymentId") String deploymentId,
                @HeaderParam("Content-Type") String contentType,
                @QueryParam("api-version") String apiVersion,
                @HeaderParam("accept") String accept,
                @BodyParam("application/merge-patch+json") BinaryData deployment,
                RequestOptions requestOptions,
                Context context);

        @Delete("/deployments/{deploymentId}")
        @ExpectedResponses({204})
        @UnexpectedResponseExceptionType(
                value = ClientAuthenticationException.class,
                code = {401})
        @UnexpectedResponseExceptionType(
                value = ResourceNotFoundException.class,
                code = {404})
        @UnexpectedResponseExceptionType(
                value = ResourceModifiedException.class,
                code = {409})
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<Void>> deleteDeployment(
                @HostParam("endpoint") String endpoint,
                @PathParam("deploymentId") String deploymentId,
                @QueryParam("api-version") String apiVersion,
                @HeaderParam("accept") String accept,
                RequestOptions requestOptions,
                Context context);

        @Get("/files")
        @ExpectedResponses({200})
        @UnexpectedResponseExceptionType(
                value = ClientAuthenticationException.class,
                code = {401})
        @UnexpectedResponseExceptionType(
                value = ResourceNotFoundException.class,
                code = {404})
        @UnexpectedResponseExceptionType(
                value = ResourceModifiedException.class,
                code = {409})
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<BinaryData>> listFiles(
                @HostParam("endpoint") String endpoint,
                @QueryParam("api-version") String apiVersion,
                @HeaderParam("accept") String accept,
                RequestOptions requestOptions,
                Context context);

        @Post("/files")
        @ExpectedResponses({201})
        @UnexpectedResponseExceptionType(
                value = ClientAuthenticationException.class,
                code = {401})
        @UnexpectedResponseExceptionType(
                value = ResourceNotFoundException.class,
                code = {404})
        @UnexpectedResponseExceptionType(
                value = ResourceModifiedException.class,
                code = {409})
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<BinaryData>> uploadFile(
                @HostParam("endpoint") String endpoint,
                @QueryParam("api-version") String apiVersion,
                @HeaderParam("accept") String accept,
                @BodyParam("application/json") BinaryData resourceCreateOrReplaceModel,
                RequestOptions requestOptions,
                Context context);

        @Get("/files/{fileId}")
        @ExpectedResponses({200})
        @UnexpectedResponseExceptionType(
                value = ClientAuthenticationException.class,
                code = {401})
        @UnexpectedResponseExceptionType(
                value = ResourceNotFoundException.class,
                code = {404})
        @UnexpectedResponseExceptionType(
                value = ResourceModifiedException.class,
                code = {409})
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<BinaryData>> getFile(
                @HostParam("endpoint") String endpoint,
                @PathParam("fileId") String fileId,
                @QueryParam("api-version") String apiVersion,
                @HeaderParam("accept") String accept,
                RequestOptions requestOptions,
                Context context);

        @Delete("/files/{fileId}")
        @ExpectedResponses({204})
        @UnexpectedResponseExceptionType(
                value = ClientAuthenticationException.class,
                code = {401})
        @UnexpectedResponseExceptionType(
                value = ResourceNotFoundException.class,
                code = {404})
        @UnexpectedResponseExceptionType(
                value = ResourceModifiedException.class,
                code = {409})
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<Void>> deleteFile(
                @HostParam("endpoint") String endpoint,
                @PathParam("fileId") String fileId,
                @QueryParam("api-version") String apiVersion,
                @HeaderParam("accept") String accept,
                RequestOptions requestOptions,
                Context context);

        @Get("/files/{fileId}:content")
        @ExpectedResponses({200})
        @UnexpectedResponseExceptionType(
                value = ClientAuthenticationException.class,
                code = {401})
        @UnexpectedResponseExceptionType(
                value = ResourceNotFoundException.class,
                code = {404})
        @UnexpectedResponseExceptionType(
                value = ResourceModifiedException.class,
                code = {409})
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<BinaryData>> getFileContent(
                @HostParam("endpoint") String endpoint,
                @PathParam("fileId") String fileId,
                @QueryParam("api-version") String apiVersion,
                @HeaderParam("accept") String accept,
                RequestOptions requestOptions,
                Context context);

        @Post("/files/import")
        @ExpectedResponses({201})
        @UnexpectedResponseExceptionType(
                value = ClientAuthenticationException.class,
                code = {401})
        @UnexpectedResponseExceptionType(
                value = ResourceNotFoundException.class,
                code = {404})
        @UnexpectedResponseExceptionType(
                value = ResourceModifiedException.class,
                code = {409})
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<BinaryData>> importFile(
                @HostParam("endpoint") String endpoint,
                @QueryParam("api-version") String apiVersion,
                @HeaderParam("accept") String accept,
                @BodyParam("application/json") BinaryData body,
                RequestOptions requestOptions,
                Context context);

        @Get("/fine-tunes")
        @ExpectedResponses({200})
        @UnexpectedResponseExceptionType(
                value = ClientAuthenticationException.class,
                code = {401})
        @UnexpectedResponseExceptionType(
                value = ResourceNotFoundException.class,
                code = {404})
        @UnexpectedResponseExceptionType(
                value = ResourceModifiedException.class,
                code = {409})
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<BinaryData>> listFineTunes(
                @HostParam("endpoint") String endpoint,
                @QueryParam("api-version") String apiVersion,
                @HeaderParam("accept") String accept,
                RequestOptions requestOptions,
                Context context);

        @Post("/fine-tunes")
        @ExpectedResponses({201})
        @UnexpectedResponseExceptionType(
                value = ClientAuthenticationException.class,
                code = {401})
        @UnexpectedResponseExceptionType(
                value = ResourceNotFoundException.class,
                code = {404})
        @UnexpectedResponseExceptionType(
                value = ResourceModifiedException.class,
                code = {409})
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<BinaryData>> createFineTune(
                @HostParam("endpoint") String endpoint,
                @QueryParam("api-version") String apiVersion,
                @HeaderParam("accept") String accept,
                @BodyParam("application/json") BinaryData fineTuneCreation,
                RequestOptions requestOptions,
                Context context);

        @Get("/fine-tunes/{fineTuneId}")
        @ExpectedResponses({200})
        @UnexpectedResponseExceptionType(
                value = ClientAuthenticationException.class,
                code = {401})
        @UnexpectedResponseExceptionType(
                value = ResourceNotFoundException.class,
                code = {404})
        @UnexpectedResponseExceptionType(
                value = ResourceModifiedException.class,
                code = {409})
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<BinaryData>> getFineTune(
                @HostParam("endpoint") String endpoint,
                @PathParam("fineTuneId") String fineTuneId,
                @QueryParam("api-version") String apiVersion,
                @HeaderParam("accept") String accept,
                RequestOptions requestOptions,
                Context context);

        @Delete("/fine-tunes/{fineTuneId}")
        @ExpectedResponses({204})
        @UnexpectedResponseExceptionType(
                value = ClientAuthenticationException.class,
                code = {401})
        @UnexpectedResponseExceptionType(
                value = ResourceNotFoundException.class,
                code = {404})
        @UnexpectedResponseExceptionType(
                value = ResourceModifiedException.class,
                code = {409})
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<Void>> deleteFineTune(
                @HostParam("endpoint") String endpoint,
                @PathParam("fineTuneId") String fineTuneId,
                @QueryParam("api-version") String apiVersion,
                @HeaderParam("accept") String accept,
                RequestOptions requestOptions,
                Context context);

        @Get("/fine-tunes/{fineTuneId}:listFineTuneEvents")
        @ExpectedResponses({200})
        @UnexpectedResponseExceptionType(
                value = ClientAuthenticationException.class,
                code = {401})
        @UnexpectedResponseExceptionType(
                value = ResourceNotFoundException.class,
                code = {404})
        @UnexpectedResponseExceptionType(
                value = ResourceModifiedException.class,
                code = {409})
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<BinaryData>> listFineTuneEvents(
                @HostParam("endpoint") String endpoint,
                @PathParam("fineTuneId") String fineTuneId,
                @QueryParam("stream") boolean stream,
                @QueryParam("api-version") String apiVersion,
                @HeaderParam("accept") String accept,
                RequestOptions requestOptions,
                Context context);

        @Post("/fine-tunes/{fineTuneId}:cancel")
        @ExpectedResponses({200})
        @UnexpectedResponseExceptionType(
                value = ClientAuthenticationException.class,
                code = {401})
        @UnexpectedResponseExceptionType(
                value = ResourceNotFoundException.class,
                code = {404})
        @UnexpectedResponseExceptionType(
                value = ResourceModifiedException.class,
                code = {409})
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<BinaryData>> cancelFineTune(
                @HostParam("endpoint") String endpoint,
                @PathParam("fineTuneId") String fineTuneId,
                @QueryParam("api-version") String apiVersion,
                @HeaderParam("accept") String accept,
                RequestOptions requestOptions,
                Context context);

        @Get("/models")
        @ExpectedResponses({200})
        @UnexpectedResponseExceptionType(
                value = ClientAuthenticationException.class,
                code = {401})
        @UnexpectedResponseExceptionType(
                value = ResourceNotFoundException.class,
                code = {404})
        @UnexpectedResponseExceptionType(
                value = ResourceModifiedException.class,
                code = {409})
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<BinaryData>> listModels(
                @HostParam("endpoint") String endpoint,
                @QueryParam("api-version") String apiVersion,
                @HeaderParam("accept") String accept,
                RequestOptions requestOptions,
                Context context);

        @Get("/models/{model_id}")
        @ExpectedResponses({200})
        @UnexpectedResponseExceptionType(
                value = ClientAuthenticationException.class,
                code = {401})
        @UnexpectedResponseExceptionType(
                value = ResourceNotFoundException.class,
                code = {404})
        @UnexpectedResponseExceptionType(
                value = ResourceModifiedException.class,
                code = {409})
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<BinaryData>> getModel(
                @HostParam("endpoint") String endpoint,
                @PathParam("model_id") String modelId,
                @QueryParam("api-version") String apiVersion,
                @HeaderParam("accept") String accept,
                RequestOptions requestOptions,
                Context context);
    }

    /**
     * Gets the list of deployments owned by the Azure OpenAI resource.
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String (Optional)
     *     data (Optional): [
     *          (Optional){
     *             object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *             status: String(notRunning/running/succeeded/canceled/failed/deleted) (Required)
     *             created_at: int (Required)
     *             updated_at: int (Required)
     *             id: String (Required)
     *             model: String (Required)
     *             owner: String (Optional)
     *             scale_settings (Required): {
     *             }
     *         }
     *     ]
     * }
     * }</pre>
     *
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the list of deployments owned by the Azure OpenAI resource along with {@link Response} on successful
     *     completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> listDeploymentsWithResponseAsync(RequestOptions requestOptions) {
        final String accept = "application/json";
        return FluxUtil.withContext(
                context ->
                        service.listDeployments(
                                this.getEndpoint(),
                                this.getServiceVersion().getVersion(),
                                accept,
                                requestOptions,
                                context));
    }

    /**
     * Gets the list of deployments owned by the Azure OpenAI resource.
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String (Optional)
     *     data (Optional): [
     *          (Optional){
     *             object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *             status: String(notRunning/running/succeeded/canceled/failed/deleted) (Required)
     *             created_at: int (Required)
     *             updated_at: int (Required)
     *             id: String (Required)
     *             model: String (Required)
     *             owner: String (Optional)
     *             scale_settings (Required): {
     *             }
     *         }
     *     ]
     * }
     * }</pre>
     *
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the list of deployments owned by the Azure OpenAI resource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> listDeploymentsWithResponse(RequestOptions requestOptions) {
        return listDeploymentsWithResponseAsync(requestOptions).block();
    }

    /**
     * Creates a new deployment for the Azure OpenAI resource according to the given specification.
     *
     * <p><strong>Request Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     model: String (Required)
     *     scale_settings (Required): {
     *     }
     * }
     * }</pre>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *     status: String(notRunning/running/succeeded/canceled/failed/deleted) (Required)
     *     created_at: int (Required)
     *     updated_at: int (Required)
     *     id: String (Required)
     *     model: String (Required)
     *     owner: String (Optional)
     *     scale_settings (Required): {
     *     }
     * }
     * }</pre>
     *
     * @param resourceCreateOrReplaceModel The template for adding updateable properties.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the response body along with {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> createDeploymentWithResponseAsync(
            BinaryData resourceCreateOrReplaceModel, RequestOptions requestOptions) {
        final String accept = "application/json";
        return FluxUtil.withContext(
                context ->
                        service.createDeployment(
                                this.getEndpoint(),
                                this.getServiceVersion().getVersion(),
                                accept,
                                resourceCreateOrReplaceModel,
                                requestOptions,
                                context));
    }

    /**
     * Creates a new deployment for the Azure OpenAI resource according to the given specification.
     *
     * <p><strong>Request Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     model: String (Required)
     *     scale_settings (Required): {
     *     }
     * }
     * }</pre>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *     status: String(notRunning/running/succeeded/canceled/failed/deleted) (Required)
     *     created_at: int (Required)
     *     updated_at: int (Required)
     *     id: String (Required)
     *     model: String (Required)
     *     owner: String (Optional)
     *     scale_settings (Required): {
     *     }
     * }
     * }</pre>
     *
     * @param resourceCreateOrReplaceModel The template for adding updateable properties.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the response body along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> createDeploymentWithResponse(
            BinaryData resourceCreateOrReplaceModel, RequestOptions requestOptions) {
        return createDeploymentWithResponseAsync(resourceCreateOrReplaceModel, requestOptions).block();
    }

    /**
     * Gets details for a single deployment specified by the given deployment_id.
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *     status: String(notRunning/running/succeeded/canceled/failed/deleted) (Required)
     *     created_at: int (Required)
     *     updated_at: int (Required)
     *     id: String (Required)
     *     model: String (Required)
     *     owner: String (Optional)
     *     scale_settings (Required): {
     *     }
     * }
     * }</pre>
     *
     * @param deploymentId The identifier of the deployment.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return details for a single deployment specified by the given deployment_id along with {@link Response} on
     *     successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> getDeploymentWithResponseAsync(
            String deploymentId, RequestOptions requestOptions) {
        final String accept = "application/json";
        return FluxUtil.withContext(
                context ->
                        service.getDeployment(
                                this.getEndpoint(),
                                deploymentId,
                                this.getServiceVersion().getVersion(),
                                accept,
                                requestOptions,
                                context));
    }

    /**
     * Gets details for a single deployment specified by the given deployment_id.
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *     status: String(notRunning/running/succeeded/canceled/failed/deleted) (Required)
     *     created_at: int (Required)
     *     updated_at: int (Required)
     *     id: String (Required)
     *     model: String (Required)
     *     owner: String (Optional)
     *     scale_settings (Required): {
     *     }
     * }
     * }</pre>
     *
     * @param deploymentId The identifier of the deployment.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return details for a single deployment specified by the given deployment_id along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> getDeploymentWithResponse(String deploymentId, RequestOptions requestOptions) {
        return getDeploymentWithResponseAsync(deploymentId, requestOptions).block();
    }

    /**
     * Updates the mutable details of the deployment with the given deployment_id.
     *
     * <p><strong>Request Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *     status: String(notRunning/running/succeeded/canceled/failed/deleted) (Required)
     *     created_at: int (Required)
     *     updated_at: int (Required)
     *     id: String (Required)
     *     model: String (Required)
     *     owner: String (Optional)
     *     scale_settings (Required): {
     *     }
     * }
     * }</pre>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *     status: String(notRunning/running/succeeded/canceled/failed/deleted) (Required)
     *     created_at: int (Required)
     *     updated_at: int (Required)
     *     id: String (Required)
     *     model: String (Required)
     *     owner: String (Optional)
     *     scale_settings (Required): {
     *     }
     * }
     * }</pre>
     *
     * @param deploymentId The identifier of the deployment.
     * @param deployment Deployments manage the reserved quota for Azure OpenAI models and make them available for
     *     inference requests.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return deployments manage the reserved quota for Azure OpenAI models and make them available for inference
     *     requests along with {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> updateDeploymentWithResponseAsync(
            String deploymentId, BinaryData deployment, RequestOptions requestOptions) {
        final String contentType = "application/merge-patch+json";
        final String accept = "application/json";
        return FluxUtil.withContext(
                context ->
                        service.updateDeployment(
                                this.getEndpoint(),
                                deploymentId,
                                contentType,
                                this.getServiceVersion().getVersion(),
                                accept,
                                deployment,
                                requestOptions,
                                context));
    }

    /**
     * Updates the mutable details of the deployment with the given deployment_id.
     *
     * <p><strong>Request Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *     status: String(notRunning/running/succeeded/canceled/failed/deleted) (Required)
     *     created_at: int (Required)
     *     updated_at: int (Required)
     *     id: String (Required)
     *     model: String (Required)
     *     owner: String (Optional)
     *     scale_settings (Required): {
     *     }
     * }
     * }</pre>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *     status: String(notRunning/running/succeeded/canceled/failed/deleted) (Required)
     *     created_at: int (Required)
     *     updated_at: int (Required)
     *     id: String (Required)
     *     model: String (Required)
     *     owner: String (Optional)
     *     scale_settings (Required): {
     *     }
     * }
     * }</pre>
     *
     * @param deploymentId The identifier of the deployment.
     * @param deployment Deployments manage the reserved quota for Azure OpenAI models and make them available for
     *     inference requests.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return deployments manage the reserved quota for Azure OpenAI models and make them available for inference
     *     requests along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> updateDeploymentWithResponse(
            String deploymentId, BinaryData deployment, RequestOptions requestOptions) {
        return updateDeploymentWithResponseAsync(deploymentId, deployment, requestOptions).block();
    }

    /**
     * Deletes the deployment specified by the given deployment_id.
     *
     * @param deploymentId The identifier of the deployment.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<Void>> deleteDeploymentWithResponseAsync(String deploymentId, RequestOptions requestOptions) {
        final String accept = "application/json";
        return FluxUtil.withContext(
                context ->
                        service.deleteDeployment(
                                this.getEndpoint(),
                                deploymentId,
                                this.getServiceVersion().getVersion(),
                                accept,
                                requestOptions,
                                context));
    }

    /**
     * Deletes the deployment specified by the given deployment_id.
     *
     * @param deploymentId The identifier of the deployment.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<Void> deleteDeploymentWithResponse(String deploymentId, RequestOptions requestOptions) {
        return deleteDeploymentWithResponseAsync(deploymentId, requestOptions).block();
    }

    /**
     * Gets a list of all files owned by the Azure OpenAI resource. These include user uploaded content like files with
     * purpose "fine-tune" for training or validation of fine-tunes models as well as files that are generated by the
     * service such as "fine-tune-results" which contains various metrics for the corresponding fine-tune job.
     *
     * <p>Gets a list of all files owned by the Azure OpenAI resource. These include user uploaded content like files
     * with purpose "fine-tune" for training or validation of fine-tunes models as well as files that are generated by
     * the service such as "fine-tune-results" which contains various metrics for the corresponding fine-tune job.
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String (Optional)
     *     data (Optional): [
     *          (Optional){
     *             object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *             status: String(notRunning/running/succeeded/canceled/failed/deleted) (Optional)
     *             created_at: Integer (Optional)
     *             updated_at: Integer (Optional)
     *             id: String (Required)
     *             bytes: Integer (Optional)
     *             purpose: String(fine-tune/fine-tune-results) (Required)
     *             filename: String (Required)
     *         }
     *     ]
     * }
     * }</pre>
     *
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return a list of all files owned by the Azure OpenAI resource. These include user uploaded content like files
     *     with purpose "fine-tune" for training or validation of fine-tunes models as well as files that are generated
     *     by the service such as "fine-tune-results" which contains various metrics for the corresponding fine-tune job
     *     along with {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> listFilesWithResponseAsync(RequestOptions requestOptions) {
        final String accept = "application/json";
        return FluxUtil.withContext(
                context ->
                        service.listFiles(
                                this.getEndpoint(),
                                this.getServiceVersion().getVersion(),
                                accept,
                                requestOptions,
                                context));
    }

    /**
     * Gets a list of all files owned by the Azure OpenAI resource. These include user uploaded content like files with
     * purpose "fine-tune" for training or validation of fine-tunes models as well as files that are generated by the
     * service such as "fine-tune-results" which contains various metrics for the corresponding fine-tune job.
     *
     * <p>Gets a list of all files owned by the Azure OpenAI resource. These include user uploaded content like files
     * with purpose "fine-tune" for training or validation of fine-tunes models as well as files that are generated by
     * the service such as "fine-tune-results" which contains various metrics for the corresponding fine-tune job.
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String (Optional)
     *     data (Optional): [
     *          (Optional){
     *             object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *             status: String(notRunning/running/succeeded/canceled/failed/deleted) (Optional)
     *             created_at: Integer (Optional)
     *             updated_at: Integer (Optional)
     *             id: String (Required)
     *             bytes: Integer (Optional)
     *             purpose: String(fine-tune/fine-tune-results) (Required)
     *             filename: String (Required)
     *         }
     *     ]
     * }
     * }</pre>
     *
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return a list of all files owned by the Azure OpenAI resource. These include user uploaded content like files
     *     with purpose "fine-tune" for training or validation of fine-tunes models as well as files that are generated
     *     by the service such as "fine-tune-results" which contains various metrics for the corresponding fine-tune job
     *     along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> listFilesWithResponse(RequestOptions requestOptions) {
        return listFilesWithResponseAsync(requestOptions).block();
    }

    /**
     * Creates a new file entity by uploading data from a local machine. Uploaded files can, for example, be used for
     * training or evaluating fine-tuned models.
     *
     * <p><strong>Request Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     purpose: String(fine-tune/fine-tune-results) (Required)
     *     filename: String (Required)
     * }
     * }</pre>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *     status: String(notRunning/running/succeeded/canceled/failed/deleted) (Required)
     *     created_at: int (Required)
     *     updated_at: int (Required)
     *     id: String (Required)
     *     model: String (Required)
     *     owner: String (Optional)
     *     scale_settings (Required): {
     *     }
     * }
     * }</pre>
     *
     * @param resourceCreateOrReplaceModel The template for adding updateable properties.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the response body along with {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> uploadFileWithResponseAsync(
            BinaryData resourceCreateOrReplaceModel, RequestOptions requestOptions) {
        final String accept = "application/json";
        return FluxUtil.withContext(
                context ->
                        service.uploadFile(
                                this.getEndpoint(),
                                this.getServiceVersion().getVersion(),
                                accept,
                                resourceCreateOrReplaceModel,
                                requestOptions,
                                context));
    }

    /**
     * Creates a new file entity by uploading data from a local machine. Uploaded files can, for example, be used for
     * training or evaluating fine-tuned models.
     *
     * <p><strong>Request Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     purpose: String(fine-tune/fine-tune-results) (Required)
     *     filename: String (Required)
     * }
     * }</pre>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *     status: String(notRunning/running/succeeded/canceled/failed/deleted) (Required)
     *     created_at: int (Required)
     *     updated_at: int (Required)
     *     id: String (Required)
     *     model: String (Required)
     *     owner: String (Optional)
     *     scale_settings (Required): {
     *     }
     * }
     * }</pre>
     *
     * @param resourceCreateOrReplaceModel The template for adding updateable properties.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the response body along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> uploadFileWithResponse(
            BinaryData resourceCreateOrReplaceModel, RequestOptions requestOptions) {
        return uploadFileWithResponseAsync(resourceCreateOrReplaceModel, requestOptions).block();
    }

    /**
     * Gets details for a single file specified by the given file_id including status, size, purpose, etc.
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *     status: String(notRunning/running/succeeded/canceled/failed/deleted) (Optional)
     *     created_at: Integer (Optional)
     *     updated_at: Integer (Optional)
     *     id: String (Required)
     *     bytes: Integer (Optional)
     *     purpose: String(fine-tune/fine-tune-results) (Required)
     *     filename: String (Required)
     * }
     * }</pre>
     *
     * @param fileId The identity of this item.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return details for a single file specified by the given file_id including status, size, purpose, etc along with
     *     {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> getFileWithResponseAsync(String fileId, RequestOptions requestOptions) {
        final String accept = "application/json";
        return FluxUtil.withContext(
                context ->
                        service.getFile(
                                this.getEndpoint(),
                                fileId,
                                this.getServiceVersion().getVersion(),
                                accept,
                                requestOptions,
                                context));
    }

    /**
     * Gets details for a single file specified by the given file_id including status, size, purpose, etc.
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *     status: String(notRunning/running/succeeded/canceled/failed/deleted) (Optional)
     *     created_at: Integer (Optional)
     *     updated_at: Integer (Optional)
     *     id: String (Required)
     *     bytes: Integer (Optional)
     *     purpose: String(fine-tune/fine-tune-results) (Required)
     *     filename: String (Required)
     * }
     * }</pre>
     *
     * @param fileId The identity of this item.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return details for a single file specified by the given file_id including status, size, purpose, etc along with
     *     {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> getFileWithResponse(String fileId, RequestOptions requestOptions) {
        return getFileWithResponseAsync(fileId, requestOptions).block();
    }

    /**
     * Deletes the file with the given file_id. Deletion is also allowed if a file was used, e.g., as training file in a
     * fine-tune job.
     *
     * @param fileId The identity of this item.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<Void>> deleteFileWithResponseAsync(String fileId, RequestOptions requestOptions) {
        final String accept = "application/json";
        return FluxUtil.withContext(
                context ->
                        service.deleteFile(
                                this.getEndpoint(),
                                fileId,
                                this.getServiceVersion().getVersion(),
                                accept,
                                requestOptions,
                                context));
    }

    /**
     * Deletes the file with the given file_id. Deletion is also allowed if a file was used, e.g., as training file in a
     * fine-tune job.
     *
     * @param fileId The identity of this item.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<Void> deleteFileWithResponse(String fileId, RequestOptions requestOptions) {
        return deleteFileWithResponseAsync(fileId, requestOptions).block();
    }

    /**
     * Gets the content of the file specified by the given file_id. Files can be user uploaded content or generated by
     * the service like result metrics of a fine-tune job.
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     purpose: String(fine-tune/fine-tune-results) (Required)
     *     file: byte[] (Required)
     * }
     * }</pre>
     *
     * @param fileId The identity of this item.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the content of the file specified by the given file_id. Files can be user uploaded content or generated
     *     by the service like result metrics of a fine-tune job along with {@link Response} on successful completion of
     *     {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> getFileContentWithResponseAsync(String fileId, RequestOptions requestOptions) {
        final String accept = "application/json";
        return FluxUtil.withContext(
                context ->
                        service.getFileContent(
                                this.getEndpoint(),
                                fileId,
                                this.getServiceVersion().getVersion(),
                                accept,
                                requestOptions,
                                context));
    }

    /**
     * Gets the content of the file specified by the given file_id. Files can be user uploaded content or generated by
     * the service like result metrics of a fine-tune job.
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     purpose: String(fine-tune/fine-tune-results) (Required)
     *     file: byte[] (Required)
     * }
     * }</pre>
     *
     * @param fileId The identity of this item.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the content of the file specified by the given file_id. Files can be user uploaded content or generated
     *     by the service like result metrics of a fine-tune job along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> getFileContentWithResponse(String fileId, RequestOptions requestOptions) {
        return getFileContentWithResponseAsync(fileId, requestOptions).block();
    }

    /**
     * Creates a new file entity by importing data from a provided url. Uploaded files can, for example, be used for
     * training or evaluating fine-tuned models.
     *
     * <p><strong>Request Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     purpose: String(fine-tune/fine-tune-results) (Required)
     *     filename: String (Required)
     *     content_url: String (Required)
     * }
     * }</pre>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *     status: String(notRunning/running/succeeded/canceled/failed/deleted) (Optional)
     *     created_at: Integer (Optional)
     *     updated_at: Integer (Optional)
     *     id: String (Required)
     *     bytes: Integer (Optional)
     *     purpose: String(fine-tune/fine-tune-results) (Required)
     *     filename: String (Required)
     * }
     * }</pre>
     *
     * @param body expected schema for the body of the completion post request.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return a file is a document usable for training and validation along with {@link Response} on successful
     *     completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> importFileWithResponseAsync(BinaryData body, RequestOptions requestOptions) {
        final String accept = "application/json";
        return FluxUtil.withContext(
                context ->
                        service.importFile(
                                this.getEndpoint(),
                                this.getServiceVersion().getVersion(),
                                accept,
                                body,
                                requestOptions,
                                context));
    }

    /**
     * Creates a new file entity by importing data from a provided url. Uploaded files can, for example, be used for
     * training or evaluating fine-tuned models.
     *
     * <p><strong>Request Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     purpose: String(fine-tune/fine-tune-results) (Required)
     *     filename: String (Required)
     *     content_url: String (Required)
     * }
     * }</pre>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *     status: String(notRunning/running/succeeded/canceled/failed/deleted) (Optional)
     *     created_at: Integer (Optional)
     *     updated_at: Integer (Optional)
     *     id: String (Required)
     *     bytes: Integer (Optional)
     *     purpose: String(fine-tune/fine-tune-results) (Required)
     *     filename: String (Required)
     * }
     * }</pre>
     *
     * @param body expected schema for the body of the completion post request.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return a file is a document usable for training and validation along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> importFileWithResponse(BinaryData body, RequestOptions requestOptions) {
        return importFileWithResponseAsync(body, requestOptions).block();
    }

    /**
     * Gets a list of all fine-tune jobs owned by the Azure OpenAI resource. The details that are returned for each
     * fine-tune job contain besides its identifier the base model, training and validation files, hyper parameters,
     * time stamps, status and events. Events are created when the job status changes, e.g. running or complete, and
     * when results are uploaded.
     *
     * <p>Gets a list of all fine-tune jobs owned by the Azure OpenAI resource. The details that are returned for each
     * fine-tune job contain besides its identifier the base model, training and validation files, hyper parameters,
     * time stamps, status and events. Events are created when the job status changes, e.g. running or complete, and
     * when results are uploaded.
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String (Optional)
     *     data (Optional): [
     *          (Optional){
     *             object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *             status: String(notRunning/running/succeeded/canceled/failed/deleted) (Optional)
     *             created_at: Integer (Optional)
     *             updated_at: Integer (Optional)
     *             id: String (Required)
     *             model: String (Required)
     *             fine_tuned_model: String (Optional)
     *             training_files (Required): [
     *                  (Required){
     *                     object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *                     status: String(notRunning/running/succeeded/canceled/failed/deleted) (Optional)
     *                     created_at: Integer (Optional)
     *                     updated_at: Integer (Optional)
     *                     id: String (Required)
     *                     bytes: Integer (Optional)
     *                     purpose: String(fine-tune/fine-tune-results) (Required)
     *                     filename: String (Required)
     *                 }
     *             ]
     *             validation_files (Optional): [
     *                 (recursive schema, see above)
     *             ]
     *             result_files (Optional): [
     *                 (recursive schema, see above)
     *             ]
     *             events (Optional): [
     *                  (Optional){
     *                     object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *                     created_at: Integer (Optional)
     *                     level: String(info/warning/error) (Optional)
     *                     message: String (Optional)
     *                 }
     *             ]
     *             organisation_id: String (Optional)
     *             user_id: String (Optional)
     *             hyperparams (Optional): {
     *                 batch_size: Integer (Optional)
     *                 learning_rate_multiplier: Double (Optional)
     *                 n_epochs: Integer (Optional)
     *                 prompt_loss_weight: Double (Optional)
     *                 compute_classification_metrics: Boolean (Optional)
     *                 classification_n_classes: Integer (Optional)
     *                 classification_positive_class: String (Optional)
     *                 classification_betas (Optional): [
     *                     double (Optional)
     *                 ]
     *             }
     *         }
     *     ]
     * }
     * }</pre>
     *
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return a list of all fine-tune jobs owned by the Azure OpenAI resource. The details that are returned for each
     *     fine-tune job contain besides its identifier the base model, training and validation files, hyper parameters,
     *     time stamps, status and events along with {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> listFineTunesWithResponseAsync(RequestOptions requestOptions) {
        final String accept = "application/json";
        return FluxUtil.withContext(
                context ->
                        service.listFineTunes(
                                this.getEndpoint(),
                                this.getServiceVersion().getVersion(),
                                accept,
                                requestOptions,
                                context));
    }

    /**
     * Gets a list of all fine-tune jobs owned by the Azure OpenAI resource. The details that are returned for each
     * fine-tune job contain besides its identifier the base model, training and validation files, hyper parameters,
     * time stamps, status and events. Events are created when the job status changes, e.g. running or complete, and
     * when results are uploaded.
     *
     * <p>Gets a list of all fine-tune jobs owned by the Azure OpenAI resource. The details that are returned for each
     * fine-tune job contain besides its identifier the base model, training and validation files, hyper parameters,
     * time stamps, status and events. Events are created when the job status changes, e.g. running or complete, and
     * when results are uploaded.
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String (Optional)
     *     data (Optional): [
     *          (Optional){
     *             object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *             status: String(notRunning/running/succeeded/canceled/failed/deleted) (Optional)
     *             created_at: Integer (Optional)
     *             updated_at: Integer (Optional)
     *             id: String (Required)
     *             model: String (Required)
     *             fine_tuned_model: String (Optional)
     *             training_files (Required): [
     *                  (Required){
     *                     object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *                     status: String(notRunning/running/succeeded/canceled/failed/deleted) (Optional)
     *                     created_at: Integer (Optional)
     *                     updated_at: Integer (Optional)
     *                     id: String (Required)
     *                     bytes: Integer (Optional)
     *                     purpose: String(fine-tune/fine-tune-results) (Required)
     *                     filename: String (Required)
     *                 }
     *             ]
     *             validation_files (Optional): [
     *                 (recursive schema, see above)
     *             ]
     *             result_files (Optional): [
     *                 (recursive schema, see above)
     *             ]
     *             events (Optional): [
     *                  (Optional){
     *                     object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *                     created_at: Integer (Optional)
     *                     level: String(info/warning/error) (Optional)
     *                     message: String (Optional)
     *                 }
     *             ]
     *             organisation_id: String (Optional)
     *             user_id: String (Optional)
     *             hyperparams (Optional): {
     *                 batch_size: Integer (Optional)
     *                 learning_rate_multiplier: Double (Optional)
     *                 n_epochs: Integer (Optional)
     *                 prompt_loss_weight: Double (Optional)
     *                 compute_classification_metrics: Boolean (Optional)
     *                 classification_n_classes: Integer (Optional)
     *                 classification_positive_class: String (Optional)
     *                 classification_betas (Optional): [
     *                     double (Optional)
     *                 ]
     *             }
     *         }
     *     ]
     * }
     * }</pre>
     *
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return a list of all fine-tune jobs owned by the Azure OpenAI resource. The details that are returned for each
     *     fine-tune job contain besides its identifier the base model, training and validation files, hyper parameters,
     *     time stamps, status and events along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> listFineTunesWithResponse(RequestOptions requestOptions) {
        return listFineTunesWithResponseAsync(requestOptions).block();
    }

    /**
     * Creates a job that fine-tunes a specified model from a given training file. Response includes details of the
     * enqueued job including job status and hyper parameters. The name of the fine-tuned model is added to the response
     * once complete.
     *
     * <p><strong>Request Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     model: String (Required)
     *     training_file: String (Required)
     *     validation_file: String (Optional)
     *     hyperparams (Optional): {
     *         batch_size: Integer (Optional)
     *         learning_rate_multiplier: Double (Optional)
     *         n_epochs: Integer (Optional)
     *         prompt_loss_weight: Double (Optional)
     *         compute_classification_metrics: Boolean (Optional)
     *         classification_n_classes: Integer (Optional)
     *         classification_positive_class: String (Optional)
     *         classification_betas (Optional): [
     *             double (Optional)
     *         ]
     *     }
     * }
     * }</pre>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *     status: String(notRunning/running/succeeded/canceled/failed/deleted) (Optional)
     *     created_at: Integer (Optional)
     *     updated_at: Integer (Optional)
     *     id: String (Required)
     *     model: String (Required)
     *     fine_tuned_model: String (Optional)
     *     training_files (Required): [
     *          (Required){
     *             object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *             status: String(notRunning/running/succeeded/canceled/failed/deleted) (Optional)
     *             created_at: Integer (Optional)
     *             updated_at: Integer (Optional)
     *             id: String (Required)
     *             bytes: Integer (Optional)
     *             purpose: String(fine-tune/fine-tune-results) (Required)
     *             filename: String (Required)
     *         }
     *     ]
     *     validation_files (Optional): [
     *         (recursive schema, see above)
     *     ]
     *     result_files (Optional): [
     *         (recursive schema, see above)
     *     ]
     *     events (Optional): [
     *          (Optional){
     *             object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *             created_at: Integer (Optional)
     *             level: String(info/warning/error) (Optional)
     *             message: String (Optional)
     *         }
     *     ]
     *     organisation_id: String (Optional)
     *     user_id: String (Optional)
     *     hyperparams (Optional): {
     *         batch_size: Integer (Optional)
     *         learning_rate_multiplier: Double (Optional)
     *         n_epochs: Integer (Optional)
     *         prompt_loss_weight: Double (Optional)
     *         compute_classification_metrics: Boolean (Optional)
     *         classification_n_classes: Integer (Optional)
     *         classification_positive_class: String (Optional)
     *         classification_betas (Optional): [
     *             double (Optional)
     *         ]
     *     }
     * }
     * }</pre>
     *
     * @param fineTuneCreation Defines the values of a fine tune job.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return fine tuning is a job to tailor a model to specific training data along with {@link Response} on
     *     successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> createFineTuneWithResponseAsync(
            BinaryData fineTuneCreation, RequestOptions requestOptions) {
        final String accept = "application/json";
        return FluxUtil.withContext(
                context ->
                        service.createFineTune(
                                this.getEndpoint(),
                                this.getServiceVersion().getVersion(),
                                accept,
                                fineTuneCreation,
                                requestOptions,
                                context));
    }

    /**
     * Creates a job that fine-tunes a specified model from a given training file. Response includes details of the
     * enqueued job including job status and hyper parameters. The name of the fine-tuned model is added to the response
     * once complete.
     *
     * <p><strong>Request Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     model: String (Required)
     *     training_file: String (Required)
     *     validation_file: String (Optional)
     *     hyperparams (Optional): {
     *         batch_size: Integer (Optional)
     *         learning_rate_multiplier: Double (Optional)
     *         n_epochs: Integer (Optional)
     *         prompt_loss_weight: Double (Optional)
     *         compute_classification_metrics: Boolean (Optional)
     *         classification_n_classes: Integer (Optional)
     *         classification_positive_class: String (Optional)
     *         classification_betas (Optional): [
     *             double (Optional)
     *         ]
     *     }
     * }
     * }</pre>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *     status: String(notRunning/running/succeeded/canceled/failed/deleted) (Optional)
     *     created_at: Integer (Optional)
     *     updated_at: Integer (Optional)
     *     id: String (Required)
     *     model: String (Required)
     *     fine_tuned_model: String (Optional)
     *     training_files (Required): [
     *          (Required){
     *             object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *             status: String(notRunning/running/succeeded/canceled/failed/deleted) (Optional)
     *             created_at: Integer (Optional)
     *             updated_at: Integer (Optional)
     *             id: String (Required)
     *             bytes: Integer (Optional)
     *             purpose: String(fine-tune/fine-tune-results) (Required)
     *             filename: String (Required)
     *         }
     *     ]
     *     validation_files (Optional): [
     *         (recursive schema, see above)
     *     ]
     *     result_files (Optional): [
     *         (recursive schema, see above)
     *     ]
     *     events (Optional): [
     *          (Optional){
     *             object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *             created_at: Integer (Optional)
     *             level: String(info/warning/error) (Optional)
     *             message: String (Optional)
     *         }
     *     ]
     *     organisation_id: String (Optional)
     *     user_id: String (Optional)
     *     hyperparams (Optional): {
     *         batch_size: Integer (Optional)
     *         learning_rate_multiplier: Double (Optional)
     *         n_epochs: Integer (Optional)
     *         prompt_loss_weight: Double (Optional)
     *         compute_classification_metrics: Boolean (Optional)
     *         classification_n_classes: Integer (Optional)
     *         classification_positive_class: String (Optional)
     *         classification_betas (Optional): [
     *             double (Optional)
     *         ]
     *     }
     * }
     * }</pre>
     *
     * @param fineTuneCreation Defines the values of a fine tune job.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return fine tuning is a job to tailor a model to specific training data along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> createFineTuneWithResponse(BinaryData fineTuneCreation, RequestOptions requestOptions) {
        return createFineTuneWithResponseAsync(fineTuneCreation, requestOptions).block();
    }

    /**
     * Gets details for a single fine-tune job specified by the given fine_tune_id. The details contain the base model,
     * training and validation files, hyper parameters, time stamps, status and events. Events are created when the job
     * status changes, e.g. running or complete, and when results are uploaded.
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *     status: String(notRunning/running/succeeded/canceled/failed/deleted) (Optional)
     *     created_at: Integer (Optional)
     *     updated_at: Integer (Optional)
     *     id: String (Required)
     *     model: String (Required)
     *     fine_tuned_model: String (Optional)
     *     training_files (Required): [
     *          (Required){
     *             object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *             status: String(notRunning/running/succeeded/canceled/failed/deleted) (Optional)
     *             created_at: Integer (Optional)
     *             updated_at: Integer (Optional)
     *             id: String (Required)
     *             bytes: Integer (Optional)
     *             purpose: String(fine-tune/fine-tune-results) (Required)
     *             filename: String (Required)
     *         }
     *     ]
     *     validation_files (Optional): [
     *         (recursive schema, see above)
     *     ]
     *     result_files (Optional): [
     *         (recursive schema, see above)
     *     ]
     *     events (Optional): [
     *          (Optional){
     *             object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *             created_at: Integer (Optional)
     *             level: String(info/warning/error) (Optional)
     *             message: String (Optional)
     *         }
     *     ]
     *     organisation_id: String (Optional)
     *     user_id: String (Optional)
     *     hyperparams (Optional): {
     *         batch_size: Integer (Optional)
     *         learning_rate_multiplier: Double (Optional)
     *         n_epochs: Integer (Optional)
     *         prompt_loss_weight: Double (Optional)
     *         compute_classification_metrics: Boolean (Optional)
     *         classification_n_classes: Integer (Optional)
     *         classification_positive_class: String (Optional)
     *         classification_betas (Optional): [
     *             double (Optional)
     *         ]
     *     }
     * }
     * }</pre>
     *
     * @param fineTuneId The identity of this item.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return details for a single fine-tune job specified by the given fine_tune_id. The details contain the base
     *     model, training and validation files, hyper parameters, time stamps, status and events. Events are created
     *     when the job status changes, e.g along with {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> getFineTuneWithResponseAsync(String fineTuneId, RequestOptions requestOptions) {
        final String accept = "application/json";
        return FluxUtil.withContext(
                context ->
                        service.getFineTune(
                                this.getEndpoint(),
                                fineTuneId,
                                this.getServiceVersion().getVersion(),
                                accept,
                                requestOptions,
                                context));
    }

    /**
     * Gets details for a single fine-tune job specified by the given fine_tune_id. The details contain the base model,
     * training and validation files, hyper parameters, time stamps, status and events. Events are created when the job
     * status changes, e.g. running or complete, and when results are uploaded.
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *     status: String(notRunning/running/succeeded/canceled/failed/deleted) (Optional)
     *     created_at: Integer (Optional)
     *     updated_at: Integer (Optional)
     *     id: String (Required)
     *     model: String (Required)
     *     fine_tuned_model: String (Optional)
     *     training_files (Required): [
     *          (Required){
     *             object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *             status: String(notRunning/running/succeeded/canceled/failed/deleted) (Optional)
     *             created_at: Integer (Optional)
     *             updated_at: Integer (Optional)
     *             id: String (Required)
     *             bytes: Integer (Optional)
     *             purpose: String(fine-tune/fine-tune-results) (Required)
     *             filename: String (Required)
     *         }
     *     ]
     *     validation_files (Optional): [
     *         (recursive schema, see above)
     *     ]
     *     result_files (Optional): [
     *         (recursive schema, see above)
     *     ]
     *     events (Optional): [
     *          (Optional){
     *             object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *             created_at: Integer (Optional)
     *             level: String(info/warning/error) (Optional)
     *             message: String (Optional)
     *         }
     *     ]
     *     organisation_id: String (Optional)
     *     user_id: String (Optional)
     *     hyperparams (Optional): {
     *         batch_size: Integer (Optional)
     *         learning_rate_multiplier: Double (Optional)
     *         n_epochs: Integer (Optional)
     *         prompt_loss_weight: Double (Optional)
     *         compute_classification_metrics: Boolean (Optional)
     *         classification_n_classes: Integer (Optional)
     *         classification_positive_class: String (Optional)
     *         classification_betas (Optional): [
     *             double (Optional)
     *         ]
     *     }
     * }
     * }</pre>
     *
     * @param fineTuneId The identity of this item.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return details for a single fine-tune job specified by the given fine_tune_id. The details contain the base
     *     model, training and validation files, hyper parameters, time stamps, status and events. Events are created
     *     when the job status changes, e.g along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> getFineTuneWithResponse(String fineTuneId, RequestOptions requestOptions) {
        return getFineTuneWithResponseAsync(fineTuneId, requestOptions).block();
    }

    /**
     * Deletes the fine-tune job specified by the given fine_tune_id.
     *
     * @param fineTuneId The identity of this item.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<Void>> deleteFineTuneWithResponseAsync(String fineTuneId, RequestOptions requestOptions) {
        final String accept = "application/json";
        return FluxUtil.withContext(
                context ->
                        service.deleteFineTune(
                                this.getEndpoint(),
                                fineTuneId,
                                this.getServiceVersion().getVersion(),
                                accept,
                                requestOptions,
                                context));
    }

    /**
     * Deletes the fine-tune job specified by the given fine_tune_id.
     *
     * @param fineTuneId The identity of this item.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<Void> deleteFineTuneWithResponse(String fineTuneId, RequestOptions requestOptions) {
        return deleteFineTuneWithResponseAsync(fineTuneId, requestOptions).block();
    }

    /**
     * List events for the fine-tune job specified by the given fine_tune_id. Events are created when the job status
     * changes, e.g. running or complete, and when results are uploaded.
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *     data (Optional): [
     *          (Optional){
     *             object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *             created_at: Integer (Optional)
     *             level: String(info/warning/error) (Optional)
     *             message: String (Optional)
     *         }
     *     ]
     * }
     * }</pre>
     *
     * @param fineTuneId The identity of this item.
     * @param stream A flag indicating whether to stream events for the fine-tune job. If set to true, events will be
     *     sent as data-only server-sent events as they become available. The stream will terminate with a data: [DONE]
     *     message when the job is finished (succeeded, cancelled, or failed). If set to false, only events generated so
     *     far will be returned..
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the response body along with {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> listFineTuneEventsWithResponseAsync(
            String fineTuneId, boolean stream, RequestOptions requestOptions) {
        final String accept = "application/json";
        return FluxUtil.withContext(
                context ->
                        service.listFineTuneEvents(
                                this.getEndpoint(),
                                fineTuneId,
                                stream,
                                this.getServiceVersion().getVersion(),
                                accept,
                                requestOptions,
                                context));
    }

    /**
     * List events for the fine-tune job specified by the given fine_tune_id. Events are created when the job status
     * changes, e.g. running or complete, and when results are uploaded.
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *     data (Optional): [
     *          (Optional){
     *             object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *             created_at: Integer (Optional)
     *             level: String(info/warning/error) (Optional)
     *             message: String (Optional)
     *         }
     *     ]
     * }
     * }</pre>
     *
     * @param fineTuneId The identity of this item.
     * @param stream A flag indicating whether to stream events for the fine-tune job. If set to true, events will be
     *     sent as data-only server-sent events as they become available. The stream will terminate with a data: [DONE]
     *     message when the job is finished (succeeded, cancelled, or failed). If set to false, only events generated so
     *     far will be returned..
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the response body along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> listFineTuneEventsWithResponse(
            String fineTuneId, boolean stream, RequestOptions requestOptions) {
        return listFineTuneEventsWithResponseAsync(fineTuneId, stream, requestOptions).block();
    }

    /**
     * Cancels the processing of the fine-tune job specified by the given fine_tune_id.
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *     status: String(notRunning/running/succeeded/canceled/failed/deleted) (Optional)
     *     created_at: Integer (Optional)
     *     updated_at: Integer (Optional)
     *     id: String (Required)
     *     model: String (Required)
     *     fine_tuned_model: String (Optional)
     *     training_files (Required): [
     *          (Required){
     *             object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *             status: String(notRunning/running/succeeded/canceled/failed/deleted) (Optional)
     *             created_at: Integer (Optional)
     *             updated_at: Integer (Optional)
     *             id: String (Required)
     *             bytes: Integer (Optional)
     *             purpose: String(fine-tune/fine-tune-results) (Required)
     *             filename: String (Required)
     *         }
     *     ]
     *     validation_files (Optional): [
     *         (recursive schema, see above)
     *     ]
     *     result_files (Optional): [
     *         (recursive schema, see above)
     *     ]
     *     events (Optional): [
     *          (Optional){
     *             object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *             created_at: Integer (Optional)
     *             level: String(info/warning/error) (Optional)
     *             message: String (Optional)
     *         }
     *     ]
     *     organisation_id: String (Optional)
     *     user_id: String (Optional)
     *     hyperparams (Optional): {
     *         batch_size: Integer (Optional)
     *         learning_rate_multiplier: Double (Optional)
     *         n_epochs: Integer (Optional)
     *         prompt_loss_weight: Double (Optional)
     *         compute_classification_metrics: Boolean (Optional)
     *         classification_n_classes: Integer (Optional)
     *         classification_positive_class: String (Optional)
     *         classification_betas (Optional): [
     *             double (Optional)
     *         ]
     *     }
     * }
     * }</pre>
     *
     * @param fineTuneId The identity of this item.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return fine tuning is a job to tailor a model to specific training data along with {@link Response} on
     *     successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> cancelFineTuneWithResponseAsync(
            String fineTuneId, RequestOptions requestOptions) {
        final String accept = "application/json";
        return FluxUtil.withContext(
                context ->
                        service.cancelFineTune(
                                this.getEndpoint(),
                                fineTuneId,
                                this.getServiceVersion().getVersion(),
                                accept,
                                requestOptions,
                                context));
    }

    /**
     * Cancels the processing of the fine-tune job specified by the given fine_tune_id.
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *     status: String(notRunning/running/succeeded/canceled/failed/deleted) (Optional)
     *     created_at: Integer (Optional)
     *     updated_at: Integer (Optional)
     *     id: String (Required)
     *     model: String (Required)
     *     fine_tuned_model: String (Optional)
     *     training_files (Required): [
     *          (Required){
     *             object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *             status: String(notRunning/running/succeeded/canceled/failed/deleted) (Optional)
     *             created_at: Integer (Optional)
     *             updated_at: Integer (Optional)
     *             id: String (Required)
     *             bytes: Integer (Optional)
     *             purpose: String(fine-tune/fine-tune-results) (Required)
     *             filename: String (Required)
     *         }
     *     ]
     *     validation_files (Optional): [
     *         (recursive schema, see above)
     *     ]
     *     result_files (Optional): [
     *         (recursive schema, see above)
     *     ]
     *     events (Optional): [
     *          (Optional){
     *             object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *             created_at: Integer (Optional)
     *             level: String(info/warning/error) (Optional)
     *             message: String (Optional)
     *         }
     *     ]
     *     organisation_id: String (Optional)
     *     user_id: String (Optional)
     *     hyperparams (Optional): {
     *         batch_size: Integer (Optional)
     *         learning_rate_multiplier: Double (Optional)
     *         n_epochs: Integer (Optional)
     *         prompt_loss_weight: Double (Optional)
     *         compute_classification_metrics: Boolean (Optional)
     *         classification_n_classes: Integer (Optional)
     *         classification_positive_class: String (Optional)
     *         classification_betas (Optional): [
     *             double (Optional)
     *         ]
     *     }
     * }
     * }</pre>
     *
     * @param fineTuneId The identity of this item.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return fine tuning is a job to tailor a model to specific training data along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> cancelFineTuneWithResponse(String fineTuneId, RequestOptions requestOptions) {
        return cancelFineTuneWithResponseAsync(fineTuneId, requestOptions).block();
    }

    /**
     * Gets a list of all models that are accessible by the Azure OpenAI resource. These include base models as well as
     * all successfully completed fine-tuned models owned by the Azure OpenAI resource.
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String (Optional)
     *     data (Optional): [
     *          (Optional){
     *             object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *             status: String(notRunning/running/succeeded/canceled/failed/deleted) (Optional)
     *             created_at: Integer (Optional)
     *             updated_at: Integer (Optional)
     *             id: String (Required)
     *             model: String (Optional)
     *             fine_tune: String (Optional)
     *             capabilities (Optional): {
     *                 fine_tune: Boolean (Optional)
     *                 inference: Boolean (Optional)
     *                 completion: Boolean (Optional)
     *                 embeddings: Boolean (Optional)
     *                 scale_types (Optional): [
     *                     String(manual/standard) (Optional)
     *                 ]
     *             }
     *             deprecation (Optional): {
     *                 fine_tune_end_date: Integer (Optional)
     *                 inference: Integer (Optional)
     *             }
     *         }
     *     ]
     * }
     * }</pre>
     *
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return a list of all models that are accessible by the Azure OpenAI resource. These include base models as well
     *     as all successfully completed fine-tuned models owned by the Azure OpenAI resource along with {@link
     *     Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> listModelsWithResponseAsync(RequestOptions requestOptions) {
        final String accept = "application/json";
        return FluxUtil.withContext(
                context ->
                        service.listModels(
                                this.getEndpoint(),
                                this.getServiceVersion().getVersion(),
                                accept,
                                requestOptions,
                                context));
    }

    /**
     * Gets a list of all models that are accessible by the Azure OpenAI resource. These include base models as well as
     * all successfully completed fine-tuned models owned by the Azure OpenAI resource.
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String (Optional)
     *     data (Optional): [
     *          (Optional){
     *             object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *             status: String(notRunning/running/succeeded/canceled/failed/deleted) (Optional)
     *             created_at: Integer (Optional)
     *             updated_at: Integer (Optional)
     *             id: String (Required)
     *             model: String (Optional)
     *             fine_tune: String (Optional)
     *             capabilities (Optional): {
     *                 fine_tune: Boolean (Optional)
     *                 inference: Boolean (Optional)
     *                 completion: Boolean (Optional)
     *                 embeddings: Boolean (Optional)
     *                 scale_types (Optional): [
     *                     String(manual/standard) (Optional)
     *                 ]
     *             }
     *             deprecation (Optional): {
     *                 fine_tune_end_date: Integer (Optional)
     *                 inference: Integer (Optional)
     *             }
     *         }
     *     ]
     * }
     * }</pre>
     *
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return a list of all models that are accessible by the Azure OpenAI resource. These include base models as well
     *     as all successfully completed fine-tuned models owned by the Azure OpenAI resource along with {@link
     *     Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> listModelsWithResponse(RequestOptions requestOptions) {
        return listModelsWithResponseAsync(requestOptions).block();
    }

    /**
     * Gets details for the model specified by the given model_id.
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *     status: String(notRunning/running/succeeded/canceled/failed/deleted) (Optional)
     *     created_at: Integer (Optional)
     *     updated_at: Integer (Optional)
     *     id: String (Required)
     *     model: String (Optional)
     *     fine_tune: String (Optional)
     *     capabilities (Optional): {
     *         fine_tune: Boolean (Optional)
     *         inference: Boolean (Optional)
     *         completion: Boolean (Optional)
     *         embeddings: Boolean (Optional)
     *         scale_types (Optional): [
     *             String(manual/standard) (Optional)
     *         ]
     *     }
     *     deprecation (Optional): {
     *         fine_tune_end_date: Integer (Optional)
     *         inference: Integer (Optional)
     *     }
     * }
     * }</pre>
     *
     * @param modelId The identity of this item.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return details for the model specified by the given model_id along with {@link Response} on successful
     *     completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> getModelWithResponseAsync(String modelId, RequestOptions requestOptions) {
        final String accept = "application/json";
        return FluxUtil.withContext(
                context ->
                        service.getModel(
                                this.getEndpoint(),
                                modelId,
                                this.getServiceVersion().getVersion(),
                                accept,
                                requestOptions,
                                context));
    }

    /**
     * Gets details for the model specified by the given model_id.
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *     status: String(notRunning/running/succeeded/canceled/failed/deleted) (Optional)
     *     created_at: Integer (Optional)
     *     updated_at: Integer (Optional)
     *     id: String (Required)
     *     model: String (Optional)
     *     fine_tune: String (Optional)
     *     capabilities (Optional): {
     *         fine_tune: Boolean (Optional)
     *         inference: Boolean (Optional)
     *         completion: Boolean (Optional)
     *         embeddings: Boolean (Optional)
     *         scale_types (Optional): [
     *             String(manual/standard) (Optional)
     *         ]
     *     }
     *     deprecation (Optional): {
     *         fine_tune_end_date: Integer (Optional)
     *         inference: Integer (Optional)
     *     }
     * }
     * }</pre>
     *
     * @param modelId The identity of this item.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return details for the model specified by the given model_id along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> getModelWithResponse(String modelId, RequestOptions requestOptions) {
        return getModelWithResponseAsync(modelId, requestOptions).block();
    }
}
