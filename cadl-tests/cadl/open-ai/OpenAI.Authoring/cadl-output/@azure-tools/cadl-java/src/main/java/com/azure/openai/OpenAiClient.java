// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.
package com.azure.openai;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceClient;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.exception.ClientAuthenticationException;
import com.azure.core.exception.HttpResponseException;
import com.azure.core.exception.ResourceModifiedException;
import com.azure.core.exception.ResourceNotFoundException;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.util.BinaryData;
import com.azure.openai.models.CustomResponseFields;
import com.azure.openai.models.Deployment;
import com.azure.openai.models.DeploymentList;
import com.azure.openai.models.EventList;
import com.azure.openai.models.File;
import com.azure.openai.models.FileContent;
import com.azure.openai.models.FileImport;
import com.azure.openai.models.FileList;
import com.azure.openai.models.FineTune;
import com.azure.openai.models.FineTuneCreation;
import com.azure.openai.models.FineTuneList;
import com.azure.openai.models.Model;
import com.azure.openai.models.ModelList;
import com.azure.openai.models.ResourceCreateOrReplaceModelDeployment;
import com.azure.openai.models.ResourceCreateOrReplaceModelFile;

/** Initializes a new instance of the synchronous OpenAiClient type. */
@ServiceClient(builder = OpenAiClientBuilder.class)
public final class OpenAiClient {

    @Generated private final OpenAiAsyncClient client;

    /**
     * Initializes an instance of OpenAiClient class.
     *
     * @param client the async client.
     */
    @Generated
    OpenAiClient(OpenAiAsyncClient client) {
        this.client = client;
    }

    /**
     * Gets the list of deployments owned by the Azure OpenAI resource.
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String (Optional)
     *     data (Optional): [
     *          (Optional){
     *             object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *             status: String(notRunning/running/succeeded/canceled/failed/deleted) (Required)
     *             created_at: int (Required)
     *             updated_at: int (Required)
     *             id: String (Required)
     *             model: String (Required)
     *             owner: String (Optional)
     *             scale_settings (Required): {
     *             }
     *         }
     *     ]
     * }
     * }</pre>
     *
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the list of deployments owned by the Azure OpenAI resource along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> listDeploymentsWithResponse(RequestOptions requestOptions) {
        return this.client.listDeploymentsWithResponse(requestOptions).block();
    }

    /**
     * Creates a new deployment for the Azure OpenAI resource according to the given specification.
     *
     * <p><strong>Request Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     model: String (Required)
     *     scale_settings (Required): {
     *     }
     * }
     * }</pre>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *     status: String(notRunning/running/succeeded/canceled/failed/deleted) (Required)
     *     created_at: int (Required)
     *     updated_at: int (Required)
     *     id: String (Required)
     *     model: String (Required)
     *     owner: String (Optional)
     *     scale_settings (Required): {
     *     }
     * }
     * }</pre>
     *
     * @param resourceCreateOrReplaceModel The template for adding updateable properties.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the response body along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> createDeploymentWithResponse(
            BinaryData resourceCreateOrReplaceModel, RequestOptions requestOptions) {
        return this.client.createDeploymentWithResponse(resourceCreateOrReplaceModel, requestOptions).block();
    }

    /**
     * Gets details for a single deployment specified by the given deployment_id.
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *     status: String(notRunning/running/succeeded/canceled/failed/deleted) (Required)
     *     created_at: int (Required)
     *     updated_at: int (Required)
     *     id: String (Required)
     *     model: String (Required)
     *     owner: String (Optional)
     *     scale_settings (Required): {
     *     }
     * }
     * }</pre>
     *
     * @param deploymentId The identifier of the deployment.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return details for a single deployment specified by the given deployment_id along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> getDeploymentWithResponse(String deploymentId, RequestOptions requestOptions) {
        return this.client.getDeploymentWithResponse(deploymentId, requestOptions).block();
    }

    /**
     * Updates the mutable details of the deployment with the given deployment_id.
     *
     * <p><strong>Request Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *     status: String(notRunning/running/succeeded/canceled/failed/deleted) (Required)
     *     created_at: int (Required)
     *     updated_at: int (Required)
     *     id: String (Required)
     *     model: String (Required)
     *     owner: String (Optional)
     *     scale_settings (Required): {
     *     }
     * }
     * }</pre>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *     status: String(notRunning/running/succeeded/canceled/failed/deleted) (Required)
     *     created_at: int (Required)
     *     updated_at: int (Required)
     *     id: String (Required)
     *     model: String (Required)
     *     owner: String (Optional)
     *     scale_settings (Required): {
     *     }
     * }
     * }</pre>
     *
     * @param deploymentId The identifier of the deployment.
     * @param deployment Deployments manage the reserved quota for Azure OpenAI models and make them available for
     *     inference requests.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return deployments manage the reserved quota for Azure OpenAI models and make them available for inference
     *     requests along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> updateDeploymentWithResponse(
            String deploymentId, BinaryData deployment, RequestOptions requestOptions) {
        return this.client.updateDeploymentWithResponse(deploymentId, deployment, requestOptions).block();
    }

    /**
     * Deletes the deployment specified by the given deployment_id.
     *
     * @param deploymentId The identifier of the deployment.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<Void> deleteDeploymentWithResponse(String deploymentId, RequestOptions requestOptions) {
        return this.client.deleteDeploymentWithResponse(deploymentId, requestOptions).block();
    }

    /**
     * Gets a list of all files owned by the Azure OpenAI resource. These include user uploaded content like files with
     * purpose "fine-tune" for training or validation of fine-tunes models as well as files that are generated by the
     * service such as "fine-tune-results" which contains various metrics for the corresponding fine-tune job.
     *
     * <p>Gets a list of all files owned by the Azure OpenAI resource. These include user uploaded content like files
     * with purpose "fine-tune" for training or validation of fine-tunes models as well as files that are generated by
     * the service such as "fine-tune-results" which contains various metrics for the corresponding fine-tune job.
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String (Optional)
     *     data (Optional): [
     *          (Optional){
     *             object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *             status: String(notRunning/running/succeeded/canceled/failed/deleted) (Optional)
     *             created_at: Integer (Optional)
     *             updated_at: Integer (Optional)
     *             id: String (Required)
     *             bytes: Integer (Optional)
     *             purpose: String(fine-tune/fine-tune-results) (Required)
     *             filename: String (Required)
     *         }
     *     ]
     * }
     * }</pre>
     *
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return a list of all files owned by the Azure OpenAI resource. These include user uploaded content like files
     *     with purpose "fine-tune" for training or validation of fine-tunes models as well as files that are generated
     *     by the service such as "fine-tune-results" which contains various metrics for the corresponding fine-tune job
     *     along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> listFilesWithResponse(RequestOptions requestOptions) {
        return this.client.listFilesWithResponse(requestOptions).block();
    }

    /**
     * Creates a new file entity by uploading data from a local machine. Uploaded files can, for example, be used for
     * training or evaluating fine-tuned models.
     *
     * <p><strong>Request Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     purpose: String(fine-tune/fine-tune-results) (Required)
     *     filename: String (Required)
     * }
     * }</pre>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *     status: String(notRunning/running/succeeded/canceled/failed/deleted) (Required)
     *     created_at: int (Required)
     *     updated_at: int (Required)
     *     id: String (Required)
     *     model: String (Required)
     *     owner: String (Optional)
     *     scale_settings (Required): {
     *     }
     * }
     * }</pre>
     *
     * @param resourceCreateOrReplaceModel The template for adding updateable properties.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the response body along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> uploadFileWithResponse(
            BinaryData resourceCreateOrReplaceModel, RequestOptions requestOptions) {
        return this.client.uploadFileWithResponse(resourceCreateOrReplaceModel, requestOptions).block();
    }

    /**
     * Gets details for a single file specified by the given file_id including status, size, purpose, etc.
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *     status: String(notRunning/running/succeeded/canceled/failed/deleted) (Optional)
     *     created_at: Integer (Optional)
     *     updated_at: Integer (Optional)
     *     id: String (Required)
     *     bytes: Integer (Optional)
     *     purpose: String(fine-tune/fine-tune-results) (Required)
     *     filename: String (Required)
     * }
     * }</pre>
     *
     * @param fileId The identity of this item.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return details for a single file specified by the given file_id including status, size, purpose, etc along with
     *     {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> getFileWithResponse(String fileId, RequestOptions requestOptions) {
        return this.client.getFileWithResponse(fileId, requestOptions).block();
    }

    /**
     * Deletes the file with the given file_id. Deletion is also allowed if a file was used, e.g., as training file in a
     * fine-tune job.
     *
     * @param fileId The identity of this item.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<Void> deleteFileWithResponse(String fileId, RequestOptions requestOptions) {
        return this.client.deleteFileWithResponse(fileId, requestOptions).block();
    }

    /**
     * Gets the content of the file specified by the given file_id. Files can be user uploaded content or generated by
     * the service like result metrics of a fine-tune job.
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     purpose: String(fine-tune/fine-tune-results) (Required)
     *     file: byte[] (Required)
     * }
     * }</pre>
     *
     * @param fileId The identity of this item.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the content of the file specified by the given file_id. Files can be user uploaded content or generated
     *     by the service like result metrics of a fine-tune job along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> getFileContentWithResponse(String fileId, RequestOptions requestOptions) {
        return this.client.getFileContentWithResponse(fileId, requestOptions).block();
    }

    /**
     * Creates a new file entity by importing data from a provided url. Uploaded files can, for example, be used for
     * training or evaluating fine-tuned models.
     *
     * <p><strong>Request Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     purpose: String(fine-tune/fine-tune-results) (Required)
     *     filename: String (Required)
     *     content_url: String (Required)
     * }
     * }</pre>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *     status: String(notRunning/running/succeeded/canceled/failed/deleted) (Optional)
     *     created_at: Integer (Optional)
     *     updated_at: Integer (Optional)
     *     id: String (Required)
     *     bytes: Integer (Optional)
     *     purpose: String(fine-tune/fine-tune-results) (Required)
     *     filename: String (Required)
     * }
     * }</pre>
     *
     * @param body expected schema for the body of the completion post request.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return a file is a document usable for training and validation along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> importFileWithResponse(BinaryData body, RequestOptions requestOptions) {
        return this.client.importFileWithResponse(body, requestOptions).block();
    }

    /**
     * Gets a list of all fine-tune jobs owned by the Azure OpenAI resource. The details that are returned for each
     * fine-tune job contain besides its identifier the base model, training and validation files, hyper parameters,
     * time stamps, status and events. Events are created when the job status changes, e.g. running or complete, and
     * when results are uploaded.
     *
     * <p>Gets a list of all fine-tune jobs owned by the Azure OpenAI resource. The details that are returned for each
     * fine-tune job contain besides its identifier the base model, training and validation files, hyper parameters,
     * time stamps, status and events. Events are created when the job status changes, e.g. running or complete, and
     * when results are uploaded.
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String (Optional)
     *     data (Optional): [
     *          (Optional){
     *             object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *             status: String(notRunning/running/succeeded/canceled/failed/deleted) (Optional)
     *             created_at: Integer (Optional)
     *             updated_at: Integer (Optional)
     *             id: String (Required)
     *             model: String (Required)
     *             fine_tuned_model: String (Optional)
     *             training_files (Required): [
     *                  (Required){
     *                     object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *                     status: String(notRunning/running/succeeded/canceled/failed/deleted) (Optional)
     *                     created_at: Integer (Optional)
     *                     updated_at: Integer (Optional)
     *                     id: String (Required)
     *                     bytes: Integer (Optional)
     *                     purpose: String(fine-tune/fine-tune-results) (Required)
     *                     filename: String (Required)
     *                 }
     *             ]
     *             validation_files (Optional): [
     *                 (recursive schema, see above)
     *             ]
     *             result_files (Optional): [
     *                 (recursive schema, see above)
     *             ]
     *             events (Optional): [
     *                  (Optional){
     *                     object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *                     created_at: Integer (Optional)
     *                     level: String(info/warning/error) (Optional)
     *                     message: String (Optional)
     *                 }
     *             ]
     *             organisation_id: String (Optional)
     *             user_id: String (Optional)
     *             hyperparams (Optional): {
     *                 batch_size: Integer (Optional)
     *                 learning_rate_multiplier: Double (Optional)
     *                 n_epochs: Integer (Optional)
     *                 prompt_loss_weight: Double (Optional)
     *                 compute_classification_metrics: Boolean (Optional)
     *                 classification_n_classes: Integer (Optional)
     *                 classification_positive_class: String (Optional)
     *                 classification_betas (Optional): [
     *                     double (Optional)
     *                 ]
     *             }
     *         }
     *     ]
     * }
     * }</pre>
     *
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return a list of all fine-tune jobs owned by the Azure OpenAI resource. The details that are returned for each
     *     fine-tune job contain besides its identifier the base model, training and validation files, hyper parameters,
     *     time stamps, status and events along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> listFineTunesWithResponse(RequestOptions requestOptions) {
        return this.client.listFineTunesWithResponse(requestOptions).block();
    }

    /**
     * Creates a job that fine-tunes a specified model from a given training file. Response includes details of the
     * enqueued job including job status and hyper parameters. The name of the fine-tuned model is added to the response
     * once complete.
     *
     * <p><strong>Request Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     model: String (Required)
     *     training_file: String (Required)
     *     validation_file: String (Optional)
     *     hyperparams (Optional): {
     *         batch_size: Integer (Optional)
     *         learning_rate_multiplier: Double (Optional)
     *         n_epochs: Integer (Optional)
     *         prompt_loss_weight: Double (Optional)
     *         compute_classification_metrics: Boolean (Optional)
     *         classification_n_classes: Integer (Optional)
     *         classification_positive_class: String (Optional)
     *         classification_betas (Optional): [
     *             double (Optional)
     *         ]
     *     }
     * }
     * }</pre>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *     status: String(notRunning/running/succeeded/canceled/failed/deleted) (Optional)
     *     created_at: Integer (Optional)
     *     updated_at: Integer (Optional)
     *     id: String (Required)
     *     model: String (Required)
     *     fine_tuned_model: String (Optional)
     *     training_files (Required): [
     *          (Required){
     *             object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *             status: String(notRunning/running/succeeded/canceled/failed/deleted) (Optional)
     *             created_at: Integer (Optional)
     *             updated_at: Integer (Optional)
     *             id: String (Required)
     *             bytes: Integer (Optional)
     *             purpose: String(fine-tune/fine-tune-results) (Required)
     *             filename: String (Required)
     *         }
     *     ]
     *     validation_files (Optional): [
     *         (recursive schema, see above)
     *     ]
     *     result_files (Optional): [
     *         (recursive schema, see above)
     *     ]
     *     events (Optional): [
     *          (Optional){
     *             object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *             created_at: Integer (Optional)
     *             level: String(info/warning/error) (Optional)
     *             message: String (Optional)
     *         }
     *     ]
     *     organisation_id: String (Optional)
     *     user_id: String (Optional)
     *     hyperparams (Optional): {
     *         batch_size: Integer (Optional)
     *         learning_rate_multiplier: Double (Optional)
     *         n_epochs: Integer (Optional)
     *         prompt_loss_weight: Double (Optional)
     *         compute_classification_metrics: Boolean (Optional)
     *         classification_n_classes: Integer (Optional)
     *         classification_positive_class: String (Optional)
     *         classification_betas (Optional): [
     *             double (Optional)
     *         ]
     *     }
     * }
     * }</pre>
     *
     * @param fineTuneCreation Defines the values of a fine tune job.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return fine tuning is a job to tailor a model to specific training data along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> createFineTuneWithResponse(BinaryData fineTuneCreation, RequestOptions requestOptions) {
        return this.client.createFineTuneWithResponse(fineTuneCreation, requestOptions).block();
    }

    /**
     * Gets details for a single fine-tune job specified by the given fine_tune_id. The details contain the base model,
     * training and validation files, hyper parameters, time stamps, status and events. Events are created when the job
     * status changes, e.g. running or complete, and when results are uploaded.
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *     status: String(notRunning/running/succeeded/canceled/failed/deleted) (Optional)
     *     created_at: Integer (Optional)
     *     updated_at: Integer (Optional)
     *     id: String (Required)
     *     model: String (Required)
     *     fine_tuned_model: String (Optional)
     *     training_files (Required): [
     *          (Required){
     *             object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *             status: String(notRunning/running/succeeded/canceled/failed/deleted) (Optional)
     *             created_at: Integer (Optional)
     *             updated_at: Integer (Optional)
     *             id: String (Required)
     *             bytes: Integer (Optional)
     *             purpose: String(fine-tune/fine-tune-results) (Required)
     *             filename: String (Required)
     *         }
     *     ]
     *     validation_files (Optional): [
     *         (recursive schema, see above)
     *     ]
     *     result_files (Optional): [
     *         (recursive schema, see above)
     *     ]
     *     events (Optional): [
     *          (Optional){
     *             object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *             created_at: Integer (Optional)
     *             level: String(info/warning/error) (Optional)
     *             message: String (Optional)
     *         }
     *     ]
     *     organisation_id: String (Optional)
     *     user_id: String (Optional)
     *     hyperparams (Optional): {
     *         batch_size: Integer (Optional)
     *         learning_rate_multiplier: Double (Optional)
     *         n_epochs: Integer (Optional)
     *         prompt_loss_weight: Double (Optional)
     *         compute_classification_metrics: Boolean (Optional)
     *         classification_n_classes: Integer (Optional)
     *         classification_positive_class: String (Optional)
     *         classification_betas (Optional): [
     *             double (Optional)
     *         ]
     *     }
     * }
     * }</pre>
     *
     * @param fineTuneId The identity of this item.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return details for a single fine-tune job specified by the given fine_tune_id. The details contain the base
     *     model, training and validation files, hyper parameters, time stamps, status and events. Events are created
     *     when the job status changes, e.g along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> getFineTuneWithResponse(String fineTuneId, RequestOptions requestOptions) {
        return this.client.getFineTuneWithResponse(fineTuneId, requestOptions).block();
    }

    /**
     * Deletes the fine-tune job specified by the given fine_tune_id.
     *
     * @param fineTuneId The identity of this item.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<Void> deleteFineTuneWithResponse(String fineTuneId, RequestOptions requestOptions) {
        return this.client.deleteFineTuneWithResponse(fineTuneId, requestOptions).block();
    }

    /**
     * List events for the fine-tune job specified by the given fine_tune_id. Events are created when the job status
     * changes, e.g. running or complete, and when results are uploaded.
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *     data (Optional): [
     *          (Optional){
     *             object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *             created_at: Integer (Optional)
     *             level: String(info/warning/error) (Optional)
     *             message: String (Optional)
     *         }
     *     ]
     * }
     * }</pre>
     *
     * @param fineTuneId The identity of this item.
     * @param stream A flag indicating whether to stream events for the fine-tune job. If set to true, events will be
     *     sent as data-only server-sent events as they become available. The stream will terminate with a data: [DONE]
     *     message when the job is finished (succeeded, cancelled, or failed). If set to false, only events generated so
     *     far will be returned..
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the response body along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> listFineTuneEventsWithResponse(
            String fineTuneId, boolean stream, RequestOptions requestOptions) {
        return this.client.listFineTuneEventsWithResponse(fineTuneId, stream, requestOptions).block();
    }

    /**
     * Cancels the processing of the fine-tune job specified by the given fine_tune_id.
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *     status: String(notRunning/running/succeeded/canceled/failed/deleted) (Optional)
     *     created_at: Integer (Optional)
     *     updated_at: Integer (Optional)
     *     id: String (Required)
     *     model: String (Required)
     *     fine_tuned_model: String (Optional)
     *     training_files (Required): [
     *          (Required){
     *             object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *             status: String(notRunning/running/succeeded/canceled/failed/deleted) (Optional)
     *             created_at: Integer (Optional)
     *             updated_at: Integer (Optional)
     *             id: String (Required)
     *             bytes: Integer (Optional)
     *             purpose: String(fine-tune/fine-tune-results) (Required)
     *             filename: String (Required)
     *         }
     *     ]
     *     validation_files (Optional): [
     *         (recursive schema, see above)
     *     ]
     *     result_files (Optional): [
     *         (recursive schema, see above)
     *     ]
     *     events (Optional): [
     *          (Optional){
     *             object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *             created_at: Integer (Optional)
     *             level: String(info/warning/error) (Optional)
     *             message: String (Optional)
     *         }
     *     ]
     *     organisation_id: String (Optional)
     *     user_id: String (Optional)
     *     hyperparams (Optional): {
     *         batch_size: Integer (Optional)
     *         learning_rate_multiplier: Double (Optional)
     *         n_epochs: Integer (Optional)
     *         prompt_loss_weight: Double (Optional)
     *         compute_classification_metrics: Boolean (Optional)
     *         classification_n_classes: Integer (Optional)
     *         classification_positive_class: String (Optional)
     *         classification_betas (Optional): [
     *             double (Optional)
     *         ]
     *     }
     * }
     * }</pre>
     *
     * @param fineTuneId The identity of this item.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return fine tuning is a job to tailor a model to specific training data along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> cancelFineTuneWithResponse(String fineTuneId, RequestOptions requestOptions) {
        return this.client.cancelFineTuneWithResponse(fineTuneId, requestOptions).block();
    }

    /**
     * Gets a list of all models that are accessible by the Azure OpenAI resource. These include base models as well as
     * all successfully completed fine-tuned models owned by the Azure OpenAI resource.
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String (Optional)
     *     data (Optional): [
     *          (Optional){
     *             object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *             status: String(notRunning/running/succeeded/canceled/failed/deleted) (Optional)
     *             created_at: Integer (Optional)
     *             updated_at: Integer (Optional)
     *             id: String (Required)
     *             model: String (Optional)
     *             fine_tune: String (Optional)
     *             capabilities (Optional): {
     *                 fine_tune: Boolean (Optional)
     *                 inference: Boolean (Optional)
     *                 completion: Boolean (Optional)
     *                 embeddings: Boolean (Optional)
     *                 scale_types (Optional): [
     *                     String(manual/standard) (Optional)
     *                 ]
     *             }
     *             deprecation (Optional): {
     *                 fine_tune_end_date: Integer (Optional)
     *                 inference: Integer (Optional)
     *             }
     *         }
     *     ]
     * }
     * }</pre>
     *
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return a list of all models that are accessible by the Azure OpenAI resource. These include base models as well
     *     as all successfully completed fine-tuned models owned by the Azure OpenAI resource along with {@link
     *     Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> listModelsWithResponse(RequestOptions requestOptions) {
        return this.client.listModelsWithResponse(requestOptions).block();
    }

    /**
     * Gets details for the model specified by the given model_id.
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     object: String(list/fine-tune/file/fine-tune-event/model/deployment) (Optional)
     *     status: String(notRunning/running/succeeded/canceled/failed/deleted) (Optional)
     *     created_at: Integer (Optional)
     *     updated_at: Integer (Optional)
     *     id: String (Required)
     *     model: String (Optional)
     *     fine_tune: String (Optional)
     *     capabilities (Optional): {
     *         fine_tune: Boolean (Optional)
     *         inference: Boolean (Optional)
     *         completion: Boolean (Optional)
     *         embeddings: Boolean (Optional)
     *         scale_types (Optional): [
     *             String(manual/standard) (Optional)
     *         ]
     *     }
     *     deprecation (Optional): {
     *         fine_tune_end_date: Integer (Optional)
     *         inference: Integer (Optional)
     *     }
     * }
     * }</pre>
     *
     * @param modelId The identity of this item.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return details for the model specified by the given model_id along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> getModelWithResponse(String modelId, RequestOptions requestOptions) {
        return this.client.getModelWithResponse(modelId, requestOptions).block();
    }

    /**
     * Gets the list of deployments owned by the Azure OpenAI resource.
     *
     * @throws com.azure.core.exception.HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of deployments owned by the Azure OpenAI resource.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public DeploymentList listDeployments() {
        // Generated convenience method for listDeploymentsWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return listDeploymentsWithResponse(requestOptions).getValue().toObject(DeploymentList.class);
    }

    /**
     * Creates a new deployment for the Azure OpenAI resource according to the given specification.
     *
     * @param resourceCreateOrReplaceModel The template for adding updateable properties.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.exception.HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public CustomResponseFields createDeployment(ResourceCreateOrReplaceModelDeployment resourceCreateOrReplaceModel) {
        // Generated convenience method for createDeploymentWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return createDeploymentWithResponse(BinaryData.fromObject(resourceCreateOrReplaceModel), requestOptions)
                .getValue()
                .toObject(CustomResponseFields.class);
    }

    /**
     * Gets details for a single deployment specified by the given deployment_id.
     *
     * @param deploymentId The identifier of the deployment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.exception.HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return details for a single deployment specified by the given deployment_id.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Deployment getDeployment(String deploymentId) {
        // Generated convenience method for getDeploymentWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return getDeploymentWithResponse(deploymentId, requestOptions).getValue().toObject(Deployment.class);
    }

    /**
     * Deletes the deployment specified by the given deployment_id.
     *
     * @param deploymentId The identifier of the deployment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.exception.HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public void deleteDeployment(String deploymentId) {
        // Generated convenience method for deleteDeploymentWithResponse
        RequestOptions requestOptions = new RequestOptions();
        deleteDeploymentWithResponse(deploymentId, requestOptions).getValue();
    }

    /**
     * Gets a list of all files owned by the Azure OpenAI resource. These include user uploaded content like files with
     * purpose "fine-tune" for training or validation of fine-tunes models as well as files that are generated by the
     * service such as "fine-tune-results" which contains various metrics for the corresponding fine-tune job.
     *
     * <p>Gets a list of all files owned by the Azure OpenAI resource. These include user uploaded content like files
     * with purpose "fine-tune" for training or validation of fine-tunes models as well as files that are generated by
     * the service such as "fine-tune-results" which contains various metrics for the corresponding fine-tune job.
     *
     * @throws com.azure.core.exception.HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of all files owned by the Azure OpenAI resource. These include user uploaded content like files
     *     with purpose "fine-tune" for training or validation of fine-tunes models as well as files that are generated
     *     by the service such as "fine-tune-results" which contains various metrics for the corresponding fine-tune
     *     job.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public FileList listFiles() {
        // Generated convenience method for listFilesWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return listFilesWithResponse(requestOptions).getValue().toObject(FileList.class);
    }

    /**
     * Creates a new file entity by uploading data from a local machine. Uploaded files can, for example, be used for
     * training or evaluating fine-tuned models.
     *
     * @param resourceCreateOrReplaceModel The template for adding updateable properties.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.exception.HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public CustomResponseFields uploadFile(ResourceCreateOrReplaceModelFile resourceCreateOrReplaceModel) {
        // Generated convenience method for uploadFileWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return uploadFileWithResponse(BinaryData.fromObject(resourceCreateOrReplaceModel), requestOptions)
                .getValue()
                .toObject(CustomResponseFields.class);
    }

    /**
     * Gets details for a single file specified by the given file_id including status, size, purpose, etc.
     *
     * @param fileId The identity of this item.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.exception.HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return details for a single file specified by the given file_id including status, size, purpose, etc.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public File getFile(String fileId) {
        // Generated convenience method for getFileWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return getFileWithResponse(fileId, requestOptions).getValue().toObject(File.class);
    }

    /**
     * Deletes the file with the given file_id. Deletion is also allowed if a file was used, e.g., as training file in a
     * fine-tune job.
     *
     * @param fileId The identity of this item.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.exception.HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public void deleteFile(String fileId) {
        // Generated convenience method for deleteFileWithResponse
        RequestOptions requestOptions = new RequestOptions();
        deleteFileWithResponse(fileId, requestOptions).getValue();
    }

    /**
     * Gets the content of the file specified by the given file_id. Files can be user uploaded content or generated by
     * the service like result metrics of a fine-tune job.
     *
     * @param fileId The identity of this item.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.exception.HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the content of the file specified by the given file_id. Files can be user uploaded content or generated
     *     by the service like result metrics of a fine-tune job.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public FileContent getFileContent(String fileId) {
        // Generated convenience method for getFileContentWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return getFileContentWithResponse(fileId, requestOptions).getValue().toObject(FileContent.class);
    }

    /**
     * Creates a new file entity by importing data from a provided url. Uploaded files can, for example, be used for
     * training or evaluating fine-tuned models.
     *
     * @param body expected schema for the body of the completion post request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.exception.HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a file is a document usable for training and validation.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public File importFile(FileImport body) {
        // Generated convenience method for importFileWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return importFileWithResponse(BinaryData.fromObject(body), requestOptions).getValue().toObject(File.class);
    }

    /**
     * Gets a list of all fine-tune jobs owned by the Azure OpenAI resource. The details that are returned for each
     * fine-tune job contain besides its identifier the base model, training and validation files, hyper parameters,
     * time stamps, status and events. Events are created when the job status changes, e.g. running or complete, and
     * when results are uploaded.
     *
     * <p>Gets a list of all fine-tune jobs owned by the Azure OpenAI resource. The details that are returned for each
     * fine-tune job contain besides its identifier the base model, training and validation files, hyper parameters,
     * time stamps, status and events. Events are created when the job status changes, e.g. running or complete, and
     * when results are uploaded.
     *
     * @throws com.azure.core.exception.HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of all fine-tune jobs owned by the Azure OpenAI resource. The details that are returned for each
     *     fine-tune job contain besides its identifier the base model, training and validation files, hyper parameters,
     *     time stamps, status and events.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public FineTuneList listFineTunes() {
        // Generated convenience method for listFineTunesWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return listFineTunesWithResponse(requestOptions).getValue().toObject(FineTuneList.class);
    }

    /**
     * Creates a job that fine-tunes a specified model from a given training file. Response includes details of the
     * enqueued job including job status and hyper parameters. The name of the fine-tuned model is added to the response
     * once complete.
     *
     * @param fineTuneCreation Defines the values of a fine tune job.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.exception.HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return fine tuning is a job to tailor a model to specific training data.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public FineTune createFineTune(FineTuneCreation fineTuneCreation) {
        // Generated convenience method for createFineTuneWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return createFineTuneWithResponse(BinaryData.fromObject(fineTuneCreation), requestOptions)
                .getValue()
                .toObject(FineTune.class);
    }

    /**
     * Gets details for a single fine-tune job specified by the given fine_tune_id. The details contain the base model,
     * training and validation files, hyper parameters, time stamps, status and events. Events are created when the job
     * status changes, e.g. running or complete, and when results are uploaded.
     *
     * @param fineTuneId The identity of this item.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.exception.HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return details for a single fine-tune job specified by the given fine_tune_id. The details contain the base
     *     model, training and validation files, hyper parameters, time stamps, status and events. Events are created
     *     when the job status changes, e.g.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public FineTune getFineTune(String fineTuneId) {
        // Generated convenience method for getFineTuneWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return getFineTuneWithResponse(fineTuneId, requestOptions).getValue().toObject(FineTune.class);
    }

    /**
     * Deletes the fine-tune job specified by the given fine_tune_id.
     *
     * @param fineTuneId The identity of this item.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.exception.HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public void deleteFineTune(String fineTuneId) {
        // Generated convenience method for deleteFineTuneWithResponse
        RequestOptions requestOptions = new RequestOptions();
        deleteFineTuneWithResponse(fineTuneId, requestOptions).getValue();
    }

    /**
     * List events for the fine-tune job specified by the given fine_tune_id. Events are created when the job status
     * changes, e.g. running or complete, and when results are uploaded.
     *
     * @param fineTuneId The identity of this item.
     * @param stream A flag indicating whether to stream events for the fine-tune job. If set to true, events will be
     *     sent as data-only server-sent events as they become available. The stream will terminate with a data: [DONE]
     *     message when the job is finished (succeeded, cancelled, or failed). If set to false, only events generated so
     *     far will be returned..
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.exception.HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public EventList listFineTuneEvents(String fineTuneId, boolean stream) {
        // Generated convenience method for listFineTuneEventsWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return listFineTuneEventsWithResponse(fineTuneId, stream, requestOptions).getValue().toObject(EventList.class);
    }

    /**
     * Cancels the processing of the fine-tune job specified by the given fine_tune_id.
     *
     * @param fineTuneId The identity of this item.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.exception.HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return fine tuning is a job to tailor a model to specific training data.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public FineTune cancelFineTune(String fineTuneId) {
        // Generated convenience method for cancelFineTuneWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return cancelFineTuneWithResponse(fineTuneId, requestOptions).getValue().toObject(FineTune.class);
    }

    /**
     * Gets a list of all models that are accessible by the Azure OpenAI resource. These include base models as well as
     * all successfully completed fine-tuned models owned by the Azure OpenAI resource.
     *
     * @throws com.azure.core.exception.HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of all models that are accessible by the Azure OpenAI resource. These include base models as well
     *     as all successfully completed fine-tuned models owned by the Azure OpenAI resource.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public ModelList listModels() {
        // Generated convenience method for listModelsWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return listModelsWithResponse(requestOptions).getValue().toObject(ModelList.class);
    }

    /**
     * Gets details for the model specified by the given model_id.
     *
     * @param modelId The identity of this item.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.exception.HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return details for the model specified by the given model_id.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Model getModel(String modelId) {
        // Generated convenience method for getModelWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return getModelWithResponse(modelId, requestOptions).getValue().toObject(Model.class);
    }
}
