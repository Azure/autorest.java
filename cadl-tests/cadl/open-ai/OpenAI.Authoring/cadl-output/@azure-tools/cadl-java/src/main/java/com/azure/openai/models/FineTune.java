// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.openai.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Fine tuning is a job to tailor a model to specific training data. */
@Immutable
public final class FineTune {
    /*
     * Defines the type of an object.
     */
    @JsonProperty(value = "object", access = JsonProperty.Access.WRITE_ONLY)
    private TypeDiscriminator object;

    /*
     * The state of a job or item.
     */
    @JsonProperty(value = "status", access = JsonProperty.Access.WRITE_ONLY)
    private State status;

    /*
     * A timestamp when this job or item was created (in unix epochs).
     */
    @JsonProperty(value = "created_at", access = JsonProperty.Access.WRITE_ONLY)
    private Integer createdAt;

    /*
     * A timestamp when this job or item was modified last (in unix epochs).
     */
    @JsonProperty(value = "updated_at", access = JsonProperty.Access.WRITE_ONLY)
    private Integer updatedAt;

    /*
     * The identity of this item.
     */
    @JsonProperty(value = "id", required = true, access = JsonProperty.Access.WRITE_ONLY)
    private String id;

    /*
     * The identifier of the base model used for the fine-tune.
     */
    @JsonProperty(value = "model", required = true)
    private String model;

    /*
     * The identifier of the resulting fine tuned model. This property is only
     * populated for successfully completed fine-tune runs.
     * Use this identifier to
     * create a deployment for inferencing.
     */
    @JsonProperty(value = "fine_tuned_model", access = JsonProperty.Access.WRITE_ONLY)
    private String fineTunedModel;

    /*
     * The files that are used for training the fine tuned model.
     */
    @JsonProperty(value = "training_files", required = true)
    private List<File> trainingFiles;

    /*
     * The files that are used to evaluate the fine tuned model during training.
     */
    @JsonProperty(value = "validation_files")
    private List<File> validationFiles;

    /*
     * The result files containing training and evaluation metrics in csv format.
     * The
     * file is only available for successfully completed fine-tune runs.
     */
    @JsonProperty(value = "result_files", access = JsonProperty.Access.WRITE_ONLY)
    private List<File> resultFiles;

    /*
     * The events that show the progress of the fine-tune run including queued,
     * running and completed.
     */
    @JsonProperty(value = "events", access = JsonProperty.Access.WRITE_ONLY)
    private List<Event> events;

    /*
     * The organisation id of this fine tune job. Unused on Azure OpenAI;
     * compatibility for OpenAI only.
     */
    @JsonProperty(value = "organisation_id", access = JsonProperty.Access.WRITE_ONLY)
    private String organisationId;

    /*
     * The user id of this fine tune job. Unused on Azure OpenAI; compatibility for
     * OpenAI only.
     */
    @JsonProperty(value = "user_id", access = JsonProperty.Access.WRITE_ONLY)
    private String userId;

    /*
     * The hyper parameter settings used in a fine tune job.
     */
    @JsonProperty(value = "hyperparams")
    private HyperParameters hyperparams;

    /**
     * Creates an instance of FineTune class.
     *
     * @param model the model value to set.
     * @param trainingFiles the trainingFiles value to set.
     */
    @JsonCreator
    private FineTune(
            @JsonProperty(value = "model", required = true) String model,
            @JsonProperty(value = "training_files", required = true) List<File> trainingFiles) {
        this.model = model;
        this.trainingFiles = trainingFiles;
    }

    /**
     * Get the object property: Defines the type of an object.
     *
     * @return the object value.
     */
    public TypeDiscriminator getObject() {
        return this.object;
    }

    /**
     * Get the status property: The state of a job or item.
     *
     * @return the status value.
     */
    public State getStatus() {
        return this.status;
    }

    /**
     * Get the createdAt property: A timestamp when this job or item was created (in unix epochs).
     *
     * @return the createdAt value.
     */
    public Integer getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Get the updatedAt property: A timestamp when this job or item was modified last (in unix epochs).
     *
     * @return the updatedAt value.
     */
    public Integer getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Get the id property: The identity of this item.
     *
     * @return the id value.
     */
    public String getId() {
        return this.id;
    }

    /**
     * Get the model property: The identifier of the base model used for the fine-tune.
     *
     * @return the model value.
     */
    public String getModel() {
        return this.model;
    }

    /**
     * Get the fineTunedModel property: The identifier of the resulting fine tuned model. This property is only
     * populated for successfully completed fine-tune runs. Use this identifier to create a deployment for inferencing.
     *
     * @return the fineTunedModel value.
     */
    public String getFineTunedModel() {
        return this.fineTunedModel;
    }

    /**
     * Get the trainingFiles property: The files that are used for training the fine tuned model.
     *
     * @return the trainingFiles value.
     */
    public List<File> getTrainingFiles() {
        return this.trainingFiles;
    }

    /**
     * Get the validationFiles property: The files that are used to evaluate the fine tuned model during training.
     *
     * @return the validationFiles value.
     */
    public List<File> getValidationFiles() {
        return this.validationFiles;
    }

    /**
     * Get the resultFiles property: The result files containing training and evaluation metrics in csv format. The file
     * is only available for successfully completed fine-tune runs.
     *
     * @return the resultFiles value.
     */
    public List<File> getResultFiles() {
        return this.resultFiles;
    }

    /**
     * Get the events property: The events that show the progress of the fine-tune run including queued, running and
     * completed.
     *
     * @return the events value.
     */
    public List<Event> getEvents() {
        return this.events;
    }

    /**
     * Get the organisationId property: The organisation id of this fine tune job. Unused on Azure OpenAI; compatibility
     * for OpenAI only.
     *
     * @return the organisationId value.
     */
    public String getOrganisationId() {
        return this.organisationId;
    }

    /**
     * Get the userId property: The user id of this fine tune job. Unused on Azure OpenAI; compatibility for OpenAI
     * only.
     *
     * @return the userId value.
     */
    public String getUserId() {
        return this.userId;
    }

    /**
     * Get the hyperparams property: The hyper parameter settings used in a fine tune job.
     *
     * @return the hyperparams value.
     */
    public HyperParameters getHyperparams() {
        return this.hyperparams;
    }
}
