import "@cadl-lang/rest";
import "@azure-tools/cadl-azure-core";

using Cadl.Http;
using Cadl.Rest;
using Cadl.Versioning;
using Azure.Core;
using Azure.Core.Foundations;

@service({
  title: "LongRunning",
  version: "1.0.0",
})
@versionedDependency(Azure.Core.Versions.v1_0_Preview_2)
namespace Cadl.LongRunning;

model Resource {
  @visibility("read")
  id: string;

  @key
  @segment("resources")
  name: string;
  type: string;
}

model ExportParams {
  @query
  projectFileVersion: string;
}

model ExportedResource {
  id: string;
  resourceUri: string;
}

@route("/long-running")
interface LongRunningOp {
  createOrUpdate is ResourceCreateOrUpdate<Resource>;

  @pollingOperation(CustomCore.pollingOperation<Resource>)
  createOrReplace is LongRunningResourceCreateOrReplace<Resource>;

  get is ResourceRead<Resource>;

  @pollingOperation(CustomCore.pollingOperation<Resource>)
  delete is LongRunningResourceDelete<Resource>;

  @pollingOperation(CustomCore.pollingOperation<ExportedResource>)
  export is LongRunningResourceAction<Resource, ExportParams, ExportedResource>;
}

namespace CustomCore {
  @parentResource(T)
  @resource("operations")
  @friendlyName("{name}Status", T)
  model OperationStatusResource<T> is OperationStatus<T>;

  @route("operations")
  op pollingOperation<TCustom> is ResourceRead<OperationStatusResource<TCustom>>;
}
