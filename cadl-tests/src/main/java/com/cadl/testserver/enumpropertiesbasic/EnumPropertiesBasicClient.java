// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.cadl.testserver.enumpropertiesbasic;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceClient;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.exception.ClientAuthenticationException;
import com.azure.core.exception.HttpResponseException;
import com.azure.core.exception.ResourceModifiedException;
import com.azure.core.exception.ResourceNotFoundException;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.BinaryData;
import com.azure.core.util.Context;
import com.cadl.testserver.enumpropertiesbasic.models.InputModel;
import com.cadl.testserver.enumpropertiesbasic.models.OutputModel;
import com.cadl.testserver.enumpropertiesbasic.models.RoundTripModel;

/** Initializes a new instance of the synchronous EnumPropertiesBasicClient type. */
@ServiceClient(builder = EnumPropertiesBasicClientBuilder.class)
public final class EnumPropertiesBasicClient {
    @Generated private final EnumPropertiesBasicAsyncClient client;

    /**
     * Initializes an instance of EnumPropertiesBasicClient class.
     *
     * @param client the async client.
     */
    @Generated
    EnumPropertiesBasicClient(EnumPropertiesBasicAsyncClient client) {
        this.client = client;
    }

    /**
     * The sendEnumPropertyModel operation.
     *
     * <p><strong>Request Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     Day: String(Monday/Tuesday/Wednesday/Thursday/Friday/Saturday/Sunday) (Required)
     *     Language: String(English/Spanish/Mandarin/Undocumented) (Required)
     * }
     * }</pre>
     *
     * @param input Input model with enum properties.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<Void> sendEnumPropertyModelWithResponse(BinaryData input, RequestOptions requestOptions) {
        return this.client.sendEnumPropertyModelWithResponse(input, requestOptions).block();
    }

    /**
     * The getEnumPropertModel operation.
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     Day: String(Monday/Tuesday/Wednesday/Thursday/Friday/Saturday/Sunday) (Required)
     *     Language: String(English/Spanish/Mandarin/Undocumented) (Required)
     * }
     * }</pre>
     *
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return output model with enum properties along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> getEnumPropertModelWithResponse(RequestOptions requestOptions) {
        return this.client.getEnumPropertModelWithResponse(requestOptions).block();
    }

    /**
     * The setEnumPropertModel operation.
     *
     * <p><strong>Request Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     Day: String(Monday/Tuesday/Wednesday/Thursday/Friday/Saturday/Sunday) (Required)
     *     Language: String(English/Spanish/Mandarin/Undocumented) (Required)
     * }
     * }</pre>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     Day: String(Monday/Tuesday/Wednesday/Thursday/Friday/Saturday/Sunday) (Required)
     *     Language: String(English/Spanish/Mandarin/Undocumented) (Required)
     * }
     * }</pre>
     *
     * @param input Round-trip model with enum properties.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return round-trip model with enum properties along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> setEnumPropertModelWithResponse(BinaryData input, RequestOptions requestOptions) {
        return this.client.setEnumPropertModelWithResponse(input, requestOptions).block();
    }

    /*
     * Generated convenience method for sendEnumPropertyModelWithResponse
     */
    /**
     * The sendEnumPropertyModel operation.
     *
     * @param input Input model with enum properties.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.exception.HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    public void sendEnumPropertyModel(InputModel input) {
        RequestOptions requestOptions = new RequestOptions();
        sendEnumPropertyModelWithResponse(BinaryData.fromObject(input), requestOptions).getValue();
    }

    /*
     * Generated convenience method for sendEnumPropertyModelWithResponse
     */
    /**
     * The sendEnumPropertyModel operation.
     *
     * @param input Input model with enum properties.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.exception.HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    public Response<Void> sendEnumPropertyModelWithResponse(InputModel input, Context context) {
        RequestOptions requestOptions = new RequestOptions();
        requestOptions.setContext(context);
        return sendEnumPropertyModelWithResponse(BinaryData.fromObject(input), requestOptions);
    }

    /*
     * Generated convenience method for getEnumPropertModelWithResponse
     */
    /**
     * The getEnumPropertModel operation.
     *
     * @throws com.azure.core.exception.HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return output model with enum properties.
     */
    public OutputModel getEnumPropertModel() {
        RequestOptions requestOptions = new RequestOptions();
        return getEnumPropertModelWithResponse(requestOptions).getValue().toObject(OutputModel.class);
    }

    /*
     * Generated convenience method for getEnumPropertModelWithResponse
     */
    /**
     * The getEnumPropertModel operation.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.exception.HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return output model with enum properties along with {@link Response}.
     */
    public Response<OutputModel> getEnumPropertModelWithResponse(Context context) {
        RequestOptions requestOptions = new RequestOptions();
        requestOptions.setContext(context);
        Response<BinaryData> protocolMethodResponse = getEnumPropertModelWithResponse(requestOptions);
        return new SimpleResponse<>(
                protocolMethodResponse, protocolMethodResponse.getValue().toObject(OutputModel.class));
    }

    /*
     * Generated convenience method for setEnumPropertModelWithResponse
     */
    /**
     * The setEnumPropertModel operation.
     *
     * @param input Round-trip model with enum properties.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.exception.HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return round-trip model with enum properties.
     */
    public RoundTripModel setEnumPropertModel(RoundTripModel input) {
        RequestOptions requestOptions = new RequestOptions();
        return setEnumPropertModelWithResponse(BinaryData.fromObject(input), requestOptions)
                .getValue()
                .toObject(RoundTripModel.class);
    }

    /*
     * Generated convenience method for setEnumPropertModelWithResponse
     */
    /**
     * The setEnumPropertModel operation.
     *
     * @param input Round-trip model with enum properties.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.exception.HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return round-trip model with enum properties along with {@link Response}.
     */
    public Response<RoundTripModel> setEnumPropertModelWithResponse(RoundTripModel input, Context context) {
        RequestOptions requestOptions = new RequestOptions();
        requestOptions.setContext(context);
        Response<BinaryData> protocolMethodResponse =
                setEnumPropertModelWithResponse(BinaryData.fromObject(input), requestOptions);
        return new SimpleResponse<>(
                protocolMethodResponse, protocolMethodResponse.getValue().toObject(RoundTripModel.class));
    }
}
