// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.cadl.testserver.readonlyproperties.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Round-trip model with readonly properties. */
@Immutable
public final class RoundTripModel {
    /*
     * Required string, illustrating a readonly reference type property.
     */
    @JsonProperty(value = "requiredReadonlyString", required = true, access = JsonProperty.Access.WRITE_ONLY)
    private String requiredReadonlyString;

    /*
     * Required int, illustrating a readonly value type property.
     */
    @JsonProperty(value = "requiredReadonlyInt", required = true, access = JsonProperty.Access.WRITE_ONLY)
    private long requiredReadonlyInt;

    /*
     * Optional string, illustrating a readonly reference type property.
     */
    @JsonProperty(value = "optionalReadonlyString", access = JsonProperty.Access.WRITE_ONLY)
    private String optionalReadonlyString;

    /*
     * Optional int, illustrating a readonly value type property.
     */
    @JsonProperty(value = "optionalReadonlyInt", access = JsonProperty.Access.WRITE_ONLY)
    private Long optionalReadonlyInt;

    /*
     * Required readonly model.
     */
    @JsonProperty(value = "requiredReadonlyModel", required = true, access = JsonProperty.Access.WRITE_ONLY)
    private ReadonlyModel requiredReadonlyModel;

    /*
     * Optional readonly model.
     */
    @JsonProperty(value = "optionalReadonlyModel", access = JsonProperty.Access.WRITE_ONLY)
    private ReadonlyModel optionalReadonlyModel;

    /*
     * Required readonly string collection.
     */
    @JsonProperty(value = "requiredReadonlyStringList", required = true, access = JsonProperty.Access.WRITE_ONLY)
    private List<String> requiredReadonlyStringList;

    /*
     * Required readonly int collection.
     */
    @JsonProperty(value = "requiredReadonlyIntList", required = true, access = JsonProperty.Access.WRITE_ONLY)
    private List<Long> requiredReadonlyIntList;

    /*
     * Optional readonly string collection.
     */
    @JsonProperty(value = "optionalReadonlyStringList", access = JsonProperty.Access.WRITE_ONLY)
    private List<String> optionalReadonlyStringList;

    /*
     * Optional readonly int collection.
     */
    @JsonProperty(value = "optionalReadonlyIntList", access = JsonProperty.Access.WRITE_ONLY)
    private List<Long> optionalReadonlyIntList;

    /**
     * Creates an instance of RoundTripModel class.
     *
     * @param requiredReadonlyString the requiredReadonlyString value to set.
     * @param requiredReadonlyInt the requiredReadonlyInt value to set.
     * @param requiredReadonlyModel the requiredReadonlyModel value to set.
     * @param requiredReadonlyStringList the requiredReadonlyStringList value to set.
     * @param requiredReadonlyIntList the requiredReadonlyIntList value to set.
     */
    @JsonCreator
    public RoundTripModel(
            @JsonProperty(value = "requiredReadonlyString", required = true, access = JsonProperty.Access.WRITE_ONLY)
                    String requiredReadonlyString,
            @JsonProperty(value = "requiredReadonlyInt", required = true, access = JsonProperty.Access.WRITE_ONLY)
                    long requiredReadonlyInt,
            @JsonProperty(value = "requiredReadonlyModel", required = true, access = JsonProperty.Access.WRITE_ONLY)
                    ReadonlyModel requiredReadonlyModel,
            @JsonProperty(
                            value = "requiredReadonlyStringList",
                            required = true,
                            access = JsonProperty.Access.WRITE_ONLY)
                    List<String> requiredReadonlyStringList,
            @JsonProperty(value = "requiredReadonlyIntList", required = true, access = JsonProperty.Access.WRITE_ONLY)
                    List<Long> requiredReadonlyIntList) {
        this.requiredReadonlyString = requiredReadonlyString;
        this.requiredReadonlyInt = requiredReadonlyInt;
        this.requiredReadonlyModel = requiredReadonlyModel;
        this.requiredReadonlyStringList = requiredReadonlyStringList;
        this.requiredReadonlyIntList = requiredReadonlyIntList;
    }

    /**
     * Get the requiredReadonlyString property: Required string, illustrating a readonly reference type property.
     *
     * @return the requiredReadonlyString value.
     */
    public String getRequiredReadonlyString() {
        return this.requiredReadonlyString;
    }

    /**
     * Get the requiredReadonlyInt property: Required int, illustrating a readonly value type property.
     *
     * @return the requiredReadonlyInt value.
     */
    public long getRequiredReadonlyInt() {
        return this.requiredReadonlyInt;
    }

    /**
     * Get the optionalReadonlyString property: Optional string, illustrating a readonly reference type property.
     *
     * @return the optionalReadonlyString value.
     */
    public String getOptionalReadonlyString() {
        return this.optionalReadonlyString;
    }

    /**
     * Get the optionalReadonlyInt property: Optional int, illustrating a readonly value type property.
     *
     * @return the optionalReadonlyInt value.
     */
    public Long getOptionalReadonlyInt() {
        return this.optionalReadonlyInt;
    }

    /**
     * Get the requiredReadonlyModel property: Required readonly model.
     *
     * @return the requiredReadonlyModel value.
     */
    public ReadonlyModel getRequiredReadonlyModel() {
        return this.requiredReadonlyModel;
    }

    /**
     * Get the optionalReadonlyModel property: Optional readonly model.
     *
     * @return the optionalReadonlyModel value.
     */
    public ReadonlyModel getOptionalReadonlyModel() {
        return this.optionalReadonlyModel;
    }

    /**
     * Get the requiredReadonlyStringList property: Required readonly string collection.
     *
     * @return the requiredReadonlyStringList value.
     */
    public List<String> getRequiredReadonlyStringList() {
        return this.requiredReadonlyStringList;
    }

    /**
     * Get the requiredReadonlyIntList property: Required readonly int collection.
     *
     * @return the requiredReadonlyIntList value.
     */
    public List<Long> getRequiredReadonlyIntList() {
        return this.requiredReadonlyIntList;
    }

    /**
     * Get the optionalReadonlyStringList property: Optional readonly string collection.
     *
     * @return the optionalReadonlyStringList value.
     */
    public List<String> getOptionalReadonlyStringList() {
        return this.optionalReadonlyStringList;
    }

    /**
     * Get the optionalReadonlyIntList property: Optional readonly int collection.
     *
     * @return the optionalReadonlyIntList value.
     */
    public List<Long> getOptionalReadonlyIntList() {
        return this.optionalReadonlyIntList;
    }
}
