@using System.Linq
@using AutoRest.Java
@inherits AutoRest.Core.Template<AutoRest.Java.Model.EnumTypeJv>
/**
@Header(" * ").TrimMultilineHeader()
 */
@EmptyLine

package @(Settings.Namespace.ToLower())@Model.ModelsPackage;
@EmptyLine
@if (!Model.ModelAsString)
{
<text>
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
@EmptyLine
</text>
}
else
{
<text>
import com.fasterxml.jackson.annotation.JsonValue;
@EmptyLine
</text>
}

/**
 * Defines values for @(Model.Name).
 */
@if (!Model.ModelAsString)
{
<text>
public enum @(Model.Name) {
@for (int i = 0; i < Model.Values.Count - 1; i++)
{
@:    /** Enum value @(Model.Values[i].SerializedName). */
@:    @(Model.Values[i].MemberName)("@(Model.Values[i].SerializedName)"),
@EmptyLine
}
    /** Enum value @(Model.Values.Last().SerializedName). */
    @(Model.Values.Last().MemberName)("@(Model.Values.Last().SerializedName)");
    @EmptyLine

    /** The actual serialized value for a @(Model.Name) instance. */
    private String value;
    @EmptyLine

    @(Model.Name)(String value) {
        this.value = value;
    }
    @EmptyLine

    /**
     * Parses a serialized value to a @(Model.Name) instance.
     *
     * @@param value the serialized value to parse.
     * @@return the parsed @(Model.Name) object, or null if unable to parse.
     */
    @@JsonCreator
    public static @Model.Name fromString(String value) {
        @(Model.Name)[] items = @(Model.Name).values();
        for (@(Model.Name) item : items) {
            if (item.toString().equalsIgnoreCase(value)) {
                return item;
            }
        }
        return null;
    }
    @EmptyLine
    
    @@JsonValue
    @@Override
    public String toString() {
        return this.value;
    }
}
</text>
}
else
{
<text>
public final class @(Model.Name) {
@for (int i = 0; i < Model.Values.Count; i++)
{
@:    /** Static value @(Model.Values[i].SerializedName) for @(Model.Name). */
@:    public static final @(Model.Name) @(Model.Values[i].MemberName) = new @(Model.Name)("@(Model.Values[i].SerializedName)");
@EmptyLine
}
    private String value;
@EmptyLine
    /**
     * Creates a custom value for @(Model.Name).
     * @@param value the custom value
     */
    public @(Model.Name)(String value) {
        this.value = value;
    }
@EmptyLine
    @@JsonValue
    @@Override
    public String toString() {
        return value;
    }
@EmptyLine
    @@Override
    public int hashCode() {
        return value.hashCode();
    }
@EmptyLine
    @@Override
    public boolean equals(Object obj) {
        if (!(obj instanceof @(Model.Name))) {
            return false;
        }
        if (obj == this) {
            return true;
        }

        @(Model.Name) rhs = (@(Model.Name)) obj;
        if (value == null) {
            return rhs.value == null;
        } else {
            return value.equals(rhs.value);
        }
    }
}
</text>
}
