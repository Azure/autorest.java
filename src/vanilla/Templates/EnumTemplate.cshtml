@using System.Linq
@using AutoRest.Java
@inherits AutoRest.Core.Template<AutoRest.Java.Model.EnumTypeJv>
/**
@Header(" * ").TrimMultilineHeader()
 */
@EmptyLine

package @(Settings.Namespace.ToLower())@Model.ModelsPackage;
@EmptyLine
@if (!Model.ModelAsString)
{
<text>
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
</text>
}
else
{
<text>
import java.util.Collection;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.microsoft.rest.ExpandableStringEnum;
</text>
}
@EmptyLine
/**
 * Defines values for @(Model.Name).
 */
@if (!Model.ModelAsString)
{
<text>
public enum @(Model.Name) {
@for (int i = 0; i < Model.Values.Count - 1; i++)
{
@:    /** Enum value @(Model.Values[i].SerializedName). */
@:    @(Model.Values[i].MemberName)("@(Model.Values[i].SerializedName)"),
@EmptyLine
}
    /** Enum value @(Model.Values.Last().SerializedName). */
    @(Model.Values.Last().MemberName)("@(Model.Values.Last().SerializedName)");
    @EmptyLine

    /** The actual serialized value for a @(Model.Name) instance. */
    private String value;
    @EmptyLine

    @(Model.Name)(String value) {
        this.value = value;
    }
    @EmptyLine

    /**
     * Parses a serialized value to a @(Model.Name) instance.
     *
     * @@param value the serialized value to parse.
     * @@return the parsed @(Model.Name) object, or null if unable to parse.
     */
    @@JsonCreator
    public static @Model.Name fromString(String value) {
        @(Model.Name)[] items = @(Model.Name).values();
        for (@(Model.Name) item : items) {
            if (item.toString().equalsIgnoreCase(value)) {
                return item;
            }
        }
        return null;
    }
    @EmptyLine
    
    @@JsonValue
    @@Override
    public String toString() {
        return this.value;
    }
}
</text>
}
else
{
<text>
public final class @(Model.Name) extends ExpandableStringEnum<@(Model.Name)> {
@for (int i = 0; i < Model.Values.Count; i++)
{
@:    /** Static value @(Model.Values[i].SerializedName) for @(Model.Name). */
@:    public static final @(Model.Name) @(Model.Values[i].MemberName) = fromString("@(Model.Values[i].SerializedName)");
@EmptyLine
}
    /**
     * Creates or finds a @(Model.Name) from its string representation.
     * @@param name a name to look for
     * @@return the corresponding @(Model.Name)
     */
    @@JsonCreator
    public static @(Model.Name) fromString(String name) {
        return fromString(name, @(Model.Name).class);
    }
@EmptyLine
    /**
     * @@return known @(Model.Name) values
     */
    public static Collection<@(Model.Name)> values() {
        return values(@(Model.Name).class);
    }
}
</text>
}