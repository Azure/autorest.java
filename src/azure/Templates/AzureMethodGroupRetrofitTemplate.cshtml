@using System.Linq;
@using AutoRest.Core.Model
@using AutoRest.Core.Utilities
@using AutoRest.Java.Azure.Model
@inherits AutoRest.Core.Template<AutoRest.Java.Azure.Model.MethodGroupJva>
/**
 * The interface defining all the services for @Model.TypeName to be
 * used by Retrofit to perform actually REST calls.
 */
interface @Model.MethodGroupServiceType {
@foreach (MethodJva method in Model.Methods)
{
if (method.RequestContentType == "multipart/form-data" || method.RequestContentType == "application/x-www-form-urlencoded")
{
@:    @@Multipart
}
else
{
@:    @@Headers({ "Content-Type: @method.RequestContentType", "x-ms-logging-context: @Model.MethodGroupFullType @method.Name" })
}
if (method.HttpMethod == HttpMethod.Delete)
{
@:    @@HTTP(path = "@(method.Url.TrimStart('/'))", method = "DELETE", hasBody = true)
}
else if (method.IsPagingNextOperation)
{
@:    @@GET
}
else
{
@:    @@@(method.HttpMethod.ToString().ToUpper())("@(method.Url.TrimStart('/'))")
}
if (method.ReturnType.Body.IsPrimaryType(KnownPrimaryType.Stream))
{
@:    @@Streaming
}
@:    Observable<Response<@method.CallType>> @(method.Name)(@method.MethodParameterApiDeclaration);
@EmptyLine
}
}