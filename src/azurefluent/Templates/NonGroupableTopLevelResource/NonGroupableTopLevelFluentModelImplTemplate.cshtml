@using System
@using AutoRest.Java
@using AutoRest.Java.vanilla.Templates
@using AutoRest.Java.azure.Templates
@using System.Linq
@using AutoRest.Core.Utilities
@using AutoRest.Java.Model
@using AutoRest.Java.Azure.Model
@using  AutoRest.Java.Azure.Fluent.Model;
@inherits AutoRest.Core.Template<AutoRest.Java.Azure.Fluent.Model.NonGroupableTopLevelFluentModelImpl>
/**
@Header(" * ").TrimMultilineHeader()
 *
 */
@EmptyLine

package @(Settings.Namespace.ToLower()).implementation;

@EmptyLine

@foreach (var importClass in Model.Imports)
{
@:import @importClass;
}
@EmptyLine

class @(Model.JvaClassName)@(Model.ExtendsFrom)@(Model.Implements) {

@foreach (var varDecl in Model.DeclareMemberVariables)
{
    @:@varDecl
}
    @Model.DeclareManagerVariable
@EmptyLine
@foreach (var jvaMethod in Model.JavaMethods)
{
@:    @jvaMethod
@:    @EmptyLine
}
@foreach (PropertyJv property in Model.Interface.LocalProperties)
{
@:    @@Override
@:    public @(((IModelTypeJv)property.ModelType).ResponseVariant.Name) @(property.Name.ToCamelCase())() {
@:        return this.inner().@(property.Name.ToCamelCase())();
@:    }
@EmptyLine
}

@foreach (FluentDefinitionOrUpdateStageMethod createWither in Model.Interface.CreateOnlyWither)
{
    var methodSignature = $"{Model.JvaClassName} {createWither.Name}({createWither.ParameterDeclaration})";
@:    @@Override
@:    public @(methodSignature) {
<text>
        @(createWither.Body)
        return this;
</text>
@:    }
@EmptyLine
}

@foreach (FluentDefinitionOrUpdateStageMethod updateWither in Model.Interface.UpdateOnlyWithers)
{
    var methodSignature = $"{Model.JvaClassName} {updateWither.Name}({updateWither.ParameterDeclaration})";
@:    @@Override
@:    public @(methodSignature) {
<text>
        @(updateWither.Body)
        return this;
</text>
@:    }
@EmptyLine
}

@foreach (FluentDefinitionOrUpdateStageMethod cuWither in Model.Interface.CreateAndUpdateWithers)
{
    var methodSignature = $"{Model.JvaClassName} {cuWither.Name}({cuWither.ParameterDeclaration})";
@:    @@Override
@:    public @(methodSignature) {
<text>
        @(cuWither.Body)
        return this;
</text>
@:    }
@EmptyLine
}
}