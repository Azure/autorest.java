// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.type.union;

import com.azure.core.annotation.BodyParam;
import com.azure.core.annotation.ExpectedResponses;
import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Get;
import com.azure.core.annotation.HeaderParam;
import com.azure.core.annotation.Host;
import com.azure.core.annotation.Post;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceClient;
import com.azure.core.annotation.ServiceInterface;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.annotation.UnexpectedResponseExceptionType;
import com.azure.core.exception.ClientAuthenticationException;
import com.azure.core.exception.HttpResponseException;
import com.azure.core.exception.ResourceModifiedException;
import com.azure.core.exception.ResourceNotFoundException;
import com.azure.core.http.HttpHeaderName;
import com.azure.core.http.HttpPipeline;
import com.azure.core.http.HttpPipelineBuilder;
import com.azure.core.http.policy.RetryPolicy;
import com.azure.core.http.policy.UserAgentPolicy;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.RestProxy;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.BinaryData;
import com.azure.core.util.Context;
import com.azure.core.util.FluxUtil;
import com.azure.core.util.UrlBuilder;
import com.azure.core.util.logging.ClientLogger;
import com.azure.core.util.serializer.SerializerAdapter;
import com.type.union.implementation.UnionClientImpl;
import java.util.Objects;
import java.util.stream.Collectors;
import reactor.core.publisher.Mono;

/**
 * Initializes a new instance of the synchronous UnionClient type.
 */
@ServiceClient(builder = UnionClientBuilder.class)
public final class UnionClient {
    @Generated
    private final UnionClientImpl serviceClient;

    /**
     * Initializes an instance of UnionClient class.
     * 
     * @param serviceClient the service client implementation.
     */
    @Generated
     UnionClient(UnionClientImpl serviceClient) {
        this.serviceClient = serviceClient;
    }

    /**
     * The sendInt operation.
     * <p><strong>Request Body Schema</strong></p>
     * <pre>{@code
     * {
     *     simpleUnion: SimpleUnionModelBase (Required)
     * }
     * }</pre>
     * 
     * @param input The input parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<Void> sendIntWithResponse(BinaryData input, RequestOptions requestOptions) {
        // Convenience API is not generated, as operation 'sendInt' refers Union 'int32 | int32[]'
        return this.serviceClient.sendIntWithResponse(input, requestOptions);
    }

    /**
     * The sendIntArray operation.
     * <p><strong>Request Body Schema</strong></p>
     * <pre>{@code
     * {
     *     simpleUnion: SimpleUnionModelBase (Required)
     * }
     * }</pre>
     * 
     * @param input The input parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<Void> sendIntArrayWithResponse(BinaryData input, RequestOptions requestOptions) {
        // Convenience API is not generated, as operation 'sendIntArray' refers Union 'int32 | int32[]'
        return this.serviceClient.sendIntArrayWithResponse(input, requestOptions);
    }

    /**
     * The sendFirstNamedUnionValue operation.
     * <p><strong>Request Body Schema</strong></p>
     * <pre>{@code
     * {
     *     namedUnion: NamedUnionModelBase (Required)
     * }
     * }</pre>
     * 
     * @param input The input parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<Void> sendFirstNamedUnionValueWithResponse(BinaryData input, RequestOptions requestOptions) {
        // Convenience API is not generated, as operation 'sendFirstNamedUnionValue' refers Union 'MyNamedUnion'
        return this.serviceClient.sendFirstNamedUnionValueWithResponse(input, requestOptions);
    }

    /**
     * The sendSecondNamedUnionValue operation.
     * <p><strong>Request Body Schema</strong></p>
     * <pre>{@code
     * {
     *     namedUnion: NamedUnionModelBase (Required)
     * }
     * }</pre>
     * 
     * @param input The input parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<Void> sendSecondNamedUnionValueWithResponse(BinaryData input, RequestOptions requestOptions) {
        // Convenience API is not generated, as operation 'sendSecondNamedUnionValue' refers Union 'MyNamedUnion'
        return this.serviceClient.sendSecondNamedUnionValueWithResponse(input, requestOptions);
    }

    /**
     * The receiveString operation.
     * <p><strong>Response Body Schema</strong></p>
     * <pre>{@code
     * {
     *     simpleUnion: SimpleUnionModelBase (Required)
     * }
     * }</pre>
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the response body along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> receiveStringWithResponse(RequestOptions requestOptions) {
        // Convenience API is not generated, as operation 'receiveString' refers Union 'string | int32[]'
        return this.serviceClient.receiveStringWithResponse(requestOptions);
    }

    /**
     * The receiveIntArray operation.
     * <p><strong>Response Body Schema</strong></p>
     * <pre>{@code
     * {
     *     simpleUnion: SimpleUnionModelBase (Required)
     * }
     * }</pre>
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the response body along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> receiveIntArrayWithResponse(RequestOptions requestOptions) {
        // Convenience API is not generated, as operation 'receiveIntArray' refers Union 'string | int32[]'
        return this.serviceClient.receiveIntArrayWithResponse(requestOptions);
    }

    /**
     * The receiveFirstNamedUnionValue operation.
     * <p><strong>Response Body Schema</strong></p>
     * <pre>{@code
     * {
     *     namedUnion: NamedUnionModelBase (Required)
     * }
     * }</pre>
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the response body along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> receiveFirstNamedUnionValueWithResponse(RequestOptions requestOptions) {
        // Convenience API is not generated, as operation 'receiveFirstNamedUnionValue' refers Union 'MyNamedUnion'
        return this.serviceClient.receiveFirstNamedUnionValueWithResponse(requestOptions);
    }

    /**
     * The receiveSecondNamedUnionValue operation.
     * <p><strong>Response Body Schema</strong></p>
     * <pre>{@code
     * {
     *     namedUnion: NamedUnionModelBase (Required)
     * }
     * }</pre>
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the response body along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> receiveSecondNamedUnionValueWithResponse(RequestOptions requestOptions) {
        // Convenience API is not generated, as operation 'receiveSecondNamedUnionValue' refers Union 'MyNamedUnion'
        return this.serviceClient.receiveSecondNamedUnionValueWithResponse(requestOptions);
    }
}
