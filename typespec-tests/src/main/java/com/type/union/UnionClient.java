// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.type.union;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceClient;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.exception.ClientAuthenticationException;
import com.azure.core.exception.HttpResponseException;
import com.azure.core.exception.ResourceModifiedException;
import com.azure.core.exception.ResourceNotFoundException;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.util.BinaryData;
import com.type.union.implementation.UnionClientImpl;
import com.type.union.models.ModelWithNamedUnionProperty;
import com.type.union.models.ModelWithNamedUnionPropertyInResponse;
import com.type.union.models.ModelWithSimpleUnionProperty;
import com.type.union.models.ModelWithSimpleUnionPropertyInResponse;

/**
 * Initializes a new instance of the synchronous UnionClient type.
 */
@ServiceClient(builder = UnionClientBuilder.class)
public final class UnionClient {
    @Generated
    private final UnionClientImpl serviceClient;

    /**
     * Initializes an instance of UnionClient class.
     * 
     * @param serviceClient the service client implementation.
     */
    @Generated
    UnionClient(UnionClientImpl serviceClient) {
        this.serviceClient = serviceClient;
    }

    /**
     * The sendInt operation.
     * <p>
     * <strong>Request Body Schema</strong>
     * </p>
     * <pre>{@code
     * {
     *     simpleUnion: BinaryData (Required)
     * }
     * }</pre>
     * 
     * @param input The input parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<Void> sendIntWithResponse(BinaryData input, RequestOptions requestOptions) {
        return this.serviceClient.sendIntWithResponse(input, requestOptions);
    }

    /**
     * The sendIntArray operation.
     * <p>
     * <strong>Request Body Schema</strong>
     * </p>
     * <pre>{@code
     * {
     *     simpleUnion: BinaryData (Required)
     * }
     * }</pre>
     * 
     * @param input The input parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<Void> sendIntArrayWithResponse(BinaryData input, RequestOptions requestOptions) {
        return this.serviceClient.sendIntArrayWithResponse(input, requestOptions);
    }

    /**
     * The sendFirstNamedUnionValue operation.
     * <p>
     * <strong>Request Body Schema</strong>
     * </p>
     * <pre>{@code
     * {
     *     namedUnion: BinaryData (Required)
     * }
     * }</pre>
     * 
     * @param input The input parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<Void> sendFirstNamedUnionValueWithResponse(BinaryData input, RequestOptions requestOptions) {
        return this.serviceClient.sendFirstNamedUnionValueWithResponse(input, requestOptions);
    }

    /**
     * The sendSecondNamedUnionValue operation.
     * <p>
     * <strong>Request Body Schema</strong>
     * </p>
     * <pre>{@code
     * {
     *     namedUnion: BinaryData (Required)
     * }
     * }</pre>
     * 
     * @param input The input parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<Void> sendSecondNamedUnionValueWithResponse(BinaryData input, RequestOptions requestOptions) {
        return this.serviceClient.sendSecondNamedUnionValueWithResponse(input, requestOptions);
    }

    /**
     * The receiveString operation.
     * <p>
     * <strong>Response Body Schema</strong>
     * </p>
     * <pre>{@code
     * {
     *     simpleUnion: BinaryData (Required)
     * }
     * }</pre>
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the response body along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> receiveStringWithResponse(RequestOptions requestOptions) {
        return this.serviceClient.receiveStringWithResponse(requestOptions);
    }

    /**
     * The receiveIntArray operation.
     * <p>
     * <strong>Response Body Schema</strong>
     * </p>
     * <pre>{@code
     * {
     *     simpleUnion: BinaryData (Required)
     * }
     * }</pre>
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the response body along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> receiveIntArrayWithResponse(RequestOptions requestOptions) {
        return this.serviceClient.receiveIntArrayWithResponse(requestOptions);
    }

    /**
     * The receiveFirstNamedUnionValue operation.
     * <p>
     * <strong>Response Body Schema</strong>
     * </p>
     * <pre>{@code
     * {
     *     namedUnion: BinaryData (Required)
     * }
     * }</pre>
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the response body along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> receiveFirstNamedUnionValueWithResponse(RequestOptions requestOptions) {
        return this.serviceClient.receiveFirstNamedUnionValueWithResponse(requestOptions);
    }

    /**
     * The receiveSecondNamedUnionValue operation.
     * <p>
     * <strong>Response Body Schema</strong>
     * </p>
     * <pre>{@code
     * {
     *     namedUnion: BinaryData (Required)
     * }
     * }</pre>
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the response body along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> receiveSecondNamedUnionValueWithResponse(RequestOptions requestOptions) {
        return this.serviceClient.receiveSecondNamedUnionValueWithResponse(requestOptions);
    }

    /**
     * The sendInt operation.
     * 
     * @param input The input parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public void sendInt(ModelWithSimpleUnionProperty input) {
        // Generated convenience method for sendIntWithResponse
        RequestOptions requestOptions = new RequestOptions();
        sendIntWithResponse(BinaryData.fromObject(input), requestOptions).getValue();
    }

    /**
     * The sendIntArray operation.
     * 
     * @param input The input parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public void sendIntArray(ModelWithSimpleUnionProperty input) {
        // Generated convenience method for sendIntArrayWithResponse
        RequestOptions requestOptions = new RequestOptions();
        sendIntArrayWithResponse(BinaryData.fromObject(input), requestOptions).getValue();
    }

    /**
     * The sendFirstNamedUnionValue operation.
     * 
     * @param input The input parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public void sendFirstNamedUnionValue(ModelWithNamedUnionProperty input) {
        // Generated convenience method for sendFirstNamedUnionValueWithResponse
        RequestOptions requestOptions = new RequestOptions();
        sendFirstNamedUnionValueWithResponse(BinaryData.fromObject(input), requestOptions).getValue();
    }

    /**
     * The sendSecondNamedUnionValue operation.
     * 
     * @param input The input parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public void sendSecondNamedUnionValue(ModelWithNamedUnionProperty input) {
        // Generated convenience method for sendSecondNamedUnionValueWithResponse
        RequestOptions requestOptions = new RequestOptions();
        sendSecondNamedUnionValueWithResponse(BinaryData.fromObject(input), requestOptions).getValue();
    }

    /**
     * The receiveString operation.
     * 
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public ModelWithSimpleUnionPropertyInResponse receiveString() {
        // Generated convenience method for receiveStringWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return receiveStringWithResponse(requestOptions).getValue()
            .toObject(ModelWithSimpleUnionPropertyInResponse.class);
    }

    /**
     * The receiveIntArray operation.
     * 
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public ModelWithSimpleUnionPropertyInResponse receiveIntArray() {
        // Generated convenience method for receiveIntArrayWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return receiveIntArrayWithResponse(requestOptions).getValue()
            .toObject(ModelWithSimpleUnionPropertyInResponse.class);
    }

    /**
     * The receiveFirstNamedUnionValue operation.
     * 
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public ModelWithNamedUnionPropertyInResponse receiveFirstNamedUnionValue() {
        // Generated convenience method for receiveFirstNamedUnionValueWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return receiveFirstNamedUnionValueWithResponse(requestOptions).getValue()
            .toObject(ModelWithNamedUnionPropertyInResponse.class);
    }

    /**
     * The receiveSecondNamedUnionValue operation.
     * 
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public ModelWithNamedUnionPropertyInResponse receiveSecondNamedUnionValue() {
        // Generated convenience method for receiveSecondNamedUnionValueWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return receiveSecondNamedUnionValueWithResponse(requestOptions).getValue()
            .toObject(ModelWithNamedUnionPropertyInResponse.class);
    }
}
