// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.cadl.wiretype.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.core.util.Base64Url;
import com.azure.core.util.CoreUtils;
import com.azure.core.util.DateTimeRfc1123;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.regex.Pattern;

/**
 * The SubClassBothMismatch model.
 */
@Immutable
public final class SubClassBothMismatch extends SuperClassMismatch {
    /*
     * The base64url property.
     */
    @Generated
    @JsonProperty(value = "base64url")
    private Base64Url base64Url;

    /**
     * Creates an instance of SubClassBothMismatch class.
     * 
     * @param dateTimeRfc7231 the dateTimeRfc7231 value to set.
     * @param base64Url the base64Url value to set.
     */
    @Generated
    public SubClassBothMismatch(OffsetDateTime dateTimeRfc7231, byte[] base64Url) {
        super(dateTimeRfc7231);
        this.base64Url = Base64Url.encode(base64Url);
    }

    @Generated
    @JsonCreator
    private SubClassBothMismatch(@JsonProperty(value = "dateTimeRfc7231") DateTimeRfc1123 dateTimeRfc7231, @JsonProperty(value = "base64url") Base64Url base64Url) {
        this(dateTimeRfc7231.getDateTime(), base64Url.decodedBytes());
    }

    /**
     * Get the base64Url property: The base64url property.
     * 
     * @return the base64Url value.
     */
    @Generated
    public byte[] getBase64Url() {
        if (this.base64Url == null) {
            return null;
        }
        return this.base64Url.decodedBytes();
    }
}
