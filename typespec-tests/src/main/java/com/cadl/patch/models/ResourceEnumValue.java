// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.cadl.patch.models;

import com.azure.core.annotation.Generated;
import com.azure.core.util.ExpandableStringEnum;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.Collection;

/**
 * Defines values for ResourceEnumValue.
 */
public final class ResourceEnumValue extends ExpandableStringEnum<ResourceEnumValue>
    implements JsonSerializable<ResourceEnumValue> {
    /**
     * Static value a for ResourceEnumValue.
     */
    @Generated
    public static final ResourceEnumValue A = fromString("a");

    /**
     * Static value b for ResourceEnumValue.
     */
    @Generated
    public static final ResourceEnumValue B = fromString("b");

    /**
     * Static value c for ResourceEnumValue.
     */
    @Generated
    public static final ResourceEnumValue C = fromString("c");

    /**
     * Creates a new instance of ResourceEnumValue value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Generated
    @Deprecated
    public ResourceEnumValue() {
    }

    /**
     * Creates or finds a ResourceEnumValue from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding ResourceEnumValue.
     */
    @Generated
    public static ResourceEnumValue fromString(String name) {
        return fromString(name, ResourceEnumValue.class);
    }

    /**
     * Gets known ResourceEnumValue values.
     * 
     * @return known ResourceEnumValue values.
     */
    @Generated
    public static Collection<ResourceEnumValue> values() {
        return values(ResourceEnumValue.class);
    }

    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        return jsonWriter.writeString(toString());
    }

    /**
     * Reads a ResourceEnumValue from the JSON stream.
     * <p>
     * The passed JsonReader must be positioned at a JsonToken.STRING value.
     * 
     * @param jsonReader The JsonReader being read.
     * @return The ResourceEnumValue that the JSON stream represented, may return null.
     * @throws java.io.IOException If a ResourceEnumValue fails to be read from the JsonReader.
     */
    @Generated
    public static ResourceEnumValue fromJson(JsonReader jsonReader) throws IOException {
        return fromString(jsonReader.getString(), ResourceEnumValue.class);
    }
}
