// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.projection.projectedname.generated;

// The Java test files under 'generated' package are generated for your reference.
// If you wish to modify these files, please copy them out of the 'generated' package, and modify there.
// See https://aka.ms/azsdk/dpg/java/tests for guide on adding a test.
import com.azure.core.http.HttpClient;
import com.azure.core.http.policy.HttpLogDetailLevel;
import com.azure.core.http.policy.HttpLogOptions;
import com.azure.core.test.TestMode;
import com.azure.core.test.TestProxyTestBase;
import com.projection.projectedname.ModelClient;
import com.projection.projectedname.ProjectedNameClient;
import com.projection.projectedname.ProjectedNameClientBuilder;
import com.projection.projectedname.PropertyClient;

class ProjectedNameClientTestBase extends TestProxyTestBase {

    protected ProjectedNameClient projectedNameClient;

    protected PropertyClient propertyClient;

    protected ModelClient modelClient;

    @Override
    protected void beforeTest() {
        ProjectedNameClientBuilder projectedNameClientbuilder
            = new ProjectedNameClientBuilder().httpClient(HttpClient.createDefault())
                .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            projectedNameClientbuilder.httpClient(interceptorManager.getPlaybackClient());
        } else if (getTestMode() == TestMode.RECORD) {
            projectedNameClientbuilder.addPolicy(interceptorManager.getRecordPolicy());
        }
        projectedNameClient = projectedNameClientbuilder.buildClient();
        ProjectedNameClientBuilder propertyClientbuilder
            = new ProjectedNameClientBuilder().httpClient(HttpClient.createDefault())
                .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            propertyClientbuilder.httpClient(interceptorManager.getPlaybackClient());
        } else if (getTestMode() == TestMode.RECORD) {
            propertyClientbuilder.addPolicy(interceptorManager.getRecordPolicy());
        }
        propertyClient = propertyClientbuilder.buildPropertyClient();
        ProjectedNameClientBuilder modelClientbuilder
            = new ProjectedNameClientBuilder().httpClient(HttpClient.createDefault())
                .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            modelClientbuilder.httpClient(interceptorManager.getPlaybackClient());
        } else if (getTestMode() == TestMode.RECORD) {
            modelClientbuilder.addPolicy(interceptorManager.getRecordPolicy());
        }
        modelClient = modelClientbuilder.buildModelClient();
    }
}
