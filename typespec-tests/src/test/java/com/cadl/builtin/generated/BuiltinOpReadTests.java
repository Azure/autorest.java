// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.cadl.builtin.generated;

import com.cadl.builtin.models.Builtin;
import com.cadl.builtin.models.Encoded;
import java.time.Duration;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class BuiltinOpReadTests extends BuiltinClientTestBase {
    @Test
    @Disabled
    public void testBuiltinOpReadTests() {
        // method invocation
        Builtin response = builtinClient.read(null, null, null, "myFilter", null, null);

        // response assertion
        Assertions.assertNotNull(response);

        boolean responseBooleanProperty = response.isBooleanProperty();
        Assertions.assertEquals(true, responseBooleanProperty);
        String responseString = response.getString();
        Assertions.assertEquals("myString", responseString);
        long responseSafeint = response.getSafeint();
        Assertions.assertEquals(32L, responseSafeint);
        long responseLongProperty = response.getLongProperty();
        Assertions.assertEquals(64L, responseLongProperty);
        double responseFloatProperty = response.getFloatProperty();
        Assertions.assertEquals(32.0, responseFloatProperty);
        double responseDoubleProperty = response.getDoubleProperty();
        Assertions.assertEquals(64.0, responseDoubleProperty);
        Duration responseDuration = response.getDuration();
        Assertions.assertNotNull(responseDuration);
        LocalDate responseDate = response.getDate();
        Assertions.assertNotNull(responseDate);
        OffsetDateTime responseDateTime = response.getDateTime();
        Assertions.assertNotNull(responseDateTime);
        List<String> responseStringList = response.getStringList();
        String responseStringListFirstItem = responseStringList.iterator().next();
        Assertions.assertEquals("a", responseStringListFirstItem);
        String responseUrl = response.getUrl();
        Assertions.assertEquals("https://www.github.com", responseUrl);
        Map<String, Double> responseNullableFloatDict = response.getNullableFloatDict();
        Assertions.assertNotNull(responseNullableFloatDict);
        Encoded responseEncoded = response.getEncoded();
        Assertions.assertNotNull(responseEncoded);

        Duration responseEncodedTimeInSeconds = responseEncoded.getTimeInSeconds();
        Assertions.assertNotNull(responseEncodedTimeInSeconds);
        Duration responseEncodedTimeInSecondsFraction = responseEncoded.getTimeInSecondsFraction();
        Assertions.assertNotNull(responseEncodedTimeInSecondsFraction);
        OffsetDateTime responseEncodedDateTime = responseEncoded.getDateTime();
        Assertions.assertNotNull(responseEncodedDateTime);
        OffsetDateTime responseEncodedDateTimeRfc7231 = responseEncoded.getDateTimeRfc7231();
        Assertions.assertNotNull(responseEncodedDateTimeRfc7231);
        OffsetDateTime responseEncodedUnixTimestamp = responseEncoded.getUnixTimestamp();
        Assertions.assertNotNull(responseEncodedUnixTimestamp);
        byte[] responseEncodedBase64 = responseEncoded.getBase64();
        Assertions.assertNotNull(responseEncodedBase64);
        byte[] responseEncodedBase64Url = responseEncoded.getBase64Url();
        Assertions.assertNotNull(responseEncodedBase64Url);
    }
}
