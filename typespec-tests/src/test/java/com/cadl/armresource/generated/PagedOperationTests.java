// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.cadl.armresource.generated;

import com.azure.core.util.BinaryData;
import com.cadl.armresource.fluent.models.OperationInner;
import com.cadl.armresource.models.ActionType;
import com.cadl.armresource.models.OperationDisplay;
import com.cadl.armresource.models.PagedOperation;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PagedOperationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PagedOperation model = BinaryData.fromString(
            "{\"value\":[{\"name\":\"aop\",\"isDataAction\":true,\"display\":{\"provider\":\"c\",\"resource\":\"xdcu\",\"operation\":\"fsrpymzidnse\",\"description\":\"xtbzsgfyccsne\"},\"origin\":\"system\",\"actionType\":\"Internal\"}],\"nextLink\":\"eiachboosflnr\"}")
            .toObject(PagedOperation.class);
        Assertions.assertEquals("c", model.value().get(0).display().provider());
        Assertions.assertEquals("xdcu", model.value().get(0).display().resource());
        Assertions.assertEquals("fsrpymzidnse", model.value().get(0).display().operation());
        Assertions.assertEquals("xtbzsgfyccsne", model.value().get(0).display().description());
        Assertions.assertEquals(ActionType.INTERNAL, model.value().get(0).actionType());
        Assertions.assertEquals("eiachboosflnr", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PagedOperation model
            = new PagedOperation()
                .withValue(Arrays.asList(new OperationInner()
                    .withDisplay(new OperationDisplay().withProvider("c").withResource("xdcu")
                        .withOperation("fsrpymzidnse").withDescription("xtbzsgfyccsne"))
                    .withActionType(ActionType.INTERNAL)))
                .withNextLink("eiachboosflnr");
        model = BinaryData.fromObject(model).toObject(PagedOperation.class);
        Assertions.assertEquals("c", model.value().get(0).display().provider());
        Assertions.assertEquals("xdcu", model.value().get(0).display().resource());
        Assertions.assertEquals("fsrpymzidnse", model.value().get(0).display().operation());
        Assertions.assertEquals("xtbzsgfyccsne", model.value().get(0).display().description());
        Assertions.assertEquals(ActionType.INTERNAL, model.value().get(0).actionType());
        Assertions.assertEquals("eiachboosflnr", model.nextLink());
    }
}
