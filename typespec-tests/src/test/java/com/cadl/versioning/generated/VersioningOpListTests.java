// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.cadl.versioning.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.HttpPipeline;
import com.azure.core.http.HttpPipelineBuilder;
import com.azure.core.http.policy.HttpLogDetailLevel;
import com.azure.core.http.policy.HttpLogOptions;
import com.azure.core.http.policy.RetryPolicy;
import com.azure.core.http.policy.UserAgentPolicy;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.test.TestMode;
import com.azure.core.test.TestProxyTestBase;
import com.azure.core.util.Configuration;
import com.azure.core.util.serializer.SerializerAdapter;
import com.azure.identity.DefaultAzureCredentialBuilder;
import com.cadl.versioning.VersioningAsyncClient;
import com.cadl.versioning.VersioningClient;
import com.cadl.versioning.VersioningClientBuilder;
import com.cadl.versioning.VersioningServiceVersion;
import com.cadl.versioning.implementation.VersioningClientImpl;
import com.cadl.versioning.models.Resource;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

@Disabled
public final class VersioningOpListTests extends VersioningClientTestBase {
    @Test
    @Disabled
    public void testVersioningOpListTests() {
        // method invocation
        PagedIterable<Resource> response = versioningClient.list(Arrays.asList("name=name"), "age gt 18");

        // response assertion
        Assertions.assertEquals(200, response.iterableByPage().iterator().next().getStatusCode());
        Resource firstItem = response.iterator().next();
        Assertions.assertNotNull(firstItem);
        // verify property "id"
        Assertions.assertEquals("myId", firstItem.getId());
        // verify property "name"
        Assertions.assertEquals("name", firstItem.getName());
        // verify property "type"
        Assertions.assertEquals("type", firstItem.getType());
    }
}
