// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.models.commontypes.managedidentity.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.models.commontypes.managedidentity.models.ManagedIdentityTrackedResourceUpdate;
import com.azure.resourcemanager.models.commontypes.managedidentity.models.ManagedServiceIdentity;
import com.azure.resourcemanager.models.commontypes.managedidentity.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.models.commontypes.managedidentity.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ManagedIdentityTrackedResourceUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ManagedIdentityTrackedResourceUpdate model = BinaryData.fromString(
            "{\"identity\":{\"principalId\":\"jbpzvgnwzsymg\",\"tenantId\":\"uf\",\"type\":\"SystemAssigned,UserAssigned\",\"userAssignedIdentities\":{\"ithxqhabifpi\":{\"principalId\":\"hdbihan\",\"clientId\":\"hfcbjysa\"},\"ivyqniwbybrkxvd\":{\"principalId\":\"wczbys\",\"clientId\":\"pqxu\"}}},\"tags\":{\"xgaudccs\":\"grtfwvu\",\"jcny\":\"h\",\"kryhtnapczwlokj\":\"j\"}}")
            .toObject(ManagedIdentityTrackedResourceUpdate.class);
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED, model.identity().type());
        Assertions.assertEquals("grtfwvu", model.tags().get("xgaudccs"));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ManagedIdentityTrackedResourceUpdate model = new ManagedIdentityTrackedResourceUpdate()
            .withIdentity(
                new ManagedServiceIdentity().withType(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED)
                    .withUserAssignedIdentities(mapOf("ithxqhabifpi", new UserAssignedIdentity(), "ivyqniwbybrkxvd",
                        new UserAssignedIdentity())))
            .withTags(mapOf("xgaudccs", "grtfwvu", "jcny", "h", "kryhtnapczwlokj", "j"));
        model = BinaryData.fromObject(model).toObject(ManagedIdentityTrackedResourceUpdate.class);
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED, model.identity().type());
        Assertions.assertEquals("grtfwvu", model.tags().get("xgaudccs"));
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
