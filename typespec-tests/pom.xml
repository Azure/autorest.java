<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.azure.tools</groupId>
    <artifactId>azure-autorest-parent</artifactId>
    <version>1.0.0-beta.5</version>
    <relativePath>../pom.xml</relativePath>
  </parent>
  <groupId>com.azure.tools</groupId>
  <artifactId>azure-typespec-tests</artifactId>
  <version>1.0.0-beta.1</version>

  <dependencies>
    <dependency>
      <groupId>com.azure</groupId>
      <artifactId>azure-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.azure</groupId>
      <artifactId>azure-identity</artifactId>
      <version>1.14.1</version>
    </dependency>
    <dependency>
      <groupId>com.azure</groupId>
      <artifactId>azure-core-management</artifactId>
      <version>1.15.5</version>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>5.11.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.projectreactor</groupId>
      <artifactId>reactor-test</artifactId>
      <version>3.4.41</version>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>4.11.0</version>
      <scope>test</scope>
    </dependency>
    <!-- bytebuddy dependencies are required for mockito 4.11.0 to work with Java 21. Mockito 4.11.0 is the last release -->
    <!-- of Mockito supporting Java 8 as a baseline. -->
    <dependency>
      <groupId>net.bytebuddy</groupId>
      <artifactId>byte-buddy</artifactId>
      <version>1.15.5</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>net.bytebuddy</groupId>
      <artifactId>byte-buddy-agent</artifactId>
      <version>1.15.5</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>1.7.36</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.azure</groupId>
      <artifactId>azure-core-test</artifactId>
      <version>1.27.0-beta.3</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>com.azure</groupId>
          <artifactId>azure-core-http-jdk-httpclient</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.10.1</version>
        <configuration>
          <source>1.8</source>
          <doctitle>Azure SDK for Java Reference Documentation</doctitle>
          <windowtitle>Azure SDK for Java Reference Documentation</windowtitle>
          <bottom>Visit the &lt;a href="https://docs.microsoft.com/java/azure/"&gt;Azure for Java Developers&lt;/a&gt; site
            for more Java documentation, including quick starts, tutorials, and code samples.
          </bottom>
          <linksource>false</linksource>
          <excludePackageNames combine.children="append">
            *.impl*:
            *.implementation:
            *.implementation*:
            *.samples:
            com.azure.tools.checkstyle*:
            com.azure.core.test*:
            com.azure.json,com.azure.core.*
          </excludePackageNames>
          <sourceFileExcludes>
            <sourceFileExclude>module-info.java</sourceFileExclude>
            <!-- Java 11 seems having a bug on line starting with @, in @code tag -->
            <sourceFileExclude>com/cadl/naming/NamingAsyncClient.java</sourceFileExclude>
          </sourceFileExcludes>
          <failOnError>true</failOnError>
          <failOnWarnings>true</failOnWarnings>
          <doclint>all</doclint>
          <quiet>true</quiet>
          <jarOutputDirectory>${packageOutputDirectory}</jarOutputDirectory>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
