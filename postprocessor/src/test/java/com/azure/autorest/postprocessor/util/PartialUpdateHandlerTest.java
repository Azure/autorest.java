// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.autorest.postprocessor.util;

import com.github.javaparser.ast.AccessSpecifier;
import com.github.javaparser.ast.CompilationUnit;
import junit.framework.TestCase;
import org.junit.Test;

import java.io.IOException;
import java.net.URISyntaxException;
import java.nio.file.Files;
import java.nio.file.Paths;

import static com.github.javaparser.StaticJavaParser.parse;

public class PartialUpdateHandlerTest extends TestCase {

    @Test
    public void testAddMemberToExistingFile() throws IOException, URISyntaxException {
        String existingFileContent = new String(Files.readAllBytes(Paths.get(getClass().getClassLoader().getResource("partialupdate/StringOperationWithAddedMemberClient.java").toURI())));
        String generatedFileContent = new String(Files.readAllBytes(Paths.get(getClass().getClassLoader().getResource("partialupdate/StringOperationGeneratedClient.java").toURI())));

        String output = PartialUpdateHandler.handlePartialUpdateForFile(generatedFileContent, existingFileContent);

        CompilationUnit compilationUnit = parse(output);
        assertEquals(1, compilationUnit.getTypes().size());
        assertEquals(6, compilationUnit.getTypes().get(0).getMembers().size());
        assertEquals(2, compilationUnit.getTypes().get(0).getConstructors().size());
        assertEquals(2, compilationUnit.getTypes().get(0).getFields().size());
        assertEquals(2, compilationUnit.getTypes().get(0).getMethods().size());

        assertEquals(1, compilationUnit.getTypes().get(0).getMethodsByName("addedMethod").size());
        assertTrue(compilationUnit.getTypes().get(0).getFieldByName("enumsClient").isPresent());
        assertEquals(2, compilationUnit.getTypes().get(0).getConstructors().get(1).getParameters().size());

    }

    @Test
    public void testUpdateMethodSignatureToExistingFile() throws URISyntaxException, IOException {
        String existingFileContent = new String(Files.readAllBytes(Paths.get(getClass().getClassLoader().getResource("partialupdate/StringOperationWithUpdateMemberClient.java").toURI())));
        String generatedFileContent = new String(Files.readAllBytes(Paths.get(getClass().getClassLoader().getResource("partialupdate/StringOperationGeneratedClient.java").toURI())));

        String output = PartialUpdateHandler.handlePartialUpdateForFile(generatedFileContent, existingFileContent);

        CompilationUnit compilationUnit = parse(output);
        assertEquals(1, compilationUnit.getTypes().size());
        assertEquals(1, compilationUnit.getTypes().get(0).getMethodsByName("putNullWithResponse").size());
        assertEquals(2, compilationUnit.getTypes().get(0).getMethodsByName("putNullWithResponse").get(0).getParameters().size());
        assertEquals("test", compilationUnit.getTypes().get(0).getMethodsByName("putNullWithResponse").get(0).getParameters().get(1).getName().asString());
        assertEquals(AccessSpecifier.PACKAGE_PRIVATE, compilationUnit.getTypes().get(0).getMethodsByName("putNullWithResponse").get(0).getAccessSpecifier());
    }

    @Test
    public void testRemoveMethodToExistingFile() throws URISyntaxException, IOException {
        String existingFileContent = new String(Files.readAllBytes(Paths.get(getClass().getClassLoader().getResource("partialupdate/StringOperationWithRemovedMemberGeneratedClient.java").toURI())));
        String generatedFileContent = new String(Files.readAllBytes(Paths.get(getClass().getClassLoader().getResource("partialupdate/StringOperationGeneratedClient.java").toURI())));

        String output = PartialUpdateHandler.handlePartialUpdateForFile(generatedFileContent, existingFileContent);

        CompilationUnit compilationUnit = parse(output);
        assertEquals(1, compilationUnit.getTypes().size());
        // method is re-generated again
        assertEquals(1, compilationUnit.getTypes().get(0).getMethods().size());
        assertEquals(1, compilationUnit.getTypes().get(0).getMethodsByName("putNullWithResponse").size());
    }


    @Test
    public void testSawaggerAddAPI() throws URISyntaxException, IOException {
        String existingFileContent = new String(Files.readAllBytes(Paths.get(getClass().getClassLoader().getResource("partialupdate/StringOperationGeneratedClient.java").toURI())));
        String generatedFileContent = new String(Files.readAllBytes(Paths.get(getClass().getClassLoader().getResource("partialupdate/StringOperationWithAddedMemberGeneratedClient.java").toURI())));

        String output = PartialUpdateHandler.handlePartialUpdateForFile(generatedFileContent, existingFileContent);

        CompilationUnit compilationUnit = parse(output);
        assertEquals(1, compilationUnit.getTypes().size());
        assertEquals(2, compilationUnit.getTypes().get(0).getMethods().size());
        assertEquals(1, compilationUnit.getTypes().get(0).getMethodsByName("getWhitespaceWithResponse").size());
    }

    @Test
    public void testGeneratedFileRemoveAPI() throws URISyntaxException, IOException {
        String existingFileContent = new String(Files.readAllBytes(Paths.get(getClass().getClassLoader().getResource("partialupdate/StringOperationGeneratedClient.java").toURI())));
        String generatedFileContent = new String(Files.readAllBytes(Paths.get(getClass().getClassLoader().getResource("partialupdate/StringOperationWithRemovedMemberGeneratedClient.java").toURI())));

        String output = PartialUpdateHandler.handlePartialUpdateForFile(generatedFileContent, existingFileContent);

        CompilationUnit compilationUnit = parse(output);
        assertEquals(1, compilationUnit.getTypes().size());
        assertEquals(0, compilationUnit.getTypes().get(0).getMethods().size());
    }

    @Test
    public void testGeneratedFileUpdateAPI() throws URISyntaxException, IOException {
        String existingFileContent = new String(Files.readAllBytes(Paths.get(getClass().getClassLoader().getResource("partialupdate/StringOperationGeneratedClient.java").toURI())));
        String generatedFileContent = new String(Files.readAllBytes(Paths.get(getClass().getClassLoader().getResource("partialupdate/StringOperationWithUpdateMemberGeneratedClient.java").toURI())));

        String output = PartialUpdateHandler.handlePartialUpdateForFile(generatedFileContent, existingFileContent);

        CompilationUnit compilationUnit = parse(output);
        assertEquals(1, compilationUnit.getTypes().size());
        assertEquals(1, compilationUnit.getTypes().get(0).getMethods().size());
        assertEquals(1, compilationUnit.getTypes().get(0).getMethodsByName("putNullWithResponse").size());
        assertEquals("updateParam", compilationUnit.getTypes().get(0).getMethodsByName("putNullWithResponse").get(0).getParameter(1).getName().asString());
    }

    @Test
    public void testGeneratedFileUpdateAPIAndExistingFileUpdateMethod() throws URISyntaxException, IOException {
        String existingFileContent = new String(Files.readAllBytes(Paths.get(getClass().getClassLoader().getResource("partialupdate/StringOperationWithUpdateMemberClient.java").toURI())));
        String generatedFileContent = new String(Files.readAllBytes(Paths.get(getClass().getClassLoader().getResource("partialupdate/StringOperationWithUpdateMemberGeneratedClient.java").toURI())));

        String output = PartialUpdateHandler.handlePartialUpdateForFile(generatedFileContent, existingFileContent);

        CompilationUnit compilationUnit = parse(output);
        assertEquals(1, compilationUnit.getTypes().size());
        assertEquals(1, compilationUnit.getTypes().get(0).getMethods().size());
        assertEquals(1, compilationUnit.getTypes().get(0).getMethodsByName("putNullWithResponse").size());
        assertEquals("test", compilationUnit.getTypes().get(0).getMethodsByName("putNullWithResponse").get(0).getParameter(1).getName().asString());
        assertEquals(AccessSpecifier.PACKAGE_PRIVATE, compilationUnit.getTypes().get(0).getMethodsByName("putNullWithResponse").get(0).getAccessSpecifier());
    }

    @Test
    public void testGeneratedFileRemoveAPIAndExistingFileUpdateMethod() throws URISyntaxException, IOException {
        String existingFileContent = new String(Files.readAllBytes(Paths.get(getClass().getClassLoader().getResource("partialupdate/StringOperationWithUpdateMemberClient.java").toURI())));
        String generatedFileContent = new String(Files.readAllBytes(Paths.get(getClass().getClassLoader().getResource("partialupdate/StringOperationWithRemovedMemberGeneratedClient.java").toURI())));

        String output = PartialUpdateHandler.handlePartialUpdateForFile(generatedFileContent, existingFileContent);

        CompilationUnit compilationUnit = parse(output);
        assertEquals(1, compilationUnit.getTypes().size());
        assertEquals(1, compilationUnit.getTypes().get(0).getMethods().size());
        assertEquals(1, compilationUnit.getTypes().get(0).getMethodsByName("putNullWithResponse").size());
        assertEquals("test", compilationUnit.getTypes().get(0).getMethodsByName("putNullWithResponse").get(0).getParameter(1).getName().asString());
    }

}