/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.fluent.gencode.groupable_resource_inheritance;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.arm.resources.models.Resource;
import com.microsoft.azure.arm.resources.models.GroupableResourceCore;
import com.microsoft.azure.arm.resources.models.HasResourceGroup;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.fluent.gencode.groupable_resource_inheritance.implementation.PetsManager;
import org.joda.time.DateTime;
import com.fluent.gencode.groupable_resource_inheritance.implementation.CatInner;

/**
 * Type representing Cat.
 */
public interface Cat extends HasInner<CatInner>, Resource, GroupableResourceCore<PetsManager, CatInner>, HasResourceGroup, Refreshable<Cat>, Updatable<Cat.Update>, HasManager<PetsManager> {
    /**
     * @return the animalSizeGB value.
     */
    Integer animalSizeGB();

    /**
     * @return the creationData value.
     */
    CreationData creationData();

    /**
     * @return the managedBy value.
     */
    String managedBy();

    /**
     * @return the osType value.
     */
    ColorTypes osType();

    /**
     * @return the provisioningState value.
     */
    String provisioningState();

    /**
     * @return the sku value.
     */
    CatSku sku();

    /**
     * @return the timeCreated value.
     */
    DateTime timeCreated();

    /**
     * The entirety of the Cat definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithGroup, DefinitionStages.WithCreationData, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of Cat definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a Cat definition.
         */
        interface Blank extends GroupableResourceCore.DefinitionWithRegion<WithGroup> {
        }

        /**
         * The stage of the Cat definition allowing to specify the resource group.
         */
        interface WithGroup extends GroupableResourceCore.DefinitionStages.WithGroup<WithCreationData> {
        }

        /**
         * The stage of the cat definition allowing to specify CreationData.
         */
        interface WithCreationData {
           /**
            * Specifies creationData.
            * @param creationData Dog source information. CreationData information cannot be changed after the animal has been created
            * @return the next definition stage
*/
            WithCreate withCreationData(CreationData creationData);
        }

        /**
         * The stage of the cat definition allowing to specify AnimalSizeGB.
         */
        interface WithAnimalSizeGB {
            /**
             * Specifies animalSizeGB.
             * @param animalSizeGB If creationData.createOption is Empty, this field is mandatory and it indicates the size of the VHD to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the dog is not attached to a running owner, and can only increase the dog's size
             * @return the next definition stage
             */
            WithCreate withAnimalSizeGB(Integer animalSizeGB);
        }

        /**
         * The stage of the cat definition allowing to specify OsType.
         */
        interface WithOsType {
            /**
             * Specifies osType.
             * @param osType The Operating System type. Possible values include: 'Black', 'White'
             * @return the next definition stage
             */
            WithCreate withOsType(ColorTypes osType);
        }

        /**
         * The stage of the cat definition allowing to specify Sku.
         */
        interface WithSku {
            /**
             * Specifies sku.
             * @param sku the sku parameter value
             * @return the next definition stage
             */
            WithCreate withSku(CatSku sku);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<Cat>, Resource.DefinitionWithTags<WithCreate>, DefinitionStages.WithAnimalSizeGB, DefinitionStages.WithOsType, DefinitionStages.WithSku {
        }
    }
    /**
     * The template for a Cat update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<Cat>, Resource.UpdateWithTags<Update>, UpdateStages.WithAnimalSizeGB, UpdateStages.WithOsType, UpdateStages.WithSku {
    }

    /**
     * Grouping of Cat update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the cat update allowing to specify AnimalSizeGB.
         */
        interface WithAnimalSizeGB {
            /**
             * Specifies animalSizeGB.
             * @param animalSizeGB If creationData.createOption is Empty, this field is mandatory and it indicates the size of the VHD to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the dog is not attached to a running owner, and can only increase the dog's size
             * @return the next update stage
             */
            Update withAnimalSizeGB(Integer animalSizeGB);
        }

        /**
         * The stage of the cat update allowing to specify OsType.
         */
        interface WithOsType {
            /**
             * Specifies osType.
             * @param osType the animal color type. Possible values include: 'Black', 'White'
             * @return the next update stage
             */
            Update withOsType(ColorTypes osType);
        }

        /**
         * The stage of the cat update allowing to specify Sku.
         */
        interface WithSku {
            /**
             * Specifies sku.
             * @param sku the sku parameter value
             * @return the next update stage
             */
            Update withSku(CatSku sku);
        }

    }
}
