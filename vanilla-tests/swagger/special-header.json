{
  "swagger": "2.0",
  "info": {
    "title": "SpecialHeader",
    "description": "Test Infrastructure for AutoRest",
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "schemes": ["http"],
  "produces": ["application/json"],
  "consumes": ["application/json"],
  "paths": {
    "/status/500": {
      "post": {
        "operationId": "header_paramRepeatabilityRequest",
        "description": "Send a post request with header Repeatability-Request-ID and Repeatability-First-Sent",
        "tags": [
          "Header Operations"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Repeatability-Request-ID",
            "description": "If specified, the client directs that the request is repeatable; that is, that the client can make the request multiple times with the same Repeatability-Request-ID and get back an appropriate response without the server executing the request multiple times. The value of the Repeatability-Request-ID is an opaque string representing a client-generated, globally unique for all time, identifier for the request. It is recommended to use version 4 (random) UUIDs.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Repeatability-First-Sent",
            "description": "If specified, the client directs that the request is repeatable.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Empty Response",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "operationId": "header_paramRepeatabilityRequestPut",
        "description": "Send a put request with header Repeatability-Request-ID and Repeatability-First-Sent",
        "tags": [
          "Header Operations"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Repeatability-Request-ID",
            "description": "If specified, the client directs that the request is repeatable; that is, that the client can make the request multiple times with the same Repeatability-Request-ID and get back an appropriate response without the server executing the request multiple times. The value of the Repeatability-Request-ID is an opaque string representing a client-generated, globally unique for all time, identifier for the request. It is recommended to use version 4 (random) UUIDs.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Repeatability-First-Sent",
            "description": "If specified, the client directs that the request is repeatable.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Empty Response",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "header_paramRepeatabilityRequestGet",
        "description": "Send a get request without header Repeatability-Request-ID and Repeatability-First-Sent",
        "tags": [
          "Header Operations"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Repeatability-Request-ID",
            "description": "If specified, the client directs that the request is repeatable; that is, that the client can make the request multiple times with the same Repeatability-Request-ID and get back an appropriate response without the server executing the request multiple times. The value of the Repeatability-Request-ID is an opaque string representing a client-generated, globally unique for all time, identifier for the request. It is recommended to use version 4 (random) UUIDs.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Repeatability-First-Sent",
            "description": "If specified, the client directs that the request is repeatable.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Empty Response",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/specialHeader/repeatabilityRequestLRO": {
      "post": {
        "operationId": "header_paramRepeatabilityRequestLRO",
        "description": "Send a post request with header Repeatability-Request-ID and Repeatability-First-Sent",
        "tags": [
          "Header Operations"
        ],
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "in": "header",
            "name": "Repeatability-Request-ID",
            "description": "If specified, the client directs that the request is repeatable; that is, that the client can make the request multiple times with the same Repeatability-Request-ID and get back an appropriate response without the server executing the request multiple times. The value of the Repeatability-Request-ID is an opaque string representing a client-generated, globally unique for all time, identifier for the request. It is recommended to use version 4 (random) UUIDs.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Repeatability-First-Sent",
            "description": "If specified, the client directs that the request is repeatable.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Empty Response",
            "schema": {
              "type": "object"
            }
          },
          "202": {
            "description": "Empty Response",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/specialHeader/repeatabilityRequestPageable": {
      "post": {
        "operationId": "header_paramRepeatabilityRequestPageable",
        "description": "Send a post request with header Repeatability-Request-ID and Repeatability-First-Sent",
        "tags": [
          "Header Operations"
        ],
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "parameters": [
          {
            "in": "header",
            "name": "Repeatability-Request-ID",
            "description": "If specified, the client directs that the request is repeatable; that is, that the client can make the request multiple times with the same Repeatability-Request-ID and get back an appropriate response without the server executing the request multiple times. The value of the Repeatability-Request-ID is an opaque string representing a client-generated, globally unique for all time, identifier for the request. It is recommended to use version 4 (random) UUIDs.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Repeatability-First-Sent",
            "description": "If specified, the client directs that the request is repeatable.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of objects",
            "schema": {
              "$ref": "#/definitions/ProductResultValue"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ProductResultValue": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}