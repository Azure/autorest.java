// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package fixtures.bodycomplex.generated;

import com.azure.core.util.BinaryData;
import fixtures.bodycomplex.models.Fish;
import fixtures.bodycomplex.models.Salmon;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class SalmonTests {
    @Test
    public void testDeserialize() throws Exception {
        Salmon model =
                BinaryData.fromString(
                                "{\"fishtype\":\"salmon\",\"location\":\"xaolth\",\"iswild\":true,\"species\":\"qjbpfzfsin\",\"length\":25.12173,\"siblings\":[{\"fishtype\":\"Fish\",\"species\":\"jrwzox\",\"length\":2.6165128,\"siblings\":[]}]}")
                        .toObject(Salmon.class);
        Assertions.assertEquals("qjbpfzfsin", model.getSpecies());
        Assertions.assertEquals(25.12173f, model.getLength());
        Assertions.assertEquals("jrwzox", model.getSiblings().get(0).getSpecies());
        Assertions.assertEquals(2.6165128f, model.getSiblings().get(0).getLength());
        Assertions.assertEquals("xaolth", model.getLocation());
        Assertions.assertEquals(true, model.iswild());
    }

    @Test
    public void testSerialize() throws Exception {
        Salmon model =
                new Salmon(25.12173f)
                        .setSpecies("qjbpfzfsin")
                        .setSiblings(
                                Arrays.asList(new Fish(2.6165128f).setSpecies("jrwzox").setSiblings(Arrays.asList())))
                        .setLocation("xaolth")
                        .setIswild(true);
        model = BinaryData.fromObject(model).toObject(Salmon.class);
        Assertions.assertEquals("qjbpfzfsin", model.getSpecies());
        Assertions.assertEquals(25.12173f, model.getLength());
        Assertions.assertEquals("jrwzox", model.getSiblings().get(0).getSpecies());
        Assertions.assertEquals(2.6165128f, model.getSiblings().get(0).getLength());
        Assertions.assertEquals("xaolth", model.getLocation());
        Assertions.assertEquals(true, model.iswild());
    }
}
