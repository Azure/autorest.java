// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package fixtures.bodycomplex.generated;

import com.azure.core.util.BinaryData;
import fixtures.bodycomplex.models.Fish;
import fixtures.bodycomplex.models.GoblinSharkColor;
import fixtures.bodycomplex.models.Goblinshark;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class GoblinsharkTests {
    @Test
    public void testDeserialize() {
        Goblinshark model =
                BinaryData.fromString(
                                "{\"fishtype\":\"goblin\",\"jawsize\":105854038,\"color\":\"RED\",\"age\":823404328,\"birthday\":\"2021-06-16T21:35:22Z\",\"species\":\"clxxwrljdo\",\"length\":70.73601,\"siblings\":[{\"fishtype\":\"Fish\",\"species\":\"vkocrcjdkwtn\",\"length\":50.567795,\"siblings\":[]},{\"fishtype\":\"Fish\",\"species\":\"biksq\",\"length\":16.933006,\"siblings\":[]},{\"fishtype\":\"Fish\",\"species\":\"ainqpjwnzlljfm\",\"length\":18.06193,\"siblings\":[]},{\"fishtype\":\"Fish\",\"species\":\"vmgxsab\",\"length\":49.296616,\"siblings\":[]}]}")
                        .toObject(Goblinshark.class);
        Assertions.assertEquals("clxxwrljdo", model.getSpecies());
        Assertions.assertEquals(70.73601f, model.getLength());
        Assertions.assertEquals("vkocrcjdkwtn", model.getSiblings().get(0).getSpecies());
        Assertions.assertEquals(50.567795f, model.getSiblings().get(0).getLength());
        Assertions.assertEquals(823404328, model.getAge());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-16T21:35:22Z"), model.getBirthday());
        Assertions.assertEquals(105854038, model.getJawsize());
        Assertions.assertEquals(GoblinSharkColor.UPPER_RED, model.getColor());
    }

    @Test
    public void testSerialize() {
        Goblinshark model =
                new Goblinshark(70.73601f, OffsetDateTime.parse("2021-06-16T21:35:22Z"))
                        .setSpecies("clxxwrljdo")
                        .setSiblings(
                                Arrays.asList(
                                        new Fish(50.567795f).setSpecies("vkocrcjdkwtn").setSiblings(Arrays.asList()),
                                        new Fish(16.933006f).setSpecies("biksq").setSiblings(Arrays.asList()),
                                        new Fish(18.06193f).setSpecies("ainqpjwnzlljfm").setSiblings(Arrays.asList()),
                                        new Fish(49.296616f).setSpecies("vmgxsab").setSiblings(Arrays.asList())))
                        .setAge(823404328)
                        .setJawsize(105854038)
                        .setColor(GoblinSharkColor.UPPER_RED);
        model = BinaryData.fromObject(model).toObject(Goblinshark.class);
        Assertions.assertEquals("clxxwrljdo", model.getSpecies());
        Assertions.assertEquals(70.73601f, model.getLength());
        Assertions.assertEquals("vkocrcjdkwtn", model.getSiblings().get(0).getSpecies());
        Assertions.assertEquals(50.567795f, model.getSiblings().get(0).getLength());
        Assertions.assertEquals(823404328, model.getAge());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-16T21:35:22Z"), model.getBirthday());
        Assertions.assertEquals(105854038, model.getJawsize());
        Assertions.assertEquals(GoblinSharkColor.UPPER_RED, model.getColor());
    }
}
