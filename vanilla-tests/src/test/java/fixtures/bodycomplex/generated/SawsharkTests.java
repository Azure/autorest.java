// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package fixtures.bodycomplex.generated;

import com.azure.core.util.BinaryData;
import fixtures.bodycomplex.models.Fish;
import fixtures.bodycomplex.models.Sawshark;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SawsharkTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        Sawshark model = BinaryData.fromString(
            "{\"fishtype\":\"sawshark\",\"age\":270329607,\"birthday\":\"2021-01-29T02:56:24Z\",\"species\":\"aop\",\"length\":6.2815723,\"siblings\":[{\"fishtype\":\"Fish\",\"species\":\"c\",\"length\":68.14121,\"siblings\":[{\"fishtype\":\"Fish\",\"species\":\"ufufsrp\",\"length\":74.075516,\"siblings\":[{\"fishtype\":\"Fish\",\"length\":63.053722},{\"fishtype\":\"Fish\",\"length\":20.04624},{\"fishtype\":\"Fish\",\"length\":42.455757}]}]},{\"fishtype\":\"Fish\",\"species\":\"zcxtbzsgfyccsn\",\"length\":86.0298,\"siblings\":[{\"fishtype\":\"Fish\",\"species\":\"z\",\"length\":79.928444,\"siblings\":[{\"fishtype\":\"Fish\",\"length\":76.117874}]},{\"fishtype\":\"Fish\",\"species\":\"boo\",\"length\":87.95884,\"siblings\":[{\"fishtype\":\"Fish\",\"length\":8.411604},{\"fishtype\":\"Fish\",\"length\":74.19531},{\"fishtype\":\"Fish\",\"length\":50.31968}]},{\"fishtype\":\"Fish\",\"species\":\"qpteeh\",\"length\":77.50827,\"siblings\":[{\"fishtype\":\"Fish\",\"length\":18.889141},{\"fishtype\":\"Fish\",\"length\":45.170357},{\"fishtype\":\"Fish\",\"length\":53.44551}]}]}]}")
            .toObject(Sawshark.class);
        Assertions.assertEquals("aop", model.getSpecies());
        Assertions.assertEquals(6.2815723f, model.getLength());
        Assertions.assertEquals("c", model.getSiblings().get(0).getSpecies());
        Assertions.assertEquals(68.14121f, model.getSiblings().get(0).getLength());
        Assertions.assertEquals("ufufsrp", model.getSiblings().get(0).getSiblings().get(0).getSpecies());
        Assertions.assertEquals(74.075516f, model.getSiblings().get(0).getSiblings().get(0).getLength());
        Assertions.assertEquals(63.053722f,
            model.getSiblings().get(0).getSiblings().get(0).getSiblings().get(0).getLength());
        Assertions.assertEquals(270329607, model.getAge());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-29T02:56:24Z"), model.getBirthday());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        Sawshark model = new Sawshark(6.2815723f, OffsetDateTime.parse("2021-01-29T02:56:24Z")).setSpecies("aop")
            .setSiblings(Arrays.asList(
                new Fish(68.14121f).setSpecies("c")
                    .setSiblings(Arrays.asList(new Fish(74.075516f).setSpecies("ufufsrp")
                        .setSiblings(Arrays.asList(new Fish(63.053722f), new Fish(20.04624f), new Fish(42.455757f))))),
                new Fish(86.0298f).setSpecies("zcxtbzsgfyccsn")
                    .setSiblings(Arrays.asList(
                        new Fish(79.928444f).setSpecies("z").setSiblings(Arrays.asList(new Fish(76.117874f))),
                        new Fish(87.95884f).setSpecies("boo")
                            .setSiblings(Arrays.asList(new Fish(8.411604f), new Fish(74.19531f), new Fish(50.31968f))),
                        new Fish(77.50827f).setSpecies("qpteeh")
                            .setSiblings(
                                Arrays.asList(new Fish(18.889141f), new Fish(45.170357f), new Fish(53.44551f)))))))
            .setAge(270329607);
        model = BinaryData.fromObject(model).toObject(Sawshark.class);
        Assertions.assertEquals("aop", model.getSpecies());
        Assertions.assertEquals(6.2815723f, model.getLength());
        Assertions.assertEquals("c", model.getSiblings().get(0).getSpecies());
        Assertions.assertEquals(68.14121f, model.getSiblings().get(0).getLength());
        Assertions.assertEquals("ufufsrp", model.getSiblings().get(0).getSiblings().get(0).getSpecies());
        Assertions.assertEquals(74.075516f, model.getSiblings().get(0).getSiblings().get(0).getLength());
        Assertions.assertEquals(63.053722f,
            model.getSiblings().get(0).getSiblings().get(0).getSiblings().get(0).getLength());
        Assertions.assertEquals(270329607, model.getAge());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-29T02:56:24Z"), model.getBirthday());
    }
}
