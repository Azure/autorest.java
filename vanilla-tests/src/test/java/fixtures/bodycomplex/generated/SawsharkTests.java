// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package fixtures.bodycomplex.generated;

import com.azure.core.util.BinaryData;
import fixtures.bodycomplex.models.Fish;
import fixtures.bodycomplex.models.Sawshark;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SawsharkTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        Sawshark model = BinaryData.fromString(
            "{\"fishtype\":\"opbobj\",\"age\":950690565,\"birthday\":\"2021-10-21T06:57:02Z\",\"species\":\"hm\",\"length\":0.4767537,\"siblings\":[{\"fishtype\":\"a\",\"species\":\"rzayv\",\"length\":4.7570705,\"siblings\":[{\"fishtype\":\"dfgiot\",\"species\":\"tutqxlngxlefgug\",\"length\":49.651463,\"siblings\":[{\"fishtype\":\"Fish\",\"length\":98.89482}]},{\"fishtype\":\"qmi\",\"species\":\"thz\",\"length\":27.019262,\"siblings\":[{\"fishtype\":\"Fish\",\"length\":72.372734},{\"fishtype\":\"Fish\",\"length\":38.072437},{\"fishtype\":\"Fish\",\"length\":12.859451}]},{\"fishtype\":\"jybige\",\"species\":\"qfbow\",\"length\":82.193115,\"siblings\":[{\"fishtype\":\"Fish\",\"length\":22.699678},{\"fishtype\":\"Fish\",\"length\":57.9111},{\"fishtype\":\"Fish\",\"length\":83.07862}]},{\"fishtype\":\"lcuiywgqywgndr\",\"species\":\"nhzgpphrcgyn\",\"length\":68.073944,\"siblings\":[{\"fishtype\":\"Fish\",\"length\":36.553032}]}]}]}")
            .toObject(Sawshark.class);
        Assertions.assertEquals("hm", model.getSpecies());
        Assertions.assertEquals(0.4767537f, model.getLength());
        Assertions.assertEquals("rzayv", model.getSiblings().get(0).getSpecies());
        Assertions.assertEquals(4.7570705f, model.getSiblings().get(0).getLength());
        Assertions.assertEquals("tutqxlngxlefgug", model.getSiblings().get(0).getSiblings().get(0).getSpecies());
        Assertions.assertEquals(49.651463f, model.getSiblings().get(0).getSiblings().get(0).getLength());
        Assertions.assertEquals(98.89482f,
            model.getSiblings().get(0).getSiblings().get(0).getSiblings().get(0).getLength());
        Assertions.assertEquals(950690565, model.getAge());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-21T06:57:02Z"), model.getBirthday());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        Sawshark model
            = new Sawshark(0.4767537f, OffsetDateTime.parse("2021-10-21T06:57:02Z")).setSpecies("hm")
                .setSiblings(Arrays.asList(new Fish(4.7570705f).setSpecies("rzayv").setSiblings(Arrays.asList(
                    new Fish(49.651463f).setSpecies("tutqxlngxlefgug").setSiblings(Arrays.asList(new Fish(98.89482f))),
                    new Fish(27.019262f).setSpecies("thz")
                        .setSiblings(Arrays.asList(new Fish(72.372734f), new Fish(38.072437f), new Fish(12.859451f))),
                    new Fish(82.193115f).setSpecies("qfbow")
                        .setSiblings(Arrays.asList(new Fish(22.699678f), new Fish(57.9111f), new Fish(83.07862f))),
                    new Fish(68.073944f).setSpecies("nhzgpphrcgyn").setSiblings(Arrays.asList(new Fish(36.553032f)))))))
                .setAge(950690565);
        model = BinaryData.fromObject(model).toObject(Sawshark.class);
        Assertions.assertEquals("hm", model.getSpecies());
        Assertions.assertEquals(0.4767537f, model.getLength());
        Assertions.assertEquals("rzayv", model.getSiblings().get(0).getSpecies());
        Assertions.assertEquals(4.7570705f, model.getSiblings().get(0).getLength());
        Assertions.assertEquals("tutqxlngxlefgug", model.getSiblings().get(0).getSiblings().get(0).getSpecies());
        Assertions.assertEquals(49.651463f, model.getSiblings().get(0).getSiblings().get(0).getLength());
        Assertions.assertEquals(98.89482f,
            model.getSiblings().get(0).getSiblings().get(0).getSiblings().get(0).getLength());
        Assertions.assertEquals(950690565, model.getAge());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-21T06:57:02Z"), model.getBirthday());
    }
}
