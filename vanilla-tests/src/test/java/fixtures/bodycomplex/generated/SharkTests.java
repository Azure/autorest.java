// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package fixtures.bodycomplex.generated;

import com.azure.core.util.BinaryData;
import fixtures.bodycomplex.models.Fish;
import fixtures.bodycomplex.models.Shark;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class SharkTests {
    @Test
    public void testDeserialize() throws Exception {
        Shark model =
                BinaryData.fromString(
                                "{\"fishtype\":\"shark\",\"age\":91789189,\"birthday\":\"2021-08-17T04:19:07Z\",\"species\":\"mjqulngsn\",\"length\":75.88975,\"siblings\":[{\"fishtype\":\"Fish\",\"species\":\"kzgcwrwcl\",\"length\":99.26511,\"siblings\":[]},{\"fishtype\":\"Fish\",\"species\":\"jdous\",\"length\":84.4235,\"siblings\":[]}]}")
                        .toObject(Shark.class);
        Assertions.assertEquals("mjqulngsn", model.getSpecies());
        Assertions.assertEquals(75.88975f, model.getLength());
        Assertions.assertEquals("kzgcwrwcl", model.getSiblings().get(0).getSpecies());
        Assertions.assertEquals(99.26511f, model.getSiblings().get(0).getLength());
        Assertions.assertEquals(91789189, model.getAge());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-17T04:19:07Z"), model.getBirthday());
    }

    @Test
    public void testSerialize() throws Exception {
        Shark model =
                new Shark(75.88975f, OffsetDateTime.parse("2021-08-17T04:19:07Z"))
                        .setSpecies("mjqulngsn")
                        .setSiblings(
                                Arrays.asList(
                                        new Fish(99.26511f).setSpecies("kzgcwrwcl").setSiblings(Arrays.asList()),
                                        new Fish(84.4235f).setSpecies("jdous").setSiblings(Arrays.asList())))
                        .setAge(91789189);
        model = BinaryData.fromObject(model).toObject(Shark.class);
        Assertions.assertEquals("mjqulngsn", model.getSpecies());
        Assertions.assertEquals(75.88975f, model.getLength());
        Assertions.assertEquals("kzgcwrwcl", model.getSiblings().get(0).getSpecies());
        Assertions.assertEquals(99.26511f, model.getSiblings().get(0).getLength());
        Assertions.assertEquals(91789189, model.getAge());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-17T04:19:07Z"), model.getBirthday());
    }
}
