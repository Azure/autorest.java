// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package fixtures.bodycomplex.generated;

import com.azure.core.util.BinaryData;
import fixtures.bodycomplex.models.Fish;
import fixtures.bodycomplex.models.Shark;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SharkTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        Shark model = BinaryData.fromString(
            "{\"fishtype\":\"bl\",\"age\":818060655,\"birthday\":\"2021-10-01T07:14:45Z\",\"species\":\"gpbtoqcjmklj\",\"length\":28.352106,\"siblings\":[{\"fishtype\":\"dtqajzyulpkudj\",\"species\":\"lkhbz\",\"length\":42.611782,\"siblings\":[{\"fishtype\":\"zgqexz\",\"species\":\"c\",\"length\":30.823957,\"siblings\":[{\"fishtype\":\"Fish\",\"length\":42.87764},{\"fishtype\":\"Fish\",\"length\":93.16337}]},{\"fishtype\":\"rhhbcs\",\"species\":\"ummajtjaod\",\"length\":86.22104,\"siblings\":[{\"fishtype\":\"Fish\",\"length\":62.736557},{\"fishtype\":\"Fish\",\"length\":33.899582}]}]},{\"fishtype\":\"k\",\"species\":\"xo\",\"length\":89.226135,\"siblings\":[{\"fishtype\":\"npime\",\"species\":\"stxgc\",\"length\":84.68226,\"siblings\":[{\"fishtype\":\"Fish\",\"length\":84.1204},{\"fishtype\":\"Fish\",\"length\":25.783592}]},{\"fishtype\":\"jrmvdjwzrlo\",\"species\":\"clwhijcoejctbz\",\"length\":25.220078,\"siblings\":[{\"fishtype\":\"Fish\",\"length\":47.4539},{\"fishtype\":\"Fish\",\"length\":3.9527357},{\"fishtype\":\"Fish\",\"length\":39.88341}]},{\"fishtype\":\"kbfkg\",\"species\":\"dkexxppofm\",\"length\":93.731895,\"siblings\":[{\"fishtype\":\"Fish\",\"length\":90.91013}]}]},{\"fishtype\":\"pg\",\"species\":\"toc\",\"length\":5.059004,\"siblings\":[{\"fishtype\":\"pmouexhdz\",\"species\":\"bqe\",\"length\":75.01583,\"siblings\":[{\"fishtype\":\"Fish\",\"length\":68.61014},{\"fishtype\":\"Fish\",\"length\":12.802905},{\"fishtype\":\"Fish\",\"length\":96.80261}]},{\"fishtype\":\"ddntwndei\",\"species\":\"twnpzaoqvuhrhcf\",\"length\":76.06833,\"siblings\":[{\"fishtype\":\"Fish\",\"length\":69.74643},{\"fishtype\":\"Fish\",\"length\":35.38187}]}]}]}")
            .toObject(Shark.class);
        Assertions.assertEquals("gpbtoqcjmklj", model.getSpecies());
        Assertions.assertEquals(28.352106f, model.getLength());
        Assertions.assertEquals("lkhbz", model.getSiblings().get(0).getSpecies());
        Assertions.assertEquals(42.611782f, model.getSiblings().get(0).getLength());
        Assertions.assertEquals("c", model.getSiblings().get(0).getSiblings().get(0).getSpecies());
        Assertions.assertEquals(30.823957f, model.getSiblings().get(0).getSiblings().get(0).getLength());
        Assertions.assertEquals(42.87764f,
            model.getSiblings().get(0).getSiblings().get(0).getSiblings().get(0).getLength());
        Assertions.assertEquals(818060655, model.getAge());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-01T07:14:45Z"), model.getBirthday());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        Shark model
            = new Shark(28.352106f, OffsetDateTime.parse("2021-10-01T07:14:45Z")).setSpecies("gpbtoqcjmklj")
                .setSiblings(Arrays.asList(
                    new Fish(42.611782f).setSpecies("lkhbz")
                        .setSiblings(Arrays.asList(
                            new Fish(30.823957f).setSpecies("c")
                                .setSiblings(Arrays.asList(new Fish(42.87764f), new Fish(93.16337f))),
                            new Fish(86.22104f).setSpecies("ummajtjaod")
                                .setSiblings(Arrays.asList(new Fish(62.736557f), new Fish(33.899582f))))),
                    new Fish(89.226135f).setSpecies("xo").setSiblings(Arrays.asList(
                        new Fish(84.68226f).setSpecies("stxgc")
                            .setSiblings(Arrays.asList(new Fish(84.1204f), new Fish(25.783592f))),
                        new Fish(25.220078f).setSpecies("clwhijcoejctbz")
                            .setSiblings(Arrays.asList(new Fish(47.4539f), new Fish(3.9527357f), new Fish(39.88341f))),
                        new Fish(93.731895f).setSpecies("dkexxppofm").setSiblings(Arrays.asList(new Fish(90.91013f))))),
                    new Fish(5.059004f).setSpecies("toc")
                        .setSiblings(Arrays.asList(
                            new Fish(75.01583f).setSpecies("bqe").setSiblings(
                                Arrays.asList(new Fish(68.61014f), new Fish(12.802905f), new Fish(96.80261f))),
                            new Fish(76.06833f).setSpecies("twnpzaoqvuhrhcf")
                                .setSiblings(Arrays.asList(new Fish(69.74643f), new Fish(35.38187f)))))))
                .setAge(818060655);
        model = BinaryData.fromObject(model).toObject(Shark.class);
        Assertions.assertEquals("gpbtoqcjmklj", model.getSpecies());
        Assertions.assertEquals(28.352106f, model.getLength());
        Assertions.assertEquals("lkhbz", model.getSiblings().get(0).getSpecies());
        Assertions.assertEquals(42.611782f, model.getSiblings().get(0).getLength());
        Assertions.assertEquals("c", model.getSiblings().get(0).getSiblings().get(0).getSpecies());
        Assertions.assertEquals(30.823957f, model.getSiblings().get(0).getSiblings().get(0).getLength());
        Assertions.assertEquals(42.87764f,
            model.getSiblings().get(0).getSiblings().get(0).getSiblings().get(0).getLength());
        Assertions.assertEquals(818060655, model.getAge());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-01T07:14:45Z"), model.getBirthday());
    }
}
