// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package fixtures.bodycomplex.generated;

import com.azure.core.util.BinaryData;
import fixtures.bodycomplex.models.Cookiecuttershark;
import fixtures.bodycomplex.models.Fish;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class CookiecuttersharkTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        Cookiecuttershark model = BinaryData.fromString(
            "{\"fishtype\":\"cookiecuttershark\",\"age\":305991846,\"birthday\":\"2021-03-13T16:28:52Z\",\"species\":\"bznorcjxvsnby\",\"length\":39.604675,\"siblings\":[{\"fishtype\":\"Fish\",\"species\":\"mocpc\",\"length\":96.150444,\"siblings\":[{\"fishtype\":\"Fish\",\"species\":\"zafb\",\"length\":25.262188,\"siblings\":[{\"fishtype\":\"Fish\",\"length\":62.28783},{\"fishtype\":\"Fish\",\"length\":97.75265},{\"fishtype\":\"Fish\",\"length\":59.107674}]},{\"fishtype\":\"Fish\",\"species\":\"qcjm\",\"length\":48.70817,\"siblings\":[{\"fishtype\":\"Fish\",\"length\":28.352106}]}]}]}")
            .toObject(Cookiecuttershark.class);
        Assertions.assertEquals("bznorcjxvsnby", model.getSpecies());
        Assertions.assertEquals(39.604675f, model.getLength());
        Assertions.assertEquals("mocpc", model.getSiblings().get(0).getSpecies());
        Assertions.assertEquals(96.150444f, model.getSiblings().get(0).getLength());
        Assertions.assertEquals("zafb", model.getSiblings().get(0).getSiblings().get(0).getSpecies());
        Assertions.assertEquals(25.262188f, model.getSiblings().get(0).getSiblings().get(0).getLength());
        Assertions.assertEquals(62.28783f,
            model.getSiblings().get(0).getSiblings().get(0).getSiblings().get(0).getLength());
        Assertions.assertEquals(305991846, model.getAge());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-13T16:28:52Z"), model.getBirthday());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        Cookiecuttershark model = new Cookiecuttershark(39.604675f, OffsetDateTime.parse("2021-03-13T16:28:52Z"))
            .setSpecies("bznorcjxvsnby")
            .setSiblings(Arrays.asList(new Fish(96.150444f).setSpecies("mocpc")
                .setSiblings(Arrays.asList(
                    new Fish(25.262188f).setSpecies("zafb")
                        .setSiblings(Arrays.asList(new Fish(62.28783f), new Fish(97.75265f), new Fish(59.107674f))),
                    new Fish(48.70817f).setSpecies("qcjm").setSiblings(Arrays.asList(new Fish(28.352106f)))))))
            .setAge(305991846);
        model = BinaryData.fromObject(model).toObject(Cookiecuttershark.class);
        Assertions.assertEquals("bznorcjxvsnby", model.getSpecies());
        Assertions.assertEquals(39.604675f, model.getLength());
        Assertions.assertEquals("mocpc", model.getSiblings().get(0).getSpecies());
        Assertions.assertEquals(96.150444f, model.getSiblings().get(0).getLength());
        Assertions.assertEquals("zafb", model.getSiblings().get(0).getSiblings().get(0).getSpecies());
        Assertions.assertEquals(25.262188f, model.getSiblings().get(0).getSiblings().get(0).getLength());
        Assertions.assertEquals(62.28783f,
            model.getSiblings().get(0).getSiblings().get(0).getSiblings().get(0).getLength());
        Assertions.assertEquals(305991846, model.getAge());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-13T16:28:52Z"), model.getBirthday());
    }
}
