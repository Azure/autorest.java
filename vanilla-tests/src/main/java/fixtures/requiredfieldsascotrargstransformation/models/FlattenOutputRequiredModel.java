// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package fixtures.requiredfieldsascotrargstransformation.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * flatten output required model.
 */
@Immutable
public final class FlattenOutputRequiredModel implements JsonSerializable<FlattenOutputRequiredModel> {
    /*
     * The name property.
     */
    private String name;

    /*
     * The titleRequired property.
     */
    private final String titleRequired;

    /**
     * Creates an instance of FlattenOutputRequiredModel class.
     * 
     * @param titleRequired the titleRequired value to set.
     */
    private FlattenOutputRequiredModel(String titleRequired) {
        this.titleRequired = titleRequired;
    }

    /**
     * Get the name property: The name property.
     * 
     * @return the name value.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Get the titleRequired property: The titleRequired property.
     * 
     * @return the titleRequired value.
     */
    public String getTitleRequired() {
        return this.titleRequired;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (getTitleRequired() == null) {
            throw new IllegalArgumentException(
                "Missing required property titleRequired in model FlattenOutputRequiredModel");
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("titleRequired", this.titleRequired);
        jsonWriter.writeStringField("name", this.name);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of FlattenOutputRequiredModel from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of FlattenOutputRequiredModel if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the FlattenOutputRequiredModel.
     */
    public static FlattenOutputRequiredModel fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            boolean titleRequiredFound = false;
            String titleRequired = null;
            String name = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("titleRequired".equals(fieldName)) {
                    titleRequired = reader.getString();
                    titleRequiredFound = true;
                } else if ("name".equals(fieldName)) {
                    name = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            if (titleRequiredFound) {
                FlattenOutputRequiredModel deserializedFlattenOutputRequiredModel
                    = new FlattenOutputRequiredModel(titleRequired);
                deserializedFlattenOutputRequiredModel.name = name;

                return deserializedFlattenOutputRequiredModel;
            }
            throw new IllegalStateException("Missing required property: titleRequired");
        });
    }
}
