// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package fixtures.streamstyleserialization.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.serializer.JsonUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.util.List;

/** The ArrayWrapper model. */
@Fluent
public final class ArrayWrapper implements JsonSerializable<ArrayWrapper> {
    private List<String> array;

    /**
     * Get the array property: The array property.
     *
     * @return the array value.
     */
    public List<String> getArray() {
        return this.array;
    }

    /**
     * Set the array property: The array property.
     *
     * @param array the array value to set.
     * @return the ArrayWrapper object itself.
     */
    public ArrayWrapper setArray(List<String> array) {
        this.array = array;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {}

    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) {
        return jsonWriter.flush();
    }

    public static ArrayWrapper fromJson(JsonReader jsonReader) {
        return JsonUtils.readObject(
                jsonReader,
                reader -> {
                    List<String> array = null;
                    while (reader.nextToken() != JsonToken.END_OBJECT) {
                        String fieldName = reader.getFieldName();
                        reader.nextToken();

                        if ("array".equals(fieldName)) {
                            array = JsonUtils.readArray(reader, r -> reader.getStringValue());
                        } else {
                            reader.skipChildren();
                        }
                    }
                    ArrayWrapper deserializedValue = new ArrayWrapper();
                    deserializedValue.setArray(array);

                    return deserializedValue;
                });
    }
}
