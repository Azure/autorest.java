// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package fixtures.streamstyleserialization.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.CoreUtils;
import com.azure.core.util.serializer.JsonUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.util.Base64;

/** The ByteWrapper model. */
@Fluent
public final class ByteWrapper implements JsonSerializable<ByteWrapper> {
    private byte[] field;

    /**
     * Get the field property: The field property.
     *
     * @return the field value.
     */
    public byte[] getField() {
        return CoreUtils.clone(this.field);
    }

    /**
     * Set the field property: The field property.
     *
     * @param field the field value to set.
     * @return the ByteWrapper object itself.
     */
    public ByteWrapper setField(byte[] field) {
        this.field = CoreUtils.clone(field);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {}

    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) {
        return jsonWriter.flush();
    }

    public static ByteWrapper fromJson(JsonReader jsonReader) {
        return JsonUtils.readObject(
                jsonReader,
                reader -> {
                    byte[] field = new byte[0];
                    while (reader.nextToken() != JsonToken.END_OBJECT) {
                        String fieldName = reader.getFieldName();
                        reader.nextToken();

                        if ("field".equals(fieldName)) {
                            if (reader.currentToken() != JsonToken.NULL) {
                                field = Base64.getDecoder().decode(reader.getStringValue());
                            }
                        } else {
                            reader.skipChildren();
                        }
                    }
                    ByteWrapper deserializedValue = new ByteWrapper();
                    deserializedValue.setField(field);

                    return deserializedValue;
                });
    }
}
