// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package fixtures.streamstyleserialization.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.serializer.JsonUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;

/** The Dog model. */
@Fluent
public final class Dog extends Pet {
    private String food;

    /**
     * Get the food property: The food property.
     *
     * @return the food value.
     */
    public String getFood() {
        return this.food;
    }

    /**
     * Set the food property: The food property.
     *
     * @param food the food value to set.
     * @return the Dog object itself.
     */
    public Dog setFood(String food) {
        this.food = food;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public Dog setId(Integer id) {
        super.setId(id);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public Dog setName(String name) {
        super.setName(name);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }

    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) {
        return jsonWriter.flush();
    }

    public static Dog fromJson(JsonReader jsonReader) {
        return JsonUtils.readObject(
                jsonReader,
                reader -> {
                    Dog deserializedValue = new Dog();
                    while (reader.nextToken() != JsonToken.END_OBJECT) {
                        String fieldName = reader.getFieldName();
                        reader.nextToken();

                        if ("food".equals(fieldName)) {
                            deserializedValue.setFood(reader.getStringValue());
                        } else if ("id".equals(fieldName)) {
                            if (reader.currentToken() != JsonToken.NULL) {
                                deserializedValue.setId(reader.getIntValue());
                            }
                        } else if ("name".equals(fieldName)) {
                            deserializedValue.setName(reader.getStringValue());
                        } else {
                            reader.skipChildren();
                        }
                    }
                    return deserializedValue;
                });
    }
}
