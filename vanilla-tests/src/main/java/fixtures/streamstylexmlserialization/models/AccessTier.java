// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package fixtures.streamstylexmlserialization.models;

import com.azure.core.util.ExpandableStringEnum;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.Collection;

/**
 * Defines values for AccessTier.
 */
public final class AccessTier extends ExpandableStringEnum<AccessTier> implements JsonSerializable<AccessTier> {
    /**
     * Static value P4 for AccessTier.
     */
    public static final AccessTier P4 = fromString("P4");

    /**
     * Static value P6 for AccessTier.
     */
    public static final AccessTier P6 = fromString("P6");

    /**
     * Static value P10 for AccessTier.
     */
    public static final AccessTier P10 = fromString("P10");

    /**
     * Static value P20 for AccessTier.
     */
    public static final AccessTier P20 = fromString("P20");

    /**
     * Static value P30 for AccessTier.
     */
    public static final AccessTier P30 = fromString("P30");

    /**
     * Static value P40 for AccessTier.
     */
    public static final AccessTier P40 = fromString("P40");

    /**
     * Static value P50 for AccessTier.
     */
    public static final AccessTier P50 = fromString("P50");

    /**
     * Static value Hot for AccessTier.
     */
    public static final AccessTier HOT = fromString("Hot");

    /**
     * Static value Cool for AccessTier.
     */
    public static final AccessTier COOL = fromString("Cool");

    /**
     * Static value Archive for AccessTier.
     */
    public static final AccessTier ARCHIVE = fromString("Archive");

    /**
     * Creates a new instance of AccessTier value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public AccessTier() {
    }

    /**
     * Creates or finds a AccessTier from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding AccessTier.
     */
    public static AccessTier fromString(String name) {
        return fromString(name, AccessTier.class);
    }

    /**
     * Gets known AccessTier values.
     * 
     * @return known AccessTier values.
     */
    public static Collection<AccessTier> values() {
        return values(AccessTier.class);
    }

    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        return jsonWriter.writeString(toString());
    }

    /**
     * Reads a AccessTier from the JSON stream.
     * &lt;p&gt;.
     * The passed JsonReader must be positioned at a JsonToken.STRING value.
     * 
     * @param jsonReader The JsonReader being read.
     * @return The AccessTier that the JSON stream represented, may return null.
     * @throws java.io.IOException If a AccessTier fails to be read from the JsonReader.
     */
    public static AccessTier fromJson(JsonReader jsonReader) throws IOException {
        return fromString(jsonReader.getString(), AccessTier.class);
    }
}
