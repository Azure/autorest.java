// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package fixtures.streamstylexmlserialization.models;

import com.azure.core.util.ExpandableStringEnum;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.Collection;

/**
 * Defines values for ArchiveStatus.
 */
public final class ArchiveStatus extends ExpandableStringEnum<ArchiveStatus>
    implements JsonSerializable<ArchiveStatus> {
    /**
     * Static value rehydrate-pending-to-hot for ArchiveStatus.
     */
    public static final ArchiveStatus REHYDRATE_PENDING_TO_HOT = fromString("rehydrate-pending-to-hot");

    /**
     * Static value rehydrate-pending-to-cool for ArchiveStatus.
     */
    public static final ArchiveStatus REHYDRATE_PENDING_TO_COOL = fromString("rehydrate-pending-to-cool");

    /**
     * Creates a new instance of ArchiveStatus value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public ArchiveStatus() {
    }

    /**
     * Creates or finds a ArchiveStatus from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding ArchiveStatus.
     */
    public static ArchiveStatus fromString(String name) {
        return fromString(name, ArchiveStatus.class);
    }

    /**
     * Gets known ArchiveStatus values.
     * 
     * @return known ArchiveStatus values.
     */
    public static Collection<ArchiveStatus> values() {
        return values(ArchiveStatus.class);
    }

    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        return jsonWriter.writeString(toString());
    }

    /**
     * Reads a ArchiveStatus from the JSON stream.
     * <p>
     * The passed JsonReader must be positioned at a JsonToken.STRING value.
     * 
     * @param jsonReader The JsonReader being read.
     * @return The ArchiveStatus that the JSON stream represented, may return null.
     * @throws java.io.IOException If a ArchiveStatus fails to be read from the JsonReader.
     */
    public static ArchiveStatus fromJson(JsonReader jsonReader) throws IOException {
        return fromString(jsonReader.getString(), ArchiveStatus.class);
    }
}
