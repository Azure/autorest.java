// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package fixtures.streamstylexmlserialization.models;

import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Defines values for LeaseDurationType.
 */
public enum LeaseDurationType implements JsonSerializable<LeaseDurationType> {
    /**
     * Enum value infinite.
     */
    INFINITE("infinite"),

    /**
     * Enum value fixed.
     */
    FIXED("fixed");

    /**
     * The actual serialized value for a LeaseDurationType instance.
     */
    private final String value;

    LeaseDurationType(String value) {
        this.value = value;
    }

    /**
     * Parses a serialized value to a LeaseDurationType instance.
     * 
     * @param value the serialized value to parse.
     * @return the parsed LeaseDurationType object, or null if unable to parse.
     */
    public static LeaseDurationType fromString(String value) {
        if (value == null) {
            return null;
        }
        LeaseDurationType[] items = LeaseDurationType.values();
        for (LeaseDurationType item : items) {
            if (item.toString().equalsIgnoreCase(value)) {
                return item;
            }
        }
        return null;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String toString() {
        return this.value;
    }

    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        return jsonWriter.writeString(value);
    }

    /**
     * Reads a LeaseDurationType from the JSON stream.
     * &lt;p&gt;.
     * The passed JsonReader must be positioned at a JsonToken.STRING value.
     * 
     * @param jsonReader The JsonReader being read.
     * @return The LeaseDurationType that the JSON stream represented, may return null.
     * @throws java.io.IOException If a LeaseDurationType fails to be read from the JsonReader.
     */
    public static LeaseDurationType fromJson(JsonReader jsonReader) throws IOException {
        return fromString(jsonReader.getString());
    }
}
