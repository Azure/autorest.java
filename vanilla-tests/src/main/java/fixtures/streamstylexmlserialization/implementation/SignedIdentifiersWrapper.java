// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package fixtures.streamstylexmlserialization.implementation;

import com.azure.core.util.CoreUtils;
import com.azure.xml.XmlReader;
import com.azure.xml.XmlSerializable;
import com.azure.xml.XmlToken;
import com.azure.xml.XmlWriter;
import fixtures.streamstylexmlserialization.models.SignedIdentifier;
import java.util.ArrayList;
import java.util.List;
import javax.xml.stream.XMLStreamException;

/** A wrapper around List&lt;SignedIdentifier&gt; which provides top-level metadata for serialization. */
public final class SignedIdentifiersWrapper implements XmlSerializable<SignedIdentifiersWrapper> {
    private final List<SignedIdentifier> signedIdentifiers;

    /**
     * Creates an instance of SignedIdentifiersWrapper.
     *
     * @param signedIdentifiers the list.
     */
    public SignedIdentifiersWrapper(List<SignedIdentifier> signedIdentifiers) {
        this.signedIdentifiers = signedIdentifiers;
    }

    /**
     * Get the List&lt;SignedIdentifier&gt; contained in this wrapper.
     *
     * @return the List&lt;SignedIdentifier&gt;.
     */
    public List<SignedIdentifier> items() {
        return signedIdentifiers;
    }

    @Override
    public XmlWriter toXml(XmlWriter xmlWriter) throws XMLStreamException {
        return toXml(xmlWriter, null);
    }

    @Override
    public XmlWriter toXml(XmlWriter xmlWriter, String rootElementName) throws XMLStreamException {
        rootElementName = CoreUtils.isNullOrEmpty(rootElementName) ? "SignedIdentifiers" : rootElementName;
        xmlWriter.writeStartElement(rootElementName);
        if (signedIdentifiers != null) {
            for (SignedIdentifier element : signedIdentifiers) {
                xmlWriter.writeXml(element, "SignedIdentifier");
            }
        }
        return xmlWriter.writeEndElement();
    }

    public static SignedIdentifiersWrapper fromXml(XmlReader xmlReader) throws XMLStreamException {
        return fromXml(xmlReader, null);
    }

    public static SignedIdentifiersWrapper fromXml(XmlReader xmlReader, String rootElementName)
            throws XMLStreamException {
        rootElementName = CoreUtils.isNullOrEmpty(rootElementName) ? "SignedIdentifiers" : rootElementName;
        return xmlReader.readObject(
                rootElementName,
                reader -> {
                    List<SignedIdentifier> items = null;

                    while (reader.nextElement() != XmlToken.END_ELEMENT) {
                        String elementName = reader.getElementName().getLocalPart();

                        if ("SignedIdentifier".equals(elementName)) {
                            if (items == null) {
                                items = new ArrayList<>();
                            }

                            items.add(SignedIdentifier.fromXml(reader));
                        } else {
                            reader.nextElement();
                        }
                    }
                    return new SignedIdentifiersWrapper(items);
                });
    }
}
