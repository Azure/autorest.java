// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package fixtures.bodycomplex.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.core.annotation.JsonFlatten;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * The MyBaseType model.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, property = "kind", defaultImpl = MyBaseType.class, visible = true)
@JsonTypeName("MyBaseType")
@JsonSubTypes({ @JsonSubTypes.Type(name = "Kind1", value = MyDerivedType.class) })
@JsonFlatten
@Immutable
public class MyBaseType {
    /*
     * The kind property.
     */
    @Generated
    @JsonTypeId
    @JsonProperty(value = "kind", required = true)
    private MyKind kind = MyKind.fromString("MyBaseType");

    /*
     * The propB1 property.
     */
    @Generated
    @JsonProperty(value = "propB1")
    private String propB1;

    /*
     * The propBH1 property.
     */
    @Generated
    @JsonProperty(value = "helper.propBH1")
    private String propBH1;

    /**
     * Creates an instance of MyBaseType class.
     */
    @Generated
    protected MyBaseType() {
    }

    /**
     * Get the kind property: The kind property.
     * 
     * @return the kind value.
     */
    @Generated
    public MyKind getKind() {
        return this.kind;
    }

    /**
     * Get the propB1 property: The propB1 property.
     * 
     * @return the propB1 value.
     */
    @Generated
    public String getPropB1() {
        return this.propB1;
    }

    /**
     * Get the propBH1 property: The propBH1 property.
     * 
     * @return the propBH1 value.
     */
    @Generated
    public String getPropBH1() {
        return this.propBH1;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
