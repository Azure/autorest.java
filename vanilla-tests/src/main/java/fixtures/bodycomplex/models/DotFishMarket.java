// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package fixtures.bodycomplex.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * The DotFishMarket model.
 */
@Immutable
public final class DotFishMarket {
    /*
     * The sampleSalmon property.
     */
    @JsonProperty(value = "sampleSalmon")
    private DotSalmon sampleSalmon;

    /*
     * The salmons property.
     */
    @JsonProperty(value = "salmons")
    private List<DotSalmon> salmons;

    /*
     * The sampleFish property.
     */
    @JsonProperty(value = "sampleFish")
    private DotFish sampleFish;

    /*
     * The fishes property.
     */
    @JsonProperty(value = "fishes")
    private List<DotFish> fishes;

    /**
     * Creates an instance of DotFishMarket class.
     */
    private DotFishMarket() {
    }

    /**
     * Get the sampleSalmon property: The sampleSalmon property.
     * 
     * @return the sampleSalmon value.
     */
    public DotSalmon getSampleSalmon() {
        return this.sampleSalmon;
    }

    /**
     * Get the salmons property: The salmons property.
     * 
     * @return the salmons value.
     */
    public List<DotSalmon> getSalmons() {
        return this.salmons;
    }

    /**
     * Get the sampleFish property: The sampleFish property.
     * 
     * @return the sampleFish value.
     */
    public DotFish getSampleFish() {
        return this.sampleFish;
    }

    /**
     * Get the fishes property: The fishes property.
     * 
     * @return the fishes value.
     */
    public List<DotFish> getFishes() {
        return this.fishes;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (getSampleSalmon() != null) {
            getSampleSalmon().validate();
        }
        if (getSalmons() != null) {
            getSalmons().forEach(e -> e.validate());
        }
        if (getSampleFish() != null) {
            getSampleFish().validate();
        }
        if (getFishes() != null) {
            getFishes().forEach(e -> e.validate());
        }
    }
}
