From de6a860a080155d36330c1ec428e905e6a41316d Mon Sep 17 00:00:00 2001
From: Weidong Xu <weidxu@microsoft.com>
Date: Tue, 16 Sep 2025 18:45:40 +0800
Subject: [PATCH] revert main

---
 .../batch/implementation/BatchClientImpl.java | 1676 +++++++++--------
 1 file changed, 903 insertions(+), 773 deletions(-)

diff --git a/sdk/batch/azure-compute-batch/src/main/java/com/azure/compute/batch/implementation/BatchClientImpl.java b/sdk/batch/azure-compute-batch/src/main/java/com/azure/compute/batch/implementation/BatchClientImpl.java
index ede39152f61..7425e864fb3 100644
--- a/sdk/batch/azure-compute-batch/src/main/java/com/azure/compute/batch/implementation/BatchClientImpl.java
+++ b/sdk/batch/azure-compute-batch/src/main/java/com/azure/compute/batch/implementation/BatchClientImpl.java
@@ -62,7 +62,7 @@ public final class BatchClientImpl {
 
     /**
      * Gets Batch account endpoint (for example: https://batchaccount.eastus2.batch.azure.com).
-     * 
+     *
      * @return the endpoint value.
      */
     public String getEndpoint() {
@@ -76,7 +76,7 @@ public final class BatchClientImpl {
 
     /**
      * Gets Service version.
-     * 
+     *
      * @return the serviceVersion value.
      */
     public BatchServiceVersion getServiceVersion() {
@@ -90,7 +90,7 @@ public final class BatchClientImpl {
 
     /**
      * Gets The HTTP pipeline to send requests through.
-     * 
+     *
      * @return the httpPipeline value.
      */
     public HttpPipeline getHttpPipeline() {
@@ -104,7 +104,7 @@ public final class BatchClientImpl {
 
     /**
      * Gets The serializer to serialize an object into a string.
-     * 
+     *
      * @return the serializerAdapter value.
      */
     public SerializerAdapter getSerializerAdapter() {
@@ -113,7 +113,7 @@ public final class BatchClientImpl {
 
     /**
      * Initializes an instance of BatchClient client.
-     * 
+     *
      * @param endpoint Batch account endpoint (for example: https://batchaccount.eastus2.batch.azure.com).
      * @param serviceVersion Service version.
      */
@@ -124,7 +124,7 @@ public final class BatchClientImpl {
 
     /**
      * Initializes an instance of BatchClient client.
-     * 
+     *
      * @param httpPipeline The HTTP pipeline to send requests through.
      * @param endpoint Batch account endpoint (for example: https://batchaccount.eastus2.batch.azure.com).
      * @param serviceVersion Service version.
@@ -135,7 +135,7 @@ public final class BatchClientImpl {
 
     /**
      * Initializes an instance of BatchClient client.
-     * 
+     *
      * @param httpPipeline The HTTP pipeline to send requests through.
      * @param serializerAdapter The serializer to serialize an object into a string.
      * @param endpoint Batch account endpoint (for example: https://batchaccount.eastus2.batch.azure.com).
@@ -203,16 +203,16 @@ public final class BatchClientImpl {
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Mono<Response<Void>> createPool(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @HeaderParam("content-type") String contentType,
-            @BodyParam("application/json; odata=minimalmetadata") BinaryData pool, RequestOptions requestOptions,
-            Context context);
+            @HeaderParam("Accept") String accept, @BodyParam("application/json; odata=minimalmetadata") BinaryData pool,
+            RequestOptions requestOptions, Context context);
 
         @Post("/pools")
         @ExpectedResponses({ 201 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Response<Void> createPoolSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @HeaderParam("content-type") String contentType,
-            @BodyParam("application/json; odata=minimalmetadata") BinaryData pool, RequestOptions requestOptions,
-            Context context);
+            @HeaderParam("Accept") String accept, @BodyParam("application/json; odata=minimalmetadata") BinaryData pool,
+            RequestOptions requestOptions, Context context);
 
         @Get("/pools")
         @ExpectedResponses({ 200 })
@@ -233,28 +233,28 @@ public final class BatchClientImpl {
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Mono<Response<Void>> deletePool(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("poolId") String poolId,
-            RequestOptions requestOptions, Context context);
+            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);
 
         @Delete("/pools/{poolId}")
         @ExpectedResponses({ 202 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Response<Void> deletePoolSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("poolId") String poolId,
-            RequestOptions requestOptions, Context context);
+            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);
 
         @Head("/pools/{poolId}")
         @ExpectedResponses({ 200, 404 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Mono<Response<Boolean>> poolExists(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("poolId") String poolId,
-            RequestOptions requestOptions, Context context);
+            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);
 
         @Head("/pools/{poolId}")
         @ExpectedResponses({ 200, 404 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Response<Boolean> poolExistsSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("poolId") String poolId,
-            RequestOptions requestOptions, Context context);
+            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);
 
         @Get("/pools/{poolId}")
         @ExpectedResponses({ 200 })
@@ -275,37 +275,39 @@ public final class BatchClientImpl {
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Mono<Response<Void>> updatePool(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @HeaderParam("content-type") String contentType,
-            @PathParam("poolId") String poolId, @BodyParam("application/json; odata=minimalmetadata") BinaryData pool,
-            RequestOptions requestOptions, Context context);
+            @PathParam("poolId") String poolId, @HeaderParam("Accept") String accept,
+            @BodyParam("application/json; odata=minimalmetadata") BinaryData pool, RequestOptions requestOptions,
+            Context context);
 
         @Patch("/pools/{poolId}")
         @ExpectedResponses({ 200 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Response<Void> updatePoolSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @HeaderParam("content-type") String contentType,
-            @PathParam("poolId") String poolId, @BodyParam("application/json; odata=minimalmetadata") BinaryData pool,
-            RequestOptions requestOptions, Context context);
+            @PathParam("poolId") String poolId, @HeaderParam("Accept") String accept,
+            @BodyParam("application/json; odata=minimalmetadata") BinaryData pool, RequestOptions requestOptions,
+            Context context);
 
         @Post("/pools/{poolId}/disableautoscale")
         @ExpectedResponses({ 200 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Mono<Response<Void>> disablePoolAutoScale(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("poolId") String poolId,
-            RequestOptions requestOptions, Context context);
+            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);
 
         @Post("/pools/{poolId}/disableautoscale")
         @ExpectedResponses({ 200 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Response<Void> disablePoolAutoScaleSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("poolId") String poolId,
-            RequestOptions requestOptions, Context context);
+            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);
 
         @Post("/pools/{poolId}/enableautoscale")
         @ExpectedResponses({ 200 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Mono<Response<Void>> enablePoolAutoScale(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @HeaderParam("content-type") String contentType,
-            @PathParam("poolId") String poolId,
+            @PathParam("poolId") String poolId, @HeaderParam("Accept") String accept,
             @BodyParam("application/json; odata=minimalmetadata") BinaryData parameters, RequestOptions requestOptions,
             Context context);
 
@@ -314,7 +316,7 @@ public final class BatchClientImpl {
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Response<Void> enablePoolAutoScaleSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @HeaderParam("content-type") String contentType,
-            @PathParam("poolId") String poolId,
+            @PathParam("poolId") String poolId, @HeaderParam("Accept") String accept,
             @BodyParam("application/json; odata=minimalmetadata") BinaryData parameters, RequestOptions requestOptions,
             Context context);
 
@@ -341,7 +343,7 @@ public final class BatchClientImpl {
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Mono<Response<Void>> resizePool(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @HeaderParam("content-type") String contentType,
-            @PathParam("poolId") String poolId,
+            @PathParam("poolId") String poolId, @HeaderParam("Accept") String accept,
             @BodyParam("application/json; odata=minimalmetadata") BinaryData parameters, RequestOptions requestOptions,
             Context context);
 
@@ -350,7 +352,7 @@ public final class BatchClientImpl {
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Response<Void> resizePoolSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @HeaderParam("content-type") String contentType,
-            @PathParam("poolId") String poolId,
+            @PathParam("poolId") String poolId, @HeaderParam("Accept") String accept,
             @BodyParam("application/json; odata=minimalmetadata") BinaryData parameters, RequestOptions requestOptions,
             Context context);
 
@@ -359,37 +361,39 @@ public final class BatchClientImpl {
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Mono<Response<Void>> stopPoolResize(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("poolId") String poolId,
-            RequestOptions requestOptions, Context context);
+            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);
 
         @Post("/pools/{poolId}/stopresize")
         @ExpectedResponses({ 202 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Response<Void> stopPoolResizeSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("poolId") String poolId,
-            RequestOptions requestOptions, Context context);
+            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);
 
         @Post("/pools/{poolId}/updateproperties")
         @ExpectedResponses({ 204 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Mono<Response<Void>> replacePoolProperties(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @HeaderParam("content-type") String contentType,
-            @PathParam("poolId") String poolId, @BodyParam("application/json; odata=minimalmetadata") BinaryData pool,
-            RequestOptions requestOptions, Context context);
+            @PathParam("poolId") String poolId, @HeaderParam("Accept") String accept,
+            @BodyParam("application/json; odata=minimalmetadata") BinaryData pool, RequestOptions requestOptions,
+            Context context);
 
         @Post("/pools/{poolId}/updateproperties")
         @ExpectedResponses({ 204 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Response<Void> replacePoolPropertiesSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @HeaderParam("content-type") String contentType,
-            @PathParam("poolId") String poolId, @BodyParam("application/json; odata=minimalmetadata") BinaryData pool,
-            RequestOptions requestOptions, Context context);
+            @PathParam("poolId") String poolId, @HeaderParam("Accept") String accept,
+            @BodyParam("application/json; odata=minimalmetadata") BinaryData pool, RequestOptions requestOptions,
+            Context context);
 
         @Post("/pools/{poolId}/removenodes")
         @ExpectedResponses({ 202 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Mono<Response<Void>> removeNodes(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @HeaderParam("content-type") String contentType,
-            @PathParam("poolId") String poolId,
+            @PathParam("poolId") String poolId, @HeaderParam("Accept") String accept,
             @BodyParam("application/json; odata=minimalmetadata") BinaryData parameters, RequestOptions requestOptions,
             Context context);
 
@@ -398,7 +402,7 @@ public final class BatchClientImpl {
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Response<Void> removeNodesSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @HeaderParam("content-type") String contentType,
-            @PathParam("poolId") String poolId,
+            @PathParam("poolId") String poolId, @HeaderParam("Accept") String accept,
             @BodyParam("application/json; odata=minimalmetadata") BinaryData parameters, RequestOptions requestOptions,
             Context context);
 
@@ -435,14 +439,14 @@ public final class BatchClientImpl {
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Mono<Response<Void>> deleteJob(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("jobId") String jobId,
-            RequestOptions requestOptions, Context context);
+            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);
 
         @Delete("/jobs/{jobId}")
         @ExpectedResponses({ 202 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Response<Void> deleteJobSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("jobId") String jobId,
-            RequestOptions requestOptions, Context context);
+            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);
 
         @Get("/jobs/{jobId}")
         @ExpectedResponses({ 200 })
@@ -463,39 +467,43 @@ public final class BatchClientImpl {
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Mono<Response<Void>> updateJob(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @HeaderParam("content-type") String contentType,
-            @PathParam("jobId") String jobId, @BodyParam("application/json; odata=minimalmetadata") BinaryData job,
-            RequestOptions requestOptions, Context context);
+            @PathParam("jobId") String jobId, @HeaderParam("Accept") String accept,
+            @BodyParam("application/json; odata=minimalmetadata") BinaryData job, RequestOptions requestOptions,
+            Context context);
 
         @Patch("/jobs/{jobId}")
         @ExpectedResponses({ 200 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Response<Void> updateJobSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @HeaderParam("content-type") String contentType,
-            @PathParam("jobId") String jobId, @BodyParam("application/json; odata=minimalmetadata") BinaryData job,
-            RequestOptions requestOptions, Context context);
+            @PathParam("jobId") String jobId, @HeaderParam("Accept") String accept,
+            @BodyParam("application/json; odata=minimalmetadata") BinaryData job, RequestOptions requestOptions,
+            Context context);
 
         @Put("/jobs/{jobId}")
         @ExpectedResponses({ 200 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Mono<Response<Void>> replaceJob(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @HeaderParam("content-type") String contentType,
-            @PathParam("jobId") String jobId, @BodyParam("application/json; odata=minimalmetadata") BinaryData job,
-            RequestOptions requestOptions, Context context);
+            @PathParam("jobId") String jobId, @HeaderParam("Accept") String accept,
+            @BodyParam("application/json; odata=minimalmetadata") BinaryData job, RequestOptions requestOptions,
+            Context context);
 
         @Put("/jobs/{jobId}")
         @ExpectedResponses({ 200 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Response<Void> replaceJobSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @HeaderParam("content-type") String contentType,
-            @PathParam("jobId") String jobId, @BodyParam("application/json; odata=minimalmetadata") BinaryData job,
-            RequestOptions requestOptions, Context context);
+            @PathParam("jobId") String jobId, @HeaderParam("Accept") String accept,
+            @BodyParam("application/json; odata=minimalmetadata") BinaryData job, RequestOptions requestOptions,
+            Context context);
 
         @Post("/jobs/{jobId}/disable")
         @ExpectedResponses({ 202 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Mono<Response<Void>> disableJob(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @HeaderParam("content-type") String contentType,
-            @PathParam("jobId") String jobId,
+            @PathParam("jobId") String jobId, @HeaderParam("Accept") String accept,
             @BodyParam("application/json; odata=minimalmetadata") BinaryData parameters, RequestOptions requestOptions,
             Context context);
 
@@ -504,7 +512,7 @@ public final class BatchClientImpl {
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Response<Void> disableJobSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @HeaderParam("content-type") String contentType,
-            @PathParam("jobId") String jobId,
+            @PathParam("jobId") String jobId, @HeaderParam("Accept") String accept,
             @BodyParam("application/json; odata=minimalmetadata") BinaryData parameters, RequestOptions requestOptions,
             Context context);
 
@@ -513,44 +521,44 @@ public final class BatchClientImpl {
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Mono<Response<Void>> enableJob(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("jobId") String jobId,
-            RequestOptions requestOptions, Context context);
+            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);
 
         @Post("/jobs/{jobId}/enable")
         @ExpectedResponses({ 202 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Response<Void> enableJobSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("jobId") String jobId,
-            RequestOptions requestOptions, Context context);
+            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);
 
         @Post("/jobs/{jobId}/terminate")
         @ExpectedResponses({ 202 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Mono<Response<Void>> terminateJob(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("jobId") String jobId,
-            RequestOptions requestOptions, Context context);
+            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);
 
         @Post("/jobs/{jobId}/terminate")
         @ExpectedResponses({ 202 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Response<Void> terminateJobSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("jobId") String jobId,
-            RequestOptions requestOptions, Context context);
+            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);
 
         @Post("/jobs")
         @ExpectedResponses({ 201 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Mono<Response<Void>> createJob(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @HeaderParam("content-type") String contentType,
-            @BodyParam("application/json; odata=minimalmetadata") BinaryData job, RequestOptions requestOptions,
-            Context context);
+            @HeaderParam("Accept") String accept, @BodyParam("application/json; odata=minimalmetadata") BinaryData job,
+            RequestOptions requestOptions, Context context);
 
         @Post("/jobs")
         @ExpectedResponses({ 201 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Response<Void> createJobSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @HeaderParam("content-type") String contentType,
-            @BodyParam("application/json; odata=minimalmetadata") BinaryData job, RequestOptions requestOptions,
-            Context context);
+            @HeaderParam("Accept") String accept, @BodyParam("application/json; odata=minimalmetadata") BinaryData job,
+            RequestOptions requestOptions, Context context);
 
         @Get("/jobs")
         @ExpectedResponses({ 200 })
@@ -613,6 +621,7 @@ public final class BatchClientImpl {
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Mono<Response<Void>> createCertificate(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @HeaderParam("content-type") String contentType,
+            @HeaderParam("Accept") String accept,
             @BodyParam("application/json; odata=minimalmetadata") BinaryData certificate, RequestOptions requestOptions,
             Context context);
 
@@ -621,6 +630,7 @@ public final class BatchClientImpl {
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Response<Void> createCertificateSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @HeaderParam("content-type") String contentType,
+            @HeaderParam("Accept") String accept,
             @BodyParam("application/json; odata=minimalmetadata") BinaryData certificate, RequestOptions requestOptions,
             Context context);
 
@@ -643,28 +653,32 @@ public final class BatchClientImpl {
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Mono<Response<Void>> cancelCertificateDeletion(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("thumbprintAlgorithm") String thumbprintAlgorithm,
-            @PathParam("thumbprint") String thumbprint, RequestOptions requestOptions, Context context);
+            @PathParam("thumbprint") String thumbprint, @HeaderParam("Accept") String accept,
+            RequestOptions requestOptions, Context context);
 
         @Post("/certificates(thumbprintAlgorithm={thumbprintAlgorithm},thumbprint={thumbprint})/canceldelete")
         @ExpectedResponses({ 204 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Response<Void> cancelCertificateDeletionSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("thumbprintAlgorithm") String thumbprintAlgorithm,
-            @PathParam("thumbprint") String thumbprint, RequestOptions requestOptions, Context context);
+            @PathParam("thumbprint") String thumbprint, @HeaderParam("Accept") String accept,
+            RequestOptions requestOptions, Context context);
 
         @Delete("/certificates(thumbprintAlgorithm={thumbprintAlgorithm},thumbprint={thumbprint})")
         @ExpectedResponses({ 202 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Mono<Response<Void>> deleteCertificate(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("thumbprintAlgorithm") String thumbprintAlgorithm,
-            @PathParam("thumbprint") String thumbprint, RequestOptions requestOptions, Context context);
+            @PathParam("thumbprint") String thumbprint, @HeaderParam("Accept") String accept,
+            RequestOptions requestOptions, Context context);
 
         @Delete("/certificates(thumbprintAlgorithm={thumbprintAlgorithm},thumbprint={thumbprint})")
         @ExpectedResponses({ 202 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Response<Void> deleteCertificateSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("thumbprintAlgorithm") String thumbprintAlgorithm,
-            @PathParam("thumbprint") String thumbprint, RequestOptions requestOptions, Context context);
+            @PathParam("thumbprint") String thumbprint, @HeaderParam("Accept") String accept,
+            RequestOptions requestOptions, Context context);
 
         @Get("/certificates(thumbprintAlgorithm={thumbprintAlgorithm},thumbprint={thumbprint})")
         @ExpectedResponses({ 200 })
@@ -687,28 +701,28 @@ public final class BatchClientImpl {
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Mono<Response<Boolean>> jobScheduleExists(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("jobScheduleId") String jobScheduleId,
-            RequestOptions requestOptions, Context context);
+            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);
 
         @Head("/jobschedules/{jobScheduleId}")
         @ExpectedResponses({ 200, 404 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Response<Boolean> jobScheduleExistsSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("jobScheduleId") String jobScheduleId,
-            RequestOptions requestOptions, Context context);
+            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);
 
         @Delete("/jobschedules/{jobScheduleId}")
         @ExpectedResponses({ 202 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Mono<Response<Void>> deleteJobSchedule(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("jobScheduleId") String jobScheduleId,
-            RequestOptions requestOptions, Context context);
+            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);
 
         @Delete("/jobschedules/{jobScheduleId}")
         @ExpectedResponses({ 202 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Response<Void> deleteJobScheduleSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("jobScheduleId") String jobScheduleId,
-            RequestOptions requestOptions, Context context);
+            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);
 
         @Get("/jobschedules/{jobScheduleId}")
         @ExpectedResponses({ 200 })
@@ -729,7 +743,7 @@ public final class BatchClientImpl {
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Mono<Response<Void>> updateJobSchedule(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @HeaderParam("content-type") String contentType,
-            @PathParam("jobScheduleId") String jobScheduleId,
+            @PathParam("jobScheduleId") String jobScheduleId, @HeaderParam("Accept") String accept,
             @BodyParam("application/json; odata=minimalmetadata") BinaryData jobSchedule, RequestOptions requestOptions,
             Context context);
 
@@ -738,7 +752,7 @@ public final class BatchClientImpl {
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Response<Void> updateJobScheduleSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @HeaderParam("content-type") String contentType,
-            @PathParam("jobScheduleId") String jobScheduleId,
+            @PathParam("jobScheduleId") String jobScheduleId, @HeaderParam("Accept") String accept,
             @BodyParam("application/json; odata=minimalmetadata") BinaryData jobSchedule, RequestOptions requestOptions,
             Context context);
 
@@ -747,7 +761,7 @@ public final class BatchClientImpl {
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Mono<Response<Void>> replaceJobSchedule(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @HeaderParam("content-type") String contentType,
-            @PathParam("jobScheduleId") String jobScheduleId,
+            @PathParam("jobScheduleId") String jobScheduleId, @HeaderParam("Accept") String accept,
             @BodyParam("application/json; odata=minimalmetadata") BinaryData jobSchedule, RequestOptions requestOptions,
             Context context);
 
@@ -756,7 +770,7 @@ public final class BatchClientImpl {
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Response<Void> replaceJobScheduleSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @HeaderParam("content-type") String contentType,
-            @PathParam("jobScheduleId") String jobScheduleId,
+            @PathParam("jobScheduleId") String jobScheduleId, @HeaderParam("Accept") String accept,
             @BodyParam("application/json; odata=minimalmetadata") BinaryData jobSchedule, RequestOptions requestOptions,
             Context context);
 
@@ -765,48 +779,49 @@ public final class BatchClientImpl {
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Mono<Response<Void>> disableJobSchedule(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("jobScheduleId") String jobScheduleId,
-            RequestOptions requestOptions, Context context);
+            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);
 
         @Post("/jobschedules/{jobScheduleId}/disable")
         @ExpectedResponses({ 204 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Response<Void> disableJobScheduleSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("jobScheduleId") String jobScheduleId,
-            RequestOptions requestOptions, Context context);
+            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);
 
         @Post("/jobschedules/{jobScheduleId}/enable")
         @ExpectedResponses({ 204 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Mono<Response<Void>> enableJobSchedule(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("jobScheduleId") String jobScheduleId,
-            RequestOptions requestOptions, Context context);
+            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);
 
         @Post("/jobschedules/{jobScheduleId}/enable")
         @ExpectedResponses({ 204 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Response<Void> enableJobScheduleSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("jobScheduleId") String jobScheduleId,
-            RequestOptions requestOptions, Context context);
+            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);
 
         @Post("/jobschedules/{jobScheduleId}/terminate")
         @ExpectedResponses({ 202 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Mono<Response<Void>> terminateJobSchedule(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("jobScheduleId") String jobScheduleId,
-            RequestOptions requestOptions, Context context);
+            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);
 
         @Post("/jobschedules/{jobScheduleId}/terminate")
         @ExpectedResponses({ 202 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Response<Void> terminateJobScheduleSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("jobScheduleId") String jobScheduleId,
-            RequestOptions requestOptions, Context context);
+            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);
 
         @Post("/jobschedules")
         @ExpectedResponses({ 201 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Mono<Response<Void>> createJobSchedule(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @HeaderParam("content-type") String contentType,
+            @HeaderParam("Accept") String accept,
             @BodyParam("application/json; odata=minimalmetadata") BinaryData jobSchedule, RequestOptions requestOptions,
             Context context);
 
@@ -815,6 +830,7 @@ public final class BatchClientImpl {
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Response<Void> createJobScheduleSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @HeaderParam("content-type") String contentType,
+            @HeaderParam("Accept") String accept,
             @BodyParam("application/json; odata=minimalmetadata") BinaryData jobSchedule, RequestOptions requestOptions,
             Context context);
 
@@ -837,16 +853,18 @@ public final class BatchClientImpl {
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Mono<Response<Void>> createTask(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @HeaderParam("content-type") String contentType,
-            @PathParam("jobId") String jobId, @BodyParam("application/json; odata=minimalmetadata") BinaryData task,
-            RequestOptions requestOptions, Context context);
+            @PathParam("jobId") String jobId, @HeaderParam("Accept") String accept,
+            @BodyParam("application/json; odata=minimalmetadata") BinaryData task, RequestOptions requestOptions,
+            Context context);
 
         @Post("/jobs/{jobId}/tasks")
         @ExpectedResponses({ 201 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Response<Void> createTaskSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @HeaderParam("content-type") String contentType,
-            @PathParam("jobId") String jobId, @BodyParam("application/json; odata=minimalmetadata") BinaryData task,
-            RequestOptions requestOptions, Context context);
+            @PathParam("jobId") String jobId, @HeaderParam("Accept") String accept,
+            @BodyParam("application/json; odata=minimalmetadata") BinaryData task, RequestOptions requestOptions,
+            Context context);
 
         @Get("/jobs/{jobId}/tasks")
         @ExpectedResponses({ 200 })
@@ -885,14 +903,16 @@ public final class BatchClientImpl {
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Mono<Response<Void>> deleteTask(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("jobId") String jobId,
-            @PathParam("taskId") String taskId, RequestOptions requestOptions, Context context);
+            @PathParam("taskId") String taskId, @HeaderParam("Accept") String accept, RequestOptions requestOptions,
+            Context context);
 
         @Delete("/jobs/{jobId}/tasks/{taskId}")
         @ExpectedResponses({ 200 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Response<Void> deleteTaskSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("jobId") String jobId,
-            @PathParam("taskId") String taskId, RequestOptions requestOptions, Context context);
+            @PathParam("taskId") String taskId, @HeaderParam("Accept") String accept, RequestOptions requestOptions,
+            Context context);
 
         @Get("/jobs/{jobId}/tasks/{taskId}")
         @ExpectedResponses({ 200 })
@@ -915,7 +935,7 @@ public final class BatchClientImpl {
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Mono<Response<Void>> replaceTask(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @HeaderParam("content-type") String contentType,
-            @PathParam("jobId") String jobId, @PathParam("taskId") String taskId,
+            @PathParam("jobId") String jobId, @PathParam("taskId") String taskId, @HeaderParam("Accept") String accept,
             @BodyParam("application/json; odata=minimalmetadata") BinaryData task, RequestOptions requestOptions,
             Context context);
 
@@ -924,7 +944,7 @@ public final class BatchClientImpl {
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Response<Void> replaceTaskSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @HeaderParam("content-type") String contentType,
-            @PathParam("jobId") String jobId, @PathParam("taskId") String taskId,
+            @PathParam("jobId") String jobId, @PathParam("taskId") String taskId, @HeaderParam("Accept") String accept,
             @BodyParam("application/json; odata=minimalmetadata") BinaryData task, RequestOptions requestOptions,
             Context context);
 
@@ -949,44 +969,48 @@ public final class BatchClientImpl {
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Mono<Response<Void>> terminateTask(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("jobId") String jobId,
-            @PathParam("taskId") String taskId, RequestOptions requestOptions, Context context);
+            @PathParam("taskId") String taskId, @HeaderParam("Accept") String accept, RequestOptions requestOptions,
+            Context context);
 
         @Post("/jobs/{jobId}/tasks/{taskId}/terminate")
         @ExpectedResponses({ 204 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Response<Void> terminateTaskSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("jobId") String jobId,
-            @PathParam("taskId") String taskId, RequestOptions requestOptions, Context context);
+            @PathParam("taskId") String taskId, @HeaderParam("Accept") String accept, RequestOptions requestOptions,
+            Context context);
 
         @Post("/jobs/{jobId}/tasks/{taskId}/reactivate")
         @ExpectedResponses({ 204 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Mono<Response<Void>> reactivateTask(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("jobId") String jobId,
-            @PathParam("taskId") String taskId, RequestOptions requestOptions, Context context);
+            @PathParam("taskId") String taskId, @HeaderParam("Accept") String accept, RequestOptions requestOptions,
+            Context context);
 
         @Post("/jobs/{jobId}/tasks/{taskId}/reactivate")
         @ExpectedResponses({ 204 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Response<Void> reactivateTaskSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("jobId") String jobId,
-            @PathParam("taskId") String taskId, RequestOptions requestOptions, Context context);
+            @PathParam("taskId") String taskId, @HeaderParam("Accept") String accept, RequestOptions requestOptions,
+            Context context);
 
         @Delete("/jobs/{jobId}/tasks/{taskId}/files/{filePath}")
         @ExpectedResponses({ 200 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Mono<Response<Void>> deleteTaskFile(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("jobId") String jobId,
-            @PathParam("taskId") String taskId, @PathParam("filePath") String filePath, RequestOptions requestOptions,
-            Context context);
+            @PathParam("taskId") String taskId, @PathParam("filePath") String filePath,
+            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);
 
         @Delete("/jobs/{jobId}/tasks/{taskId}/files/{filePath}")
         @ExpectedResponses({ 200 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Response<Void> deleteTaskFileSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("jobId") String jobId,
-            @PathParam("taskId") String taskId, @PathParam("filePath") String filePath, RequestOptions requestOptions,
-            Context context);
+            @PathParam("taskId") String taskId, @PathParam("filePath") String filePath,
+            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);
 
         @Get("/jobs/{jobId}/tasks/{taskId}/files/{filePath}")
         @ExpectedResponses({ 200 })
@@ -1009,16 +1033,16 @@ public final class BatchClientImpl {
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Mono<Response<Void>> getTaskFileProperties(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("jobId") String jobId,
-            @PathParam("taskId") String taskId, @PathParam("filePath") String filePath, RequestOptions requestOptions,
-            Context context);
+            @PathParam("taskId") String taskId, @PathParam("filePath") String filePath,
+            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);
 
         @Head("/jobs/{jobId}/tasks/{taskId}/files/{filePath}")
         @ExpectedResponses({ 200 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Response<Void> getTaskFilePropertiesSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("jobId") String jobId,
-            @PathParam("taskId") String taskId, @PathParam("filePath") String filePath, RequestOptions requestOptions,
-            Context context);
+            @PathParam("taskId") String taskId, @PathParam("filePath") String filePath,
+            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);
 
         @Get("/jobs/{jobId}/tasks/{taskId}/files")
         @ExpectedResponses({ 200 })
@@ -1042,8 +1066,8 @@ public final class BatchClientImpl {
         Mono<Response<Void>> createNodeUser(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @HeaderParam("content-type") String contentType,
             @PathParam("poolId") String poolId, @PathParam("nodeId") String nodeId,
-            @BodyParam("application/json; odata=minimalmetadata") BinaryData user, RequestOptions requestOptions,
-            Context context);
+            @HeaderParam("Accept") String accept, @BodyParam("application/json; odata=minimalmetadata") BinaryData user,
+            RequestOptions requestOptions, Context context);
 
         @Post("/pools/{poolId}/nodes/{nodeId}/users")
         @ExpectedResponses({ 201 })
@@ -1051,24 +1075,24 @@ public final class BatchClientImpl {
         Response<Void> createNodeUserSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @HeaderParam("content-type") String contentType,
             @PathParam("poolId") String poolId, @PathParam("nodeId") String nodeId,
-            @BodyParam("application/json; odata=minimalmetadata") BinaryData user, RequestOptions requestOptions,
-            Context context);
+            @HeaderParam("Accept") String accept, @BodyParam("application/json; odata=minimalmetadata") BinaryData user,
+            RequestOptions requestOptions, Context context);
 
         @Delete("/pools/{poolId}/nodes/{nodeId}/users/{userName}")
         @ExpectedResponses({ 200 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Mono<Response<Void>> deleteNodeUser(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("poolId") String poolId,
-            @PathParam("nodeId") String nodeId, @PathParam("userName") String userName, RequestOptions requestOptions,
-            Context context);
+            @PathParam("nodeId") String nodeId, @PathParam("userName") String userName,
+            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);
 
         @Delete("/pools/{poolId}/nodes/{nodeId}/users/{userName}")
         @ExpectedResponses({ 200 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Response<Void> deleteNodeUserSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("poolId") String poolId,
-            @PathParam("nodeId") String nodeId, @PathParam("userName") String userName, RequestOptions requestOptions,
-            Context context);
+            @PathParam("nodeId") String nodeId, @PathParam("userName") String userName,
+            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);
 
         @Put("/pools/{poolId}/nodes/{nodeId}/users/{userName}")
         @ExpectedResponses({ 200 })
@@ -1076,7 +1100,7 @@ public final class BatchClientImpl {
         Mono<Response<Void>> replaceNodeUser(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @HeaderParam("content-type") String contentType,
             @PathParam("poolId") String poolId, @PathParam("nodeId") String nodeId,
-            @PathParam("userName") String userName,
+            @PathParam("userName") String userName, @HeaderParam("Accept") String accept,
             @BodyParam("application/json; odata=minimalmetadata") BinaryData parameters, RequestOptions requestOptions,
             Context context);
 
@@ -1086,7 +1110,7 @@ public final class BatchClientImpl {
         Response<Void> replaceNodeUserSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @HeaderParam("content-type") String contentType,
             @PathParam("poolId") String poolId, @PathParam("nodeId") String nodeId,
-            @PathParam("userName") String userName,
+            @PathParam("userName") String userName, @HeaderParam("Accept") String accept,
             @BodyParam("application/json; odata=minimalmetadata") BinaryData parameters, RequestOptions requestOptions,
             Context context);
 
@@ -1111,84 +1135,96 @@ public final class BatchClientImpl {
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Mono<Response<Void>> rebootNode(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("poolId") String poolId,
-            @PathParam("nodeId") String nodeId, RequestOptions requestOptions, Context context);
+            @PathParam("nodeId") String nodeId, @HeaderParam("Accept") String accept, RequestOptions requestOptions,
+            Context context);
 
         @Post("/pools/{poolId}/nodes/{nodeId}/reboot")
         @ExpectedResponses({ 202 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Response<Void> rebootNodeSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("poolId") String poolId,
-            @PathParam("nodeId") String nodeId, RequestOptions requestOptions, Context context);
+            @PathParam("nodeId") String nodeId, @HeaderParam("Accept") String accept, RequestOptions requestOptions,
+            Context context);
 
         @Post("/pools/{poolId}/nodes/{nodeId}/start")
         @ExpectedResponses({ 202 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Mono<Response<Void>> startNode(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("poolId") String poolId,
-            @PathParam("nodeId") String nodeId, RequestOptions requestOptions, Context context);
+            @PathParam("nodeId") String nodeId, @HeaderParam("Accept") String accept, RequestOptions requestOptions,
+            Context context);
 
         @Post("/pools/{poolId}/nodes/{nodeId}/start")
         @ExpectedResponses({ 202 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Response<Void> startNodeSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("poolId") String poolId,
-            @PathParam("nodeId") String nodeId, RequestOptions requestOptions, Context context);
+            @PathParam("nodeId") String nodeId, @HeaderParam("Accept") String accept, RequestOptions requestOptions,
+            Context context);
 
         @Post("/pools/{poolId}/nodes/{nodeId}/reimage")
         @ExpectedResponses({ 202 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Mono<Response<Void>> reimageNode(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("poolId") String poolId,
-            @PathParam("nodeId") String nodeId, RequestOptions requestOptions, Context context);
+            @PathParam("nodeId") String nodeId, @HeaderParam("Accept") String accept, RequestOptions requestOptions,
+            Context context);
 
         @Post("/pools/{poolId}/nodes/{nodeId}/reimage")
         @ExpectedResponses({ 202 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Response<Void> reimageNodeSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("poolId") String poolId,
-            @PathParam("nodeId") String nodeId, RequestOptions requestOptions, Context context);
+            @PathParam("nodeId") String nodeId, @HeaderParam("Accept") String accept, RequestOptions requestOptions,
+            Context context);
 
         @Post("/pools/{poolId}/nodes/{nodeId}/deallocate")
         @ExpectedResponses({ 202 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Mono<Response<Void>> deallocateNode(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("poolId") String poolId,
-            @PathParam("nodeId") String nodeId, RequestOptions requestOptions, Context context);
+            @PathParam("nodeId") String nodeId, @HeaderParam("Accept") String accept, RequestOptions requestOptions,
+            Context context);
 
         @Post("/pools/{poolId}/nodes/{nodeId}/deallocate")
         @ExpectedResponses({ 202 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Response<Void> deallocateNodeSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("poolId") String poolId,
-            @PathParam("nodeId") String nodeId, RequestOptions requestOptions, Context context);
+            @PathParam("nodeId") String nodeId, @HeaderParam("Accept") String accept, RequestOptions requestOptions,
+            Context context);
 
         @Post("/pools/{poolId}/nodes/{nodeId}/disablescheduling")
         @ExpectedResponses({ 200 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Mono<Response<Void>> disableNodeScheduling(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("poolId") String poolId,
-            @PathParam("nodeId") String nodeId, RequestOptions requestOptions, Context context);
+            @PathParam("nodeId") String nodeId, @HeaderParam("Accept") String accept, RequestOptions requestOptions,
+            Context context);
 
         @Post("/pools/{poolId}/nodes/{nodeId}/disablescheduling")
         @ExpectedResponses({ 200 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Response<Void> disableNodeSchedulingSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("poolId") String poolId,
-            @PathParam("nodeId") String nodeId, RequestOptions requestOptions, Context context);
+            @PathParam("nodeId") String nodeId, @HeaderParam("Accept") String accept, RequestOptions requestOptions,
+            Context context);
 
         @Post("/pools/{poolId}/nodes/{nodeId}/enablescheduling")
         @ExpectedResponses({ 200 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Mono<Response<Void>> enableNodeScheduling(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("poolId") String poolId,
-            @PathParam("nodeId") String nodeId, RequestOptions requestOptions, Context context);
+            @PathParam("nodeId") String nodeId, @HeaderParam("Accept") String accept, RequestOptions requestOptions,
+            Context context);
 
         @Post("/pools/{poolId}/nodes/{nodeId}/enablescheduling")
         @ExpectedResponses({ 200 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Response<Void> enableNodeSchedulingSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("poolId") String poolId,
-            @PathParam("nodeId") String nodeId, RequestOptions requestOptions, Context context);
+            @PathParam("nodeId") String nodeId, @HeaderParam("Accept") String accept, RequestOptions requestOptions,
+            Context context);
 
         @Get("/pools/{poolId}/nodes/{nodeId}/remoteloginsettings")
         @ExpectedResponses({ 200 })
@@ -1277,16 +1313,16 @@ public final class BatchClientImpl {
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Mono<Response<Void>> deleteNodeFile(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("poolId") String poolId,
-            @PathParam("nodeId") String nodeId, @PathParam("filePath") String filePath, RequestOptions requestOptions,
-            Context context);
+            @PathParam("nodeId") String nodeId, @PathParam("filePath") String filePath,
+            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);
 
         @Delete("/pools/{poolId}/nodes/{nodeId}/files/{filePath}")
         @ExpectedResponses({ 200 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Response<Void> deleteNodeFileSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("poolId") String poolId,
-            @PathParam("nodeId") String nodeId, @PathParam("filePath") String filePath, RequestOptions requestOptions,
-            Context context);
+            @PathParam("nodeId") String nodeId, @PathParam("filePath") String filePath,
+            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);
 
         @Get("/pools/{poolId}/nodes/{nodeId}/files/{filePath}")
         @ExpectedResponses({ 200 })
@@ -1309,16 +1345,16 @@ public final class BatchClientImpl {
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Mono<Response<Void>> getNodeFileProperties(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("poolId") String poolId,
-            @PathParam("nodeId") String nodeId, @PathParam("filePath") String filePath, RequestOptions requestOptions,
-            Context context);
+            @PathParam("nodeId") String nodeId, @PathParam("filePath") String filePath,
+            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);
 
         @Head("/pools/{poolId}/nodes/{nodeId}/files/{filePath}")
         @ExpectedResponses({ 200 })
         @UnexpectedResponseExceptionType(BatchErrorException.class)
         Response<Void> getNodeFilePropertiesSync(@HostParam("endpoint") String endpoint,
             @QueryParam("api-version") String apiVersion, @PathParam("poolId") String poolId,
-            @PathParam("nodeId") String nodeId, @PathParam("filePath") String filePath, RequestOptions requestOptions,
-            Context context);
+            @PathParam("nodeId") String nodeId, @PathParam("filePath") String filePath,
+            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);
 
         @Get("/pools/{poolId}/nodes/{nodeId}/files")
         @ExpectedResponses({ 200 })
@@ -1563,7 +1599,7 @@ public final class BatchClientImpl {
 
     /**
      * Lists all of the applications available in the specified Account.
-     * 
+     *
      * This operation returns only Applications and versions that are available for
      * use on Compute Nodes; that is, that can be used in an Package reference. For
      * administrator information about applications and versions that are not yet
@@ -1582,7 +1618,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -1594,7 +1630,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
      * @return the result of listing the applications available in an Account along with {@link PagedResponse} on
@@ -1612,7 +1648,7 @@ public final class BatchClientImpl {
 
     /**
      * Lists all of the applications available in the specified Account.
-     * 
+     *
      * This operation returns only Applications and versions that are available for
      * use on Compute Nodes; that is, that can be used in an Package reference. For
      * administrator information about applications and versions that are not yet
@@ -1631,7 +1667,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -1643,7 +1679,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
      * @return the result of listing the applications available in an Account as paginated response with
@@ -1680,7 +1716,7 @@ public final class BatchClientImpl {
 
     /**
      * Lists all of the applications available in the specified Account.
-     * 
+     *
      * This operation returns only Applications and versions that are available for
      * use on Compute Nodes; that is, that can be used in an Package reference. For
      * administrator information about applications and versions that are not yet
@@ -1699,7 +1735,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -1711,7 +1747,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
      * @return the result of listing the applications available in an Account along with {@link PagedResponse}.
@@ -1727,7 +1763,7 @@ public final class BatchClientImpl {
 
     /**
      * Lists all of the applications available in the specified Account.
-     * 
+     *
      * This operation returns only Applications and versions that are available for
      * use on Compute Nodes; that is, that can be used in an Package reference. For
      * administrator information about applications and versions that are not yet
@@ -1746,7 +1782,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -1758,7 +1794,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
      * @return the result of listing the applications available in an Account as paginated response with
@@ -1795,7 +1831,7 @@ public final class BatchClientImpl {
 
     /**
      * Gets information about the specified Application.
-     * 
+     *
      * This operation returns only Applications and versions that are available for
      * use on Compute Nodes; that is, that can be used in an Package reference. For
      * administrator information about Applications and versions that are not yet
@@ -1811,7 +1847,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -1823,12 +1859,12 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param applicationId The ID of the Application.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
      * @return information about the specified Application.
-     * 
+     *
      * This operation returns only Applications and versions that are available for
      * use on Compute Nodes; that is, that can be used in an Package reference along with {@link Response} on successful
      * completion of {@link Mono}.
@@ -1843,7 +1879,7 @@ public final class BatchClientImpl {
 
     /**
      * Gets information about the specified Application.
-     * 
+     *
      * This operation returns only Applications and versions that are available for
      * use on Compute Nodes; that is, that can be used in an Package reference. For
      * administrator information about Applications and versions that are not yet
@@ -1859,7 +1895,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -1871,12 +1907,12 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param applicationId The ID of the Application.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
      * @return information about the specified Application.
-     * 
+     *
      * This operation returns only Applications and versions that are available for
      * use on Compute Nodes; that is, that can be used in an Package reference along with {@link Response}.
      */
@@ -1890,7 +1926,7 @@ public final class BatchClientImpl {
     /**
      * Lists the usage metrics, aggregated by Pool across individual time intervals,
      * for the specified Account.
-     * 
+     *
      * If you do not specify a $filter clause including a poolId, the response
      * includes all Pools that existed in the Account in the time range of the
      * returned aggregation intervals. If you do not specify a $filter clause
@@ -1921,7 +1957,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -1933,7 +1969,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
      * @return the result of a listing the usage metrics for an Account along with {@link PagedResponse} on successful
@@ -1952,7 +1988,7 @@ public final class BatchClientImpl {
     /**
      * Lists the usage metrics, aggregated by Pool across individual time intervals,
      * for the specified Account.
-     * 
+     *
      * If you do not specify a $filter clause including a poolId, the response
      * includes all Pools that existed in the Account in the time range of the
      * returned aggregation intervals. If you do not specify a $filter clause
@@ -1983,7 +2019,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -1995,7 +2031,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
      * @return the result of a listing the usage metrics for an Account as paginated response with {@link PagedFlux}.
@@ -2032,7 +2068,7 @@ public final class BatchClientImpl {
     /**
      * Lists the usage metrics, aggregated by Pool across individual time intervals,
      * for the specified Account.
-     * 
+     *
      * If you do not specify a $filter clause including a poolId, the response
      * includes all Pools that existed in the Account in the time range of the
      * returned aggregation intervals. If you do not specify a $filter clause
@@ -2063,7 +2099,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -2075,7 +2111,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
      * @return the result of a listing the usage metrics for an Account along with {@link PagedResponse}.
@@ -2092,7 +2128,7 @@ public final class BatchClientImpl {
     /**
      * Lists the usage metrics, aggregated by Pool across individual time intervals,
      * for the specified Account.
-     * 
+     *
      * If you do not specify a $filter clause including a poolId, the response
      * includes all Pools that existed in the Account in the time range of the
      * returned aggregation intervals. If you do not specify a $filter clause
@@ -2123,7 +2159,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -2135,7 +2171,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
      * @return the result of a listing the usage metrics for an Account as paginated response with
@@ -2172,7 +2208,7 @@ public final class BatchClientImpl {
 
     /**
      * Creates a Pool to the specified Account.
-     * 
+     *
      * When naming Pools, avoid including sensitive information such as user names or
      * secret project names. This information may appear in telemetry logs accessible
      * to Microsoft Support engineers.
@@ -2186,7 +2222,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -2465,7 +2501,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param pool The Pool to be created.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -2474,13 +2510,14 @@ public final class BatchClientImpl {
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Mono<Response<Void>> createPoolWithResponseAsync(BinaryData pool, RequestOptions requestOptions) {
         final String contentType = "application/json; odata=minimalmetadata";
+        final String accept = "application/json";
         return FluxUtil.withContext(context -> service.createPool(this.getEndpoint(),
-            this.getServiceVersion().getVersion(), contentType, pool, requestOptions, context));
+            this.getServiceVersion().getVersion(), contentType, accept, pool, requestOptions, context));
     }
 
     /**
      * Creates a Pool to the specified Account.
-     * 
+     *
      * When naming Pools, avoid including sensitive information such as user names or
      * secret project names. This information may appear in telemetry logs accessible
      * to Microsoft Support engineers.
@@ -2494,7 +2531,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -2773,7 +2810,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param pool The Pool to be created.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -2782,8 +2819,9 @@ public final class BatchClientImpl {
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Response<Void> createPoolWithResponse(BinaryData pool, RequestOptions requestOptions) {
         final String contentType = "application/json; odata=minimalmetadata";
-        return service.createPoolSync(this.getEndpoint(), this.getServiceVersion().getVersion(), contentType, pool,
-            requestOptions, Context.NONE);
+        final String accept = "application/json";
+        return service.createPoolSync(this.getEndpoint(), this.getServiceVersion().getVersion(), contentType, accept,
+            pool, requestOptions, Context.NONE);
     }
 
     /**
@@ -2808,7 +2846,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -3156,7 +3194,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
      * @return the result of listing the Pools in an Account along with {@link PagedResponse} on successful completion
@@ -3194,7 +3232,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -3542,7 +3580,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
      * @return the result of listing the Pools in an Account as paginated response with {@link PagedFlux}.
@@ -3598,7 +3636,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -3946,7 +3984,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
      * @return the result of listing the Pools in an Account along with {@link PagedResponse}.
@@ -3982,7 +4020,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -4330,7 +4368,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
      * @return the result of listing the Pools in an Account as paginated response with {@link PagedIterable}.
@@ -4366,7 +4404,7 @@ public final class BatchClientImpl {
 
     /**
      * Deletes a Pool from the specified Account.
-     * 
+     *
      * When you request that a Pool be deleted, the following actions occur: the Pool
      * state is set to deleting; any ongoing resize operation on the Pool are stopped;
      * the Batch service starts resizing the Pool to zero Compute Nodes; any Tasks
@@ -4410,7 +4448,7 @@ public final class BatchClientImpl {
      * service does not match the value specified by the client.</td></tr>
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
-     * 
+     *
      * @param poolId The ID of the Pool to get.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -4418,13 +4456,14 @@ public final class BatchClientImpl {
      */
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Mono<Response<Void>> deletePoolWithResponseAsync(String poolId, RequestOptions requestOptions) {
+        final String accept = "application/json";
         return FluxUtil.withContext(context -> service.deletePool(this.getEndpoint(),
-            this.getServiceVersion().getVersion(), poolId, requestOptions, context));
+            this.getServiceVersion().getVersion(), poolId, accept, requestOptions, context));
     }
 
     /**
      * Deletes a Pool from the specified Account.
-     * 
+     *
      * When you request that a Pool be deleted, the following actions occur: the Pool
      * state is set to deleting; any ongoing resize operation on the Pool are stopped;
      * the Batch service starts resizing the Pool to zero Compute Nodes; any Tasks
@@ -4468,7 +4507,7 @@ public final class BatchClientImpl {
      * service does not match the value specified by the client.</td></tr>
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
-     * 
+     *
      * @param poolId The ID of the Pool to get.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -4476,8 +4515,9 @@ public final class BatchClientImpl {
      */
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Response<Void> deletePoolWithResponse(String poolId, RequestOptions requestOptions) {
-        return service.deletePoolSync(this.getEndpoint(), this.getServiceVersion().getVersion(), poolId, requestOptions,
-            Context.NONE);
+        final String accept = "application/json";
+        return service.deletePoolSync(this.getEndpoint(), this.getServiceVersion().getVersion(), poolId, accept,
+            requestOptions, Context.NONE);
     }
 
     /**
@@ -4514,13 +4554,13 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * boolean
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool to get.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -4528,8 +4568,9 @@ public final class BatchClientImpl {
      */
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Mono<Response<Boolean>> poolExistsWithResponseAsync(String poolId, RequestOptions requestOptions) {
+        final String accept = "application/json";
         return FluxUtil.withContext(context -> service.poolExists(this.getEndpoint(),
-            this.getServiceVersion().getVersion(), poolId, requestOptions, context));
+            this.getServiceVersion().getVersion(), poolId, accept, requestOptions, context));
     }
 
     /**
@@ -4566,13 +4607,13 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * boolean
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool to get.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -4580,8 +4621,9 @@ public final class BatchClientImpl {
      */
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Response<Boolean> poolExistsWithResponse(String poolId, RequestOptions requestOptions) {
-        return service.poolExistsSync(this.getEndpoint(), this.getServiceVersion().getVersion(), poolId, requestOptions,
-            Context.NONE);
+        final String accept = "application/json";
+        return service.poolExistsSync(this.getEndpoint(), this.getServiceVersion().getVersion(), poolId, accept,
+            requestOptions, Context.NONE);
     }
 
     /**
@@ -4622,7 +4664,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -4970,7 +5012,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool to get.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -5022,7 +5064,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -5370,7 +5412,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool to get.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -5385,7 +5427,7 @@ public final class BatchClientImpl {
 
     /**
      * Updates the properties of the specified Pool.
-     * 
+     *
      * This only replaces the Pool properties specified in the request. For example,
      * if the Pool has a StartTask associated with it, and a request does not specify
      * a StartTask element, then the Pool keeps the existing StartTask.
@@ -5421,7 +5463,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -5693,7 +5735,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool to get.
      * @param pool The pool properties to update.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -5704,13 +5746,14 @@ public final class BatchClientImpl {
     public Mono<Response<Void>> updatePoolWithResponseAsync(String poolId, BinaryData pool,
         RequestOptions requestOptions) {
         final String contentType = "application/json; odata=minimalmetadata";
+        final String accept = "application/json";
         return FluxUtil.withContext(context -> service.updatePool(this.getEndpoint(),
-            this.getServiceVersion().getVersion(), contentType, poolId, pool, requestOptions, context));
+            this.getServiceVersion().getVersion(), contentType, poolId, accept, pool, requestOptions, context));
     }
 
     /**
      * Updates the properties of the specified Pool.
-     * 
+     *
      * This only replaces the Pool properties specified in the request. For example,
      * if the Pool has a StartTask associated with it, and a request does not specify
      * a StartTask element, then the Pool keeps the existing StartTask.
@@ -5746,7 +5789,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -6018,7 +6061,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool to get.
      * @param pool The pool properties to update.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -6028,8 +6071,9 @@ public final class BatchClientImpl {
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Response<Void> updatePoolWithResponse(String poolId, BinaryData pool, RequestOptions requestOptions) {
         final String contentType = "application/json; odata=minimalmetadata";
+        final String accept = "application/json";
         return service.updatePoolSync(this.getEndpoint(), this.getServiceVersion().getVersion(), contentType, poolId,
-            pool, requestOptions, Context.NONE);
+            accept, pool, requestOptions, Context.NONE);
     }
 
     /**
@@ -6043,7 +6087,7 @@ public final class BatchClientImpl {
      * instead.".</td></tr>
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
-     * 
+     *
      * @param poolId The ID of the Pool on which to disable automatic scaling.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -6051,8 +6095,9 @@ public final class BatchClientImpl {
      */
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Mono<Response<Void>> disablePoolAutoScaleWithResponseAsync(String poolId, RequestOptions requestOptions) {
+        final String accept = "application/json";
         return FluxUtil.withContext(context -> service.disablePoolAutoScale(this.getEndpoint(),
-            this.getServiceVersion().getVersion(), poolId, requestOptions, context));
+            this.getServiceVersion().getVersion(), poolId, accept, requestOptions, context));
     }
 
     /**
@@ -6066,7 +6111,7 @@ public final class BatchClientImpl {
      * instead.".</td></tr>
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
-     * 
+     *
      * @param poolId The ID of the Pool on which to disable automatic scaling.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -6074,13 +6119,14 @@ public final class BatchClientImpl {
      */
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Response<Void> disablePoolAutoScaleWithResponse(String poolId, RequestOptions requestOptions) {
+        final String accept = "application/json";
         return service.disablePoolAutoScaleSync(this.getEndpoint(), this.getServiceVersion().getVersion(), poolId,
-            requestOptions, Context.NONE);
+            accept, requestOptions, Context.NONE);
     }
 
     /**
      * Enables automatic scaling for a Pool.
-     * 
+     *
      * You cannot enable automatic scaling on a Pool if a resize operation is in
      * progress on the Pool. If automatic scaling of the Pool is currently disabled,
      * you must specify a valid autoscale formula as part of the request. If automatic
@@ -6119,7 +6165,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -6128,7 +6174,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool to get.
      * @param parameters The options to use for enabling automatic scaling.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -6139,13 +6185,14 @@ public final class BatchClientImpl {
     public Mono<Response<Void>> enablePoolAutoScaleWithResponseAsync(String poolId, BinaryData parameters,
         RequestOptions requestOptions) {
         final String contentType = "application/json; odata=minimalmetadata";
+        final String accept = "application/json";
         return FluxUtil.withContext(context -> service.enablePoolAutoScale(this.getEndpoint(),
-            this.getServiceVersion().getVersion(), contentType, poolId, parameters, requestOptions, context));
+            this.getServiceVersion().getVersion(), contentType, poolId, accept, parameters, requestOptions, context));
     }
 
     /**
      * Enables automatic scaling for a Pool.
-     * 
+     *
      * You cannot enable automatic scaling on a Pool if a resize operation is in
      * progress on the Pool. If automatic scaling of the Pool is currently disabled,
      * you must specify a valid autoscale formula as part of the request. If automatic
@@ -6184,7 +6231,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -6193,7 +6240,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool to get.
      * @param parameters The options to use for enabling automatic scaling.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -6204,13 +6251,14 @@ public final class BatchClientImpl {
     public Response<Void> enablePoolAutoScaleWithResponse(String poolId, BinaryData parameters,
         RequestOptions requestOptions) {
         final String contentType = "application/json; odata=minimalmetadata";
+        final String accept = "application/json";
         return service.enablePoolAutoScaleSync(this.getEndpoint(), this.getServiceVersion().getVersion(), contentType,
-            poolId, parameters, requestOptions, Context.NONE);
+            poolId, accept, parameters, requestOptions, Context.NONE);
     }
 
     /**
      * Gets the result of evaluating an automatic scaling formula on the Pool.
-     * 
+     *
      * This API is primarily for validating an autoscale formula, as it simply returns
      * the result without applying the formula to the Pool. The Pool must have auto
      * scaling enabled in order to evaluate a formula.
@@ -6224,7 +6272,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -6232,9 +6280,9 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -6253,13 +6301,13 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool on which to evaluate the automatic scaling formula.
      * @param parameters The options to use for evaluating the automatic scaling formula.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
      * @return the result of evaluating an automatic scaling formula on the Pool.
-     * 
+     *
      * This API is primarily for validating an autoscale formula, as it simply returns
      * the result without applying the formula to the Pool along with {@link Response} on successful completion of
      * {@link Mono}.
@@ -6275,7 +6323,7 @@ public final class BatchClientImpl {
 
     /**
      * Gets the result of evaluating an automatic scaling formula on the Pool.
-     * 
+     *
      * This API is primarily for validating an autoscale formula, as it simply returns
      * the result without applying the formula to the Pool. The Pool must have auto
      * scaling enabled in order to evaluate a formula.
@@ -6289,7 +6337,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -6297,9 +6345,9 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -6318,13 +6366,13 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool on which to evaluate the automatic scaling formula.
      * @param parameters The options to use for evaluating the automatic scaling formula.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
      * @return the result of evaluating an automatic scaling formula on the Pool.
-     * 
+     *
      * This API is primarily for validating an autoscale formula, as it simply returns
      * the result without applying the formula to the Pool along with {@link Response}.
      */
@@ -6339,7 +6387,7 @@ public final class BatchClientImpl {
 
     /**
      * Changes the number of Compute Nodes that are assigned to a Pool.
-     * 
+     *
      * You can only resize a Pool when its allocation state is steady. If the Pool is
      * already resizing, the request fails with status code 409. When you resize a
      * Pool, the Pool's allocation state changes from steady to resizing. You cannot
@@ -6379,7 +6427,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -6390,7 +6438,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool to get.
      * @param parameters The options to use for resizing the pool.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -6401,13 +6449,14 @@ public final class BatchClientImpl {
     public Mono<Response<Void>> resizePoolWithResponseAsync(String poolId, BinaryData parameters,
         RequestOptions requestOptions) {
         final String contentType = "application/json; odata=minimalmetadata";
+        final String accept = "application/json";
         return FluxUtil.withContext(context -> service.resizePool(this.getEndpoint(),
-            this.getServiceVersion().getVersion(), contentType, poolId, parameters, requestOptions, context));
+            this.getServiceVersion().getVersion(), contentType, poolId, accept, parameters, requestOptions, context));
     }
 
     /**
      * Changes the number of Compute Nodes that are assigned to a Pool.
-     * 
+     *
      * You can only resize a Pool when its allocation state is steady. If the Pool is
      * already resizing, the request fails with status code 409. When you resize a
      * Pool, the Pool's allocation state changes from steady to resizing. You cannot
@@ -6447,7 +6496,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -6458,7 +6507,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool to get.
      * @param parameters The options to use for resizing the pool.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -6468,13 +6517,14 @@ public final class BatchClientImpl {
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Response<Void> resizePoolWithResponse(String poolId, BinaryData parameters, RequestOptions requestOptions) {
         final String contentType = "application/json; odata=minimalmetadata";
+        final String accept = "application/json";
         return service.resizePoolSync(this.getEndpoint(), this.getServiceVersion().getVersion(), contentType, poolId,
-            parameters, requestOptions, Context.NONE);
+            accept, parameters, requestOptions, Context.NONE);
     }
 
     /**
      * Stops an ongoing resize operation on the Pool.
-     * 
+     *
      * This does not restore the Pool to its previous state before the resize
      * operation: it only stops any further changes being made, and the Pool maintains
      * its current state. After stopping, the Pool stabilizes at the number of Compute
@@ -6513,7 +6563,7 @@ public final class BatchClientImpl {
      * service does not match the value specified by the client.</td></tr>
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
-     * 
+     *
      * @param poolId The ID of the Pool to get.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -6521,13 +6571,14 @@ public final class BatchClientImpl {
      */
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Mono<Response<Void>> stopPoolResizeWithResponseAsync(String poolId, RequestOptions requestOptions) {
+        final String accept = "application/json";
         return FluxUtil.withContext(context -> service.stopPoolResize(this.getEndpoint(),
-            this.getServiceVersion().getVersion(), poolId, requestOptions, context));
+            this.getServiceVersion().getVersion(), poolId, accept, requestOptions, context));
     }
 
     /**
      * Stops an ongoing resize operation on the Pool.
-     * 
+     *
      * This does not restore the Pool to its previous state before the resize
      * operation: it only stops any further changes being made, and the Pool maintains
      * its current state. After stopping, the Pool stabilizes at the number of Compute
@@ -6566,7 +6617,7 @@ public final class BatchClientImpl {
      * service does not match the value specified by the client.</td></tr>
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
-     * 
+     *
      * @param poolId The ID of the Pool to get.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -6574,13 +6625,14 @@ public final class BatchClientImpl {
      */
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Response<Void> stopPoolResizeWithResponse(String poolId, RequestOptions requestOptions) {
-        return service.stopPoolResizeSync(this.getEndpoint(), this.getServiceVersion().getVersion(), poolId,
+        final String accept = "application/json";
+        return service.stopPoolResizeSync(this.getEndpoint(), this.getServiceVersion().getVersion(), poolId, accept,
             requestOptions, Context.NONE);
     }
 
     /**
      * Updates the properties of the specified Pool.
-     * 
+     *
      * This fully replaces all the updatable properties of the Pool. For example, if
      * the Pool has a StartTask associated with it and if StartTask is not specified
      * with this request, then the Batch service will remove the existing StartTask.
@@ -6594,7 +6646,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -6673,7 +6725,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool to update.
      * @param pool The options to use for replacing properties on the pool.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -6684,13 +6736,14 @@ public final class BatchClientImpl {
     public Mono<Response<Void>> replacePoolPropertiesWithResponseAsync(String poolId, BinaryData pool,
         RequestOptions requestOptions) {
         final String contentType = "application/json; odata=minimalmetadata";
+        final String accept = "application/json";
         return FluxUtil.withContext(context -> service.replacePoolProperties(this.getEndpoint(),
-            this.getServiceVersion().getVersion(), contentType, poolId, pool, requestOptions, context));
+            this.getServiceVersion().getVersion(), contentType, poolId, accept, pool, requestOptions, context));
     }
 
     /**
      * Updates the properties of the specified Pool.
-     * 
+     *
      * This fully replaces all the updatable properties of the Pool. For example, if
      * the Pool has a StartTask associated with it and if StartTask is not specified
      * with this request, then the Batch service will remove the existing StartTask.
@@ -6704,7 +6757,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -6783,7 +6836,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool to update.
      * @param pool The options to use for replacing properties on the pool.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -6794,13 +6847,14 @@ public final class BatchClientImpl {
     public Response<Void> replacePoolPropertiesWithResponse(String poolId, BinaryData pool,
         RequestOptions requestOptions) {
         final String contentType = "application/json; odata=minimalmetadata";
+        final String accept = "application/json";
         return service.replacePoolPropertiesSync(this.getEndpoint(), this.getServiceVersion().getVersion(), contentType,
-            poolId, pool, requestOptions, Context.NONE);
+            poolId, accept, pool, requestOptions, Context.NONE);
     }
 
     /**
      * Removes Compute Nodes from the specified Pool.
-     * 
+     *
      * This operation can only run when the allocation state of the Pool is steady.
      * When this operation runs, the allocation state changes from steady to resizing.
      * Each request may remove up to 100 nodes.
@@ -6836,7 +6890,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -6848,7 +6902,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool to get.
      * @param parameters The options to use for removing the node.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -6859,13 +6913,14 @@ public final class BatchClientImpl {
     public Mono<Response<Void>> removeNodesWithResponseAsync(String poolId, BinaryData parameters,
         RequestOptions requestOptions) {
         final String contentType = "application/json; odata=minimalmetadata";
+        final String accept = "application/json";
         return FluxUtil.withContext(context -> service.removeNodes(this.getEndpoint(),
-            this.getServiceVersion().getVersion(), contentType, poolId, parameters, requestOptions, context));
+            this.getServiceVersion().getVersion(), contentType, poolId, accept, parameters, requestOptions, context));
     }
 
     /**
      * Removes Compute Nodes from the specified Pool.
-     * 
+     *
      * This operation can only run when the allocation state of the Pool is steady.
      * When this operation runs, the allocation state changes from steady to resizing.
      * Each request may remove up to 100 nodes.
@@ -6901,7 +6956,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -6913,7 +6968,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool to get.
      * @param parameters The options to use for removing the node.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -6923,8 +6978,9 @@ public final class BatchClientImpl {
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Response<Void> removeNodesWithResponse(String poolId, BinaryData parameters, RequestOptions requestOptions) {
         final String contentType = "application/json; odata=minimalmetadata";
+        final String accept = "application/json";
         return service.removeNodesSync(this.getEndpoint(), this.getServiceVersion().getVersion(), contentType, poolId,
-            parameters, requestOptions, Context.NONE);
+            accept, parameters, requestOptions, Context.NONE);
     }
 
     /**
@@ -6945,7 +7001,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -6969,7 +7025,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
      * @return the result of listing the supported Virtual Machine Images along with {@link PagedResponse} on successful
@@ -7003,7 +7059,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -7027,7 +7083,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
      * @return the result of listing the supported Virtual Machine Images as paginated response with {@link PagedFlux}.
@@ -7079,7 +7135,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -7103,7 +7159,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
      * @return the result of listing the supported Virtual Machine Images along with {@link PagedResponse}.
@@ -7135,7 +7191,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -7159,7 +7215,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
      * @return the result of listing the supported Virtual Machine Images as paginated response with
@@ -7214,7 +7270,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -7242,7 +7298,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
      * @return the number of Compute Nodes in each state, grouped by Pool along with {@link PagedResponse} on successful
@@ -7278,7 +7334,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -7306,7 +7362,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
      * @return the number of Compute Nodes in each state, grouped by Pool as paginated response with {@link PagedFlux}.
@@ -7360,7 +7416,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -7388,7 +7444,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
      * @return the number of Compute Nodes in each state, grouped by Pool along with {@link PagedResponse}.
@@ -7422,7 +7478,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -7450,7 +7506,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
      * @return the number of Compute Nodes in each state, grouped by Pool as paginated response with
@@ -7487,7 +7543,7 @@ public final class BatchClientImpl {
 
     /**
      * Deletes a Job.
-     * 
+     *
      * Deleting a Job also deletes all Tasks that are part of that Job, and all Job
      * statistics. This also overrides the retention period for Task data; that is, if
      * the Job contains Tasks which are still retained on Compute Nodes, the Batch
@@ -7529,7 +7585,7 @@ public final class BatchClientImpl {
      * service does not match the value specified by the client.</td></tr>
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
-     * 
+     *
      * @param jobId The ID of the Job to delete.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -7537,13 +7593,14 @@ public final class BatchClientImpl {
      */
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Mono<Response<Void>> deleteJobWithResponseAsync(String jobId, RequestOptions requestOptions) {
+        final String accept = "application/json";
         return FluxUtil.withContext(context -> service.deleteJob(this.getEndpoint(),
-            this.getServiceVersion().getVersion(), jobId, requestOptions, context));
+            this.getServiceVersion().getVersion(), jobId, accept, requestOptions, context));
     }
 
     /**
      * Deletes a Job.
-     * 
+     *
      * Deleting a Job also deletes all Tasks that are part of that Job, and all Job
      * statistics. This also overrides the retention period for Task data; that is, if
      * the Job contains Tasks which are still retained on Compute Nodes, the Batch
@@ -7585,7 +7642,7 @@ public final class BatchClientImpl {
      * service does not match the value specified by the client.</td></tr>
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
-     * 
+     *
      * @param jobId The ID of the Job to delete.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -7593,8 +7650,9 @@ public final class BatchClientImpl {
      */
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Response<Void> deleteJobWithResponse(String jobId, RequestOptions requestOptions) {
-        return service.deleteJobSync(this.getEndpoint(), this.getServiceVersion().getVersion(), jobId, requestOptions,
-            Context.NONE);
+        final String accept = "application/json";
+        return service.deleteJobSync(this.getEndpoint(), this.getServiceVersion().getVersion(), jobId, accept,
+            requestOptions, Context.NONE);
     }
 
     /**
@@ -7635,7 +7693,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -8064,7 +8122,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobId The ID of the Job.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -8115,7 +8173,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -8544,7 +8602,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobId The ID of the Job.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -8559,7 +8617,7 @@ public final class BatchClientImpl {
 
     /**
      * Updates the properties of the specified Job.
-     * 
+     *
      * This replaces only the Job properties specified in the request. For example, if
      * the Job has constraints, and a request does not specify the constraints
      * element, then the Job keeps the existing constraints.
@@ -8595,7 +8653,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -8896,7 +8954,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobId The ID of the Job whose properties you want to update.
      * @param job The options to use for updating the Job.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -8907,13 +8965,14 @@ public final class BatchClientImpl {
     public Mono<Response<Void>> updateJobWithResponseAsync(String jobId, BinaryData job,
         RequestOptions requestOptions) {
         final String contentType = "application/json; odata=minimalmetadata";
+        final String accept = "application/json";
         return FluxUtil.withContext(context -> service.updateJob(this.getEndpoint(),
-            this.getServiceVersion().getVersion(), contentType, jobId, job, requestOptions, context));
+            this.getServiceVersion().getVersion(), contentType, jobId, accept, job, requestOptions, context));
     }
 
     /**
      * Updates the properties of the specified Job.
-     * 
+     *
      * This replaces only the Job properties specified in the request. For example, if
      * the Job has constraints, and a request does not specify the constraints
      * element, then the Job keeps the existing constraints.
@@ -8949,7 +9008,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -9250,7 +9309,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobId The ID of the Job whose properties you want to update.
      * @param job The options to use for updating the Job.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -9260,13 +9319,14 @@ public final class BatchClientImpl {
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Response<Void> updateJobWithResponse(String jobId, BinaryData job, RequestOptions requestOptions) {
         final String contentType = "application/json; odata=minimalmetadata";
-        return service.updateJobSync(this.getEndpoint(), this.getServiceVersion().getVersion(), contentType, jobId, job,
-            requestOptions, Context.NONE);
+        final String accept = "application/json";
+        return service.updateJobSync(this.getEndpoint(), this.getServiceVersion().getVersion(), contentType, jobId,
+            accept, job, requestOptions, Context.NONE);
     }
 
     /**
      * Updates the properties of the specified Job.
-     * 
+     *
      * This fully replaces all the updatable properties of the Job. For example, if
      * the Job has constraints associated with it and if constraints is not specified
      * with this request, then the Batch service will remove the existing constraints.
@@ -9302,7 +9362,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -9731,7 +9791,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobId The ID of the Job whose properties you want to update.
      * @param job A job with updated properties.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -9742,13 +9802,14 @@ public final class BatchClientImpl {
     public Mono<Response<Void>> replaceJobWithResponseAsync(String jobId, BinaryData job,
         RequestOptions requestOptions) {
         final String contentType = "application/json; odata=minimalmetadata";
+        final String accept = "application/json";
         return FluxUtil.withContext(context -> service.replaceJob(this.getEndpoint(),
-            this.getServiceVersion().getVersion(), contentType, jobId, job, requestOptions, context));
+            this.getServiceVersion().getVersion(), contentType, jobId, accept, job, requestOptions, context));
     }
 
     /**
      * Updates the properties of the specified Job.
-     * 
+     *
      * This fully replaces all the updatable properties of the Job. For example, if
      * the Job has constraints associated with it and if constraints is not specified
      * with this request, then the Batch service will remove the existing constraints.
@@ -9784,7 +9845,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -10213,7 +10274,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobId The ID of the Job whose properties you want to update.
      * @param job A job with updated properties.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -10223,13 +10284,14 @@ public final class BatchClientImpl {
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Response<Void> replaceJobWithResponse(String jobId, BinaryData job, RequestOptions requestOptions) {
         final String contentType = "application/json; odata=minimalmetadata";
+        final String accept = "application/json";
         return service.replaceJobSync(this.getEndpoint(), this.getServiceVersion().getVersion(), contentType, jobId,
-            job, requestOptions, Context.NONE);
+            accept, job, requestOptions, Context.NONE);
     }
 
     /**
      * Disables the specified Job, preventing new Tasks from running.
-     * 
+     *
      * The Batch Service immediately moves the Job to the disabling state. Batch then
      * uses the disableTasks parameter to determine what to do with the currently
      * running Tasks of the Job. The Job remains in the disabling state until the
@@ -10270,7 +10332,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -10278,7 +10340,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobId The ID of the Job to disable.
      * @param parameters The options to use for disabling the Job.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -10289,13 +10351,14 @@ public final class BatchClientImpl {
     public Mono<Response<Void>> disableJobWithResponseAsync(String jobId, BinaryData parameters,
         RequestOptions requestOptions) {
         final String contentType = "application/json; odata=minimalmetadata";
+        final String accept = "application/json";
         return FluxUtil.withContext(context -> service.disableJob(this.getEndpoint(),
-            this.getServiceVersion().getVersion(), contentType, jobId, parameters, requestOptions, context));
+            this.getServiceVersion().getVersion(), contentType, jobId, accept, parameters, requestOptions, context));
     }
 
     /**
      * Disables the specified Job, preventing new Tasks from running.
-     * 
+     *
      * The Batch Service immediately moves the Job to the disabling state. Batch then
      * uses the disableTasks parameter to determine what to do with the currently
      * running Tasks of the Job. The Job remains in the disabling state until the
@@ -10336,7 +10399,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -10344,7 +10407,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobId The ID of the Job to disable.
      * @param parameters The options to use for disabling the Job.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -10354,13 +10417,14 @@ public final class BatchClientImpl {
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Response<Void> disableJobWithResponse(String jobId, BinaryData parameters, RequestOptions requestOptions) {
         final String contentType = "application/json; odata=minimalmetadata";
+        final String accept = "application/json";
         return service.disableJobSync(this.getEndpoint(), this.getServiceVersion().getVersion(), contentType, jobId,
-            parameters, requestOptions, Context.NONE);
+            accept, parameters, requestOptions, Context.NONE);
     }
 
     /**
      * Enables the specified Job, allowing new Tasks to run.
-     * 
+     *
      * When you call this API, the Batch service sets a disabled Job to the enabling
      * state. After the this operation is completed, the Job moves to the active
      * state, and scheduling of new Tasks under the Job resumes. The Batch service
@@ -10398,7 +10462,7 @@ public final class BatchClientImpl {
      * service does not match the value specified by the client.</td></tr>
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
-     * 
+     *
      * @param jobId The ID of the Job to enable.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -10406,13 +10470,14 @@ public final class BatchClientImpl {
      */
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Mono<Response<Void>> enableJobWithResponseAsync(String jobId, RequestOptions requestOptions) {
+        final String accept = "application/json";
         return FluxUtil.withContext(context -> service.enableJob(this.getEndpoint(),
-            this.getServiceVersion().getVersion(), jobId, requestOptions, context));
+            this.getServiceVersion().getVersion(), jobId, accept, requestOptions, context));
     }
 
     /**
      * Enables the specified Job, allowing new Tasks to run.
-     * 
+     *
      * When you call this API, the Batch service sets a disabled Job to the enabling
      * state. After the this operation is completed, the Job moves to the active
      * state, and scheduling of new Tasks under the Job resumes. The Batch service
@@ -10450,7 +10515,7 @@ public final class BatchClientImpl {
      * service does not match the value specified by the client.</td></tr>
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
-     * 
+     *
      * @param jobId The ID of the Job to enable.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -10458,13 +10523,14 @@ public final class BatchClientImpl {
      */
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Response<Void> enableJobWithResponse(String jobId, RequestOptions requestOptions) {
-        return service.enableJobSync(this.getEndpoint(), this.getServiceVersion().getVersion(), jobId, requestOptions,
-            Context.NONE);
+        final String accept = "application/json";
+        return service.enableJobSync(this.getEndpoint(), this.getServiceVersion().getVersion(), jobId, accept,
+            requestOptions, Context.NONE);
     }
 
     /**
      * Terminates the specified Job, marking it as completed.
-     * 
+     *
      * When a Terminate Job request is received, the Batch service sets the Job to the
      * terminating state. The Batch service then terminates any running Tasks
      * associated with the Job and runs any required Job release Tasks. Then the Job
@@ -10507,7 +10573,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -10515,7 +10581,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobId The ID of the Job to terminate.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -10523,6 +10589,7 @@ public final class BatchClientImpl {
      */
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Mono<Response<Void>> terminateJobWithResponseAsync(String jobId, RequestOptions requestOptions) {
+        final String accept = "application/json";
         RequestOptions requestOptionsLocal = requestOptions == null ? new RequestOptions() : requestOptions;
         requestOptionsLocal.addRequestCallback(requestLocal -> {
             if (requestLocal.getBody() != null && requestLocal.getHeaders().get(HttpHeaderName.CONTENT_TYPE) == null) {
@@ -10530,12 +10597,12 @@ public final class BatchClientImpl {
             }
         });
         return FluxUtil.withContext(context -> service.terminateJob(this.getEndpoint(),
-            this.getServiceVersion().getVersion(), jobId, requestOptionsLocal, context));
+            this.getServiceVersion().getVersion(), jobId, accept, requestOptionsLocal, context));
     }
 
     /**
      * Terminates the specified Job, marking it as completed.
-     * 
+     *
      * When a Terminate Job request is received, the Batch service sets the Job to the
      * terminating state. The Batch service then terminates any running Tasks
      * associated with the Job and runs any required Job release Tasks. Then the Job
@@ -10578,7 +10645,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -10586,7 +10653,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobId The ID of the Job to terminate.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -10594,19 +10661,20 @@ public final class BatchClientImpl {
      */
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Response<Void> terminateJobWithResponse(String jobId, RequestOptions requestOptions) {
+        final String accept = "application/json";
         RequestOptions requestOptionsLocal = requestOptions == null ? new RequestOptions() : requestOptions;
         requestOptionsLocal.addRequestCallback(requestLocal -> {
             if (requestLocal.getBody() != null && requestLocal.getHeaders().get(HttpHeaderName.CONTENT_TYPE) == null) {
                 requestLocal.getHeaders().set(HttpHeaderName.CONTENT_TYPE, "application/json; odata=minimalmetadata");
             }
         });
-        return service.terminateJobSync(this.getEndpoint(), this.getServiceVersion().getVersion(), jobId,
+        return service.terminateJobSync(this.getEndpoint(), this.getServiceVersion().getVersion(), jobId, accept,
             requestOptionsLocal, Context.NONE);
     }
 
     /**
      * Creates a Job to the specified Account.
-     * 
+     *
      * The Batch service supports two ways to control the work done as part of a Job.
      * In the first approach, the user specifies a Job Manager Task. The Batch service
      * launches this Task when it is ready to start the Job. The Job Manager Task
@@ -10626,7 +10694,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -11014,7 +11082,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param job The Job to be created.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -11023,13 +11091,14 @@ public final class BatchClientImpl {
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Mono<Response<Void>> createJobWithResponseAsync(BinaryData job, RequestOptions requestOptions) {
         final String contentType = "application/json; odata=minimalmetadata";
+        final String accept = "application/json";
         return FluxUtil.withContext(context -> service.createJob(this.getEndpoint(),
-            this.getServiceVersion().getVersion(), contentType, job, requestOptions, context));
+            this.getServiceVersion().getVersion(), contentType, accept, job, requestOptions, context));
     }
 
     /**
      * Creates a Job to the specified Account.
-     * 
+     *
      * The Batch service supports two ways to control the work done as part of a Job.
      * In the first approach, the user specifies a Job Manager Task. The Batch service
      * launches this Task when it is ready to start the Job. The Job Manager Task
@@ -11049,7 +11118,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -11437,7 +11506,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param job The Job to be created.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -11446,8 +11515,9 @@ public final class BatchClientImpl {
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Response<Void> createJobWithResponse(BinaryData job, RequestOptions requestOptions) {
         final String contentType = "application/json; odata=minimalmetadata";
-        return service.createJobSync(this.getEndpoint(), this.getServiceVersion().getVersion(), contentType, job,
-            requestOptions, Context.NONE);
+        final String accept = "application/json";
+        return service.createJobSync(this.getEndpoint(), this.getServiceVersion().getVersion(), contentType, accept,
+            job, requestOptions, Context.NONE);
     }
 
     /**
@@ -11472,7 +11542,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -11901,7 +11971,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
      * @return the result of listing the Jobs in an Account along with {@link PagedResponse} on successful completion of
@@ -11939,7 +12009,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -12368,7 +12438,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
      * @return the result of listing the Jobs in an Account as paginated response with {@link PagedFlux}.
@@ -12424,7 +12494,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -12853,7 +12923,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
      * @return the result of listing the Jobs in an Account along with {@link PagedResponse}.
@@ -12889,7 +12959,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -13318,7 +13388,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
      * @return the result of listing the Jobs in an Account as paginated response with {@link PagedIterable}.
@@ -13374,7 +13444,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -13803,7 +13873,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobScheduleId The ID of the Job Schedule from which you want to get a list of Jobs.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -13843,7 +13913,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -14272,7 +14342,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobScheduleId The ID of the Job Schedule from which you want to get a list of Jobs.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -14329,7 +14399,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -14758,7 +14828,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobScheduleId The ID of the Job Schedule from which you want to get a list of Jobs.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -14796,7 +14866,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -15225,7 +15295,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobScheduleId The ID of the Job Schedule from which you want to get a list of Jobs.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -15263,7 +15333,7 @@ public final class BatchClientImpl {
     /**
      * Lists the execution status of the Job Preparation and Job Release Task for the
      * specified Job across the Compute Nodes where the Job has run.
-     * 
+     *
      * This API returns the Job Preparation and Job Release Task status on all Compute
      * Nodes that have run the Job Preparation or Job Release Task. This includes
      * Compute Nodes which have since been removed from the Pool. If this API is
@@ -15288,7 +15358,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -15336,7 +15406,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobId The ID of the Job.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -15357,7 +15427,7 @@ public final class BatchClientImpl {
     /**
      * Lists the execution status of the Job Preparation and Job Release Task for the
      * specified Job across the Compute Nodes where the Job has run.
-     * 
+     *
      * This API returns the Job Preparation and Job Release Task status on all Compute
      * Nodes that have run the Job Preparation or Job Release Task. This includes
      * Compute Nodes which have since been removed from the Pool. If this API is
@@ -15382,7 +15452,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -15430,7 +15500,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobId The ID of the Job.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -15470,7 +15540,7 @@ public final class BatchClientImpl {
     /**
      * Lists the execution status of the Job Preparation and Job Release Task for the
      * specified Job across the Compute Nodes where the Job has run.
-     * 
+     *
      * This API returns the Job Preparation and Job Release Task status on all Compute
      * Nodes that have run the Job Preparation or Job Release Task. This includes
      * Compute Nodes which have since been removed from the Pool. If this API is
@@ -15495,7 +15565,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -15543,7 +15613,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobId The ID of the Job.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -15563,7 +15633,7 @@ public final class BatchClientImpl {
     /**
      * Lists the execution status of the Job Preparation and Job Release Task for the
      * specified Job across the Compute Nodes where the Job has run.
-     * 
+     *
      * This API returns the Job Preparation and Job Release Task status on all Compute
      * Nodes that have run the Job Preparation or Job Release Task. This includes
      * Compute Nodes which have since been removed from the Pool. If this API is
@@ -15588,7 +15658,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -15636,7 +15706,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobId The ID of the Job.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -15675,7 +15745,7 @@ public final class BatchClientImpl {
 
     /**
      * Gets the Task counts for the specified Job.
-     * 
+     *
      * Task counts provide a count of the Tasks by active, running or completed Task
      * state, and a count of Tasks which succeeded or failed. Tasks in the preparing
      * state are counted as running. Note that the numbers returned may not always be
@@ -15690,7 +15760,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -15711,12 +15781,12 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobId The ID of the Job.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
      * @return the Task counts for the specified Job.
-     * 
+     *
      * Task counts provide a count of the Tasks by active, running or completed Task
      * state, and a count of Tasks which succeeded or failed along with {@link Response} on successful completion of
      * {@link Mono}.
@@ -15730,7 +15800,7 @@ public final class BatchClientImpl {
 
     /**
      * Gets the Task counts for the specified Job.
-     * 
+     *
      * Task counts provide a count of the Tasks by active, running or completed Task
      * state, and a count of Tasks which succeeded or failed. Tasks in the preparing
      * state are counted as running. Note that the numbers returned may not always be
@@ -15745,7 +15815,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -15766,12 +15836,12 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobId The ID of the Job.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
      * @return the Task counts for the specified Job.
-     * 
+     *
      * Task counts provide a count of the Tasks by active, running or completed Task
      * state, and a count of Tasks which succeeded or failed along with {@link Response}.
      */
@@ -15794,7 +15864,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -15822,7 +15892,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param certificate The Certificate to be created.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -15832,8 +15902,9 @@ public final class BatchClientImpl {
     public Mono<Response<Void>> createCertificateWithResponseAsync(BinaryData certificate,
         RequestOptions requestOptions) {
         final String contentType = "application/json; odata=minimalmetadata";
+        final String accept = "application/json";
         return FluxUtil.withContext(context -> service.createCertificate(this.getEndpoint(),
-            this.getServiceVersion().getVersion(), contentType, certificate, requestOptions, context));
+            this.getServiceVersion().getVersion(), contentType, accept, certificate, requestOptions, context));
     }
 
     /**
@@ -15848,7 +15919,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -15876,7 +15947,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param certificate The Certificate to be created.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -15885,8 +15956,9 @@ public final class BatchClientImpl {
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Response<Void> createCertificateWithResponse(BinaryData certificate, RequestOptions requestOptions) {
         final String contentType = "application/json; odata=minimalmetadata";
+        final String accept = "application/json";
         return service.createCertificateSync(this.getEndpoint(), this.getServiceVersion().getVersion(), contentType,
-            certificate, requestOptions, Context.NONE);
+            accept, certificate, requestOptions, Context.NONE);
     }
 
     /**
@@ -15909,7 +15981,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -15937,7 +16009,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
      * @return the result of listing the Certificates in the Account along with {@link PagedResponse} on successful
@@ -15973,7 +16045,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -16001,7 +16073,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
      * @return the result of listing the Certificates in the Account as paginated response with {@link PagedFlux}.
@@ -16055,7 +16127,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -16083,7 +16155,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
      * @return the result of listing the Certificates in the Account along with {@link PagedResponse}.
@@ -16117,7 +16189,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -16145,7 +16217,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
      * @return the result of listing the Certificates in the Account as paginated response with {@link PagedIterable}.
@@ -16181,7 +16253,7 @@ public final class BatchClientImpl {
 
     /**
      * Cancels a failed deletion of a Certificate from the specified Account.
-     * 
+     *
      * If you try to delete a Certificate that is being used by a Pool or Compute
      * Node, the status of the Certificate changes to deleteFailed. If you decide that
      * you want to continue using the Certificate, you can use this operation to set
@@ -16198,7 +16270,7 @@ public final class BatchClientImpl {
      * instead.".</td></tr>
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
-     * 
+     *
      * @param thumbprintAlgorithm The algorithm used to derive the thumbprint parameter. This must be sha1.
      * @param thumbprint The thumbprint of the Certificate being deleted.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -16208,13 +16280,14 @@ public final class BatchClientImpl {
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Mono<Response<Void>> cancelCertificateDeletionWithResponseAsync(String thumbprintAlgorithm,
         String thumbprint, RequestOptions requestOptions) {
+        final String accept = "application/json";
         return FluxUtil.withContext(context -> service.cancelCertificateDeletion(this.getEndpoint(),
-            this.getServiceVersion().getVersion(), thumbprintAlgorithm, thumbprint, requestOptions, context));
+            this.getServiceVersion().getVersion(), thumbprintAlgorithm, thumbprint, accept, requestOptions, context));
     }
 
     /**
      * Cancels a failed deletion of a Certificate from the specified Account.
-     * 
+     *
      * If you try to delete a Certificate that is being used by a Pool or Compute
      * Node, the status of the Certificate changes to deleteFailed. If you decide that
      * you want to continue using the Certificate, you can use this operation to set
@@ -16231,7 +16304,7 @@ public final class BatchClientImpl {
      * instead.".</td></tr>
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
-     * 
+     *
      * @param thumbprintAlgorithm The algorithm used to derive the thumbprint parameter. This must be sha1.
      * @param thumbprint The thumbprint of the Certificate being deleted.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -16241,13 +16314,14 @@ public final class BatchClientImpl {
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Response<Void> cancelCertificateDeletionWithResponse(String thumbprintAlgorithm, String thumbprint,
         RequestOptions requestOptions) {
+        final String accept = "application/json";
         return service.cancelCertificateDeletionSync(this.getEndpoint(), this.getServiceVersion().getVersion(),
-            thumbprintAlgorithm, thumbprint, requestOptions, Context.NONE);
+            thumbprintAlgorithm, thumbprint, accept, requestOptions, Context.NONE);
     }
 
     /**
      * Deletes a Certificate from the specified Account.
-     * 
+     *
      * You cannot delete a Certificate if a resource (Pool or Compute Node) is using
      * it. Before you can delete a Certificate, you must therefore make sure that the
      * Certificate is not associated with any existing Pools, the Certificate is not
@@ -16266,7 +16340,7 @@ public final class BatchClientImpl {
      * instead.".</td></tr>
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
-     * 
+     *
      * @param thumbprintAlgorithm The algorithm used to derive the thumbprint parameter. This must be sha1.
      * @param thumbprint The thumbprint of the Certificate to be deleted.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -16276,13 +16350,14 @@ public final class BatchClientImpl {
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Mono<Response<Void>> deleteCertificateWithResponseAsync(String thumbprintAlgorithm, String thumbprint,
         RequestOptions requestOptions) {
+        final String accept = "application/json";
         return FluxUtil.withContext(context -> service.deleteCertificate(this.getEndpoint(),
-            this.getServiceVersion().getVersion(), thumbprintAlgorithm, thumbprint, requestOptions, context));
+            this.getServiceVersion().getVersion(), thumbprintAlgorithm, thumbprint, accept, requestOptions, context));
     }
 
     /**
      * Deletes a Certificate from the specified Account.
-     * 
+     *
      * You cannot delete a Certificate if a resource (Pool or Compute Node) is using
      * it. Before you can delete a Certificate, you must therefore make sure that the
      * Certificate is not associated with any existing Pools, the Certificate is not
@@ -16301,7 +16376,7 @@ public final class BatchClientImpl {
      * instead.".</td></tr>
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
-     * 
+     *
      * @param thumbprintAlgorithm The algorithm used to derive the thumbprint parameter. This must be sha1.
      * @param thumbprint The thumbprint of the Certificate to be deleted.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -16311,8 +16386,9 @@ public final class BatchClientImpl {
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Response<Void> deleteCertificateWithResponse(String thumbprintAlgorithm, String thumbprint,
         RequestOptions requestOptions) {
+        final String accept = "application/json";
         return service.deleteCertificateSync(this.getEndpoint(), this.getServiceVersion().getVersion(),
-            thumbprintAlgorithm, thumbprint, requestOptions, Context.NONE);
+            thumbprintAlgorithm, thumbprint, accept, requestOptions, Context.NONE);
     }
 
     /**
@@ -16329,7 +16405,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -16357,7 +16433,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param thumbprintAlgorithm The algorithm used to derive the thumbprint parameter. This must be sha1.
      * @param thumbprint The thumbprint of the Certificate to get.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -16387,7 +16463,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -16415,7 +16491,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param thumbprintAlgorithm The algorithm used to derive the thumbprint parameter. This must be sha1.
      * @param thumbprint The thumbprint of the Certificate to get.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -16464,13 +16540,13 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * boolean
      * }
      * </pre>
-     * 
+     *
      * @param jobScheduleId The ID of the Job Schedule which you want to check.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -16479,8 +16555,9 @@ public final class BatchClientImpl {
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Mono<Response<Boolean>> jobScheduleExistsWithResponseAsync(String jobScheduleId,
         RequestOptions requestOptions) {
+        final String accept = "application/json";
         return FluxUtil.withContext(context -> service.jobScheduleExists(this.getEndpoint(),
-            this.getServiceVersion().getVersion(), jobScheduleId, requestOptions, context));
+            this.getServiceVersion().getVersion(), jobScheduleId, accept, requestOptions, context));
     }
 
     /**
@@ -16517,13 +16594,13 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * boolean
      * }
      * </pre>
-     * 
+     *
      * @param jobScheduleId The ID of the Job Schedule which you want to check.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -16531,13 +16608,14 @@ public final class BatchClientImpl {
      */
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Response<Boolean> jobScheduleExistsWithResponse(String jobScheduleId, RequestOptions requestOptions) {
+        final String accept = "application/json";
         return service.jobScheduleExistsSync(this.getEndpoint(), this.getServiceVersion().getVersion(), jobScheduleId,
-            requestOptions, Context.NONE);
+            accept, requestOptions, Context.NONE);
     }
 
     /**
      * Deletes a Job Schedule from the specified Account.
-     * 
+     *
      * When you delete a Job Schedule, this also deletes all Jobs and Tasks under that
      * schedule. When Tasks are deleted, all the files in their working directories on
      * the Compute Nodes are also deleted (the retention period is ignored). The Job
@@ -16576,7 +16654,7 @@ public final class BatchClientImpl {
      * service does not match the value specified by the client.</td></tr>
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
-     * 
+     *
      * @param jobScheduleId The ID of the Job Schedule to delete.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -16585,13 +16663,14 @@ public final class BatchClientImpl {
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Mono<Response<Void>> deleteJobScheduleWithResponseAsync(String jobScheduleId,
         RequestOptions requestOptions) {
+        final String accept = "application/json";
         return FluxUtil.withContext(context -> service.deleteJobSchedule(this.getEndpoint(),
-            this.getServiceVersion().getVersion(), jobScheduleId, requestOptions, context));
+            this.getServiceVersion().getVersion(), jobScheduleId, accept, requestOptions, context));
     }
 
     /**
      * Deletes a Job Schedule from the specified Account.
-     * 
+     *
      * When you delete a Job Schedule, this also deletes all Jobs and Tasks under that
      * schedule. When Tasks are deleted, all the files in their working directories on
      * the Compute Nodes are also deleted (the retention period is ignored). The Job
@@ -16630,7 +16709,7 @@ public final class BatchClientImpl {
      * service does not match the value specified by the client.</td></tr>
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
-     * 
+     *
      * @param jobScheduleId The ID of the Job Schedule to delete.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -16638,8 +16717,9 @@ public final class BatchClientImpl {
      */
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Response<Void> deleteJobScheduleWithResponse(String jobScheduleId, RequestOptions requestOptions) {
+        final String accept = "application/json";
         return service.deleteJobScheduleSync(this.getEndpoint(), this.getServiceVersion().getVersion(), jobScheduleId,
-            requestOptions, Context.NONE);
+            accept, requestOptions, Context.NONE);
     }
 
     /**
@@ -16680,7 +16760,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -17112,7 +17192,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobScheduleId The ID of the Job Schedule to get.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -17165,7 +17245,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -17597,7 +17677,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobScheduleId The ID of the Job Schedule to get.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -17612,7 +17692,7 @@ public final class BatchClientImpl {
 
     /**
      * Updates the properties of the specified Job Schedule.
-     * 
+     *
      * This replaces only the Job Schedule properties specified in the request. For
      * example, if the schedule property is not specified with this request, then the
      * Batch service will keep the existing schedule. Changes to a Job Schedule only
@@ -17650,7 +17730,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -18048,7 +18128,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobScheduleId The ID of the Job Schedule to update.
      * @param jobSchedule The options to use for updating the Job Schedule.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -18059,13 +18139,15 @@ public final class BatchClientImpl {
     public Mono<Response<Void>> updateJobScheduleWithResponseAsync(String jobScheduleId, BinaryData jobSchedule,
         RequestOptions requestOptions) {
         final String contentType = "application/json; odata=minimalmetadata";
-        return FluxUtil.withContext(context -> service.updateJobSchedule(this.getEndpoint(),
-            this.getServiceVersion().getVersion(), contentType, jobScheduleId, jobSchedule, requestOptions, context));
+        final String accept = "application/json";
+        return FluxUtil
+            .withContext(context -> service.updateJobSchedule(this.getEndpoint(), this.getServiceVersion().getVersion(),
+                contentType, jobScheduleId, accept, jobSchedule, requestOptions, context));
     }
 
     /**
      * Updates the properties of the specified Job Schedule.
-     * 
+     *
      * This replaces only the Job Schedule properties specified in the request. For
      * example, if the schedule property is not specified with this request, then the
      * Batch service will keep the existing schedule. Changes to a Job Schedule only
@@ -18103,7 +18185,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -18501,7 +18583,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobScheduleId The ID of the Job Schedule to update.
      * @param jobSchedule The options to use for updating the Job Schedule.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -18512,13 +18594,14 @@ public final class BatchClientImpl {
     public Response<Void> updateJobScheduleWithResponse(String jobScheduleId, BinaryData jobSchedule,
         RequestOptions requestOptions) {
         final String contentType = "application/json; odata=minimalmetadata";
+        final String accept = "application/json";
         return service.updateJobScheduleSync(this.getEndpoint(), this.getServiceVersion().getVersion(), contentType,
-            jobScheduleId, jobSchedule, requestOptions, Context.NONE);
+            jobScheduleId, accept, jobSchedule, requestOptions, Context.NONE);
     }
 
     /**
      * Updates the properties of the specified Job Schedule.
-     * 
+     *
      * This fully replaces all the updatable properties of the Job Schedule. For
      * example, if the schedule property is not specified with this request, then the
      * Batch service will remove the existing schedule. Changes to a Job Schedule only
@@ -18556,7 +18639,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -18988,7 +19071,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobScheduleId The ID of the Job Schedule to update.
      * @param jobSchedule A Job Schedule with updated properties.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -18999,13 +19082,15 @@ public final class BatchClientImpl {
     public Mono<Response<Void>> replaceJobScheduleWithResponseAsync(String jobScheduleId, BinaryData jobSchedule,
         RequestOptions requestOptions) {
         final String contentType = "application/json; odata=minimalmetadata";
-        return FluxUtil.withContext(context -> service.replaceJobSchedule(this.getEndpoint(),
-            this.getServiceVersion().getVersion(), contentType, jobScheduleId, jobSchedule, requestOptions, context));
+        final String accept = "application/json";
+        return FluxUtil.withContext(
+            context -> service.replaceJobSchedule(this.getEndpoint(), this.getServiceVersion().getVersion(),
+                contentType, jobScheduleId, accept, jobSchedule, requestOptions, context));
     }
 
     /**
      * Updates the properties of the specified Job Schedule.
-     * 
+     *
      * This fully replaces all the updatable properties of the Job Schedule. For
      * example, if the schedule property is not specified with this request, then the
      * Batch service will remove the existing schedule. Changes to a Job Schedule only
@@ -19043,7 +19128,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -19475,7 +19560,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobScheduleId The ID of the Job Schedule to update.
      * @param jobSchedule A Job Schedule with updated properties.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -19486,13 +19571,14 @@ public final class BatchClientImpl {
     public Response<Void> replaceJobScheduleWithResponse(String jobScheduleId, BinaryData jobSchedule,
         RequestOptions requestOptions) {
         final String contentType = "application/json; odata=minimalmetadata";
+        final String accept = "application/json";
         return service.replaceJobScheduleSync(this.getEndpoint(), this.getServiceVersion().getVersion(), contentType,
-            jobScheduleId, jobSchedule, requestOptions, Context.NONE);
+            jobScheduleId, accept, jobSchedule, requestOptions, Context.NONE);
     }
 
     /**
      * Disables a Job Schedule.
-     * 
+     *
      * No new Jobs will be created until the Job Schedule is enabled again.
      * <p><strong>Query Parameters</strong></p>
      * <table border="1">
@@ -19525,7 +19611,7 @@ public final class BatchClientImpl {
      * service does not match the value specified by the client.</td></tr>
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
-     * 
+     *
      * @param jobScheduleId The ID of the Job Schedule to disable.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -19534,13 +19620,14 @@ public final class BatchClientImpl {
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Mono<Response<Void>> disableJobScheduleWithResponseAsync(String jobScheduleId,
         RequestOptions requestOptions) {
+        final String accept = "application/json";
         return FluxUtil.withContext(context -> service.disableJobSchedule(this.getEndpoint(),
-            this.getServiceVersion().getVersion(), jobScheduleId, requestOptions, context));
+            this.getServiceVersion().getVersion(), jobScheduleId, accept, requestOptions, context));
     }
 
     /**
      * Disables a Job Schedule.
-     * 
+     *
      * No new Jobs will be created until the Job Schedule is enabled again.
      * <p><strong>Query Parameters</strong></p>
      * <table border="1">
@@ -19573,7 +19660,7 @@ public final class BatchClientImpl {
      * service does not match the value specified by the client.</td></tr>
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
-     * 
+     *
      * @param jobScheduleId The ID of the Job Schedule to disable.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -19581,8 +19668,9 @@ public final class BatchClientImpl {
      */
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Response<Void> disableJobScheduleWithResponse(String jobScheduleId, RequestOptions requestOptions) {
+        final String accept = "application/json";
         return service.disableJobScheduleSync(this.getEndpoint(), this.getServiceVersion().getVersion(), jobScheduleId,
-            requestOptions, Context.NONE);
+            accept, requestOptions, Context.NONE);
     }
 
     /**
@@ -19618,7 +19706,7 @@ public final class BatchClientImpl {
      * service does not match the value specified by the client.</td></tr>
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
-     * 
+     *
      * @param jobScheduleId The ID of the Job Schedule to enable.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -19627,8 +19715,9 @@ public final class BatchClientImpl {
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Mono<Response<Void>> enableJobScheduleWithResponseAsync(String jobScheduleId,
         RequestOptions requestOptions) {
+        final String accept = "application/json";
         return FluxUtil.withContext(context -> service.enableJobSchedule(this.getEndpoint(),
-            this.getServiceVersion().getVersion(), jobScheduleId, requestOptions, context));
+            this.getServiceVersion().getVersion(), jobScheduleId, accept, requestOptions, context));
     }
 
     /**
@@ -19664,7 +19753,7 @@ public final class BatchClientImpl {
      * service does not match the value specified by the client.</td></tr>
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
-     * 
+     *
      * @param jobScheduleId The ID of the Job Schedule to enable.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -19672,8 +19761,9 @@ public final class BatchClientImpl {
      */
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Response<Void> enableJobScheduleWithResponse(String jobScheduleId, RequestOptions requestOptions) {
+        final String accept = "application/json";
         return service.enableJobScheduleSync(this.getEndpoint(), this.getServiceVersion().getVersion(), jobScheduleId,
-            requestOptions, Context.NONE);
+            accept, requestOptions, Context.NONE);
     }
 
     /**
@@ -19711,7 +19801,7 @@ public final class BatchClientImpl {
      * service does not match the value specified by the client.</td></tr>
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
-     * 
+     *
      * @param jobScheduleId The ID of the Job Schedule to terminates.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -19720,8 +19810,9 @@ public final class BatchClientImpl {
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Mono<Response<Void>> terminateJobScheduleWithResponseAsync(String jobScheduleId,
         RequestOptions requestOptions) {
+        final String accept = "application/json";
         return FluxUtil.withContext(context -> service.terminateJobSchedule(this.getEndpoint(),
-            this.getServiceVersion().getVersion(), jobScheduleId, requestOptions, context));
+            this.getServiceVersion().getVersion(), jobScheduleId, accept, requestOptions, context));
     }
 
     /**
@@ -19759,7 +19850,7 @@ public final class BatchClientImpl {
      * service does not match the value specified by the client.</td></tr>
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
-     * 
+     *
      * @param jobScheduleId The ID of the Job Schedule to terminates.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -19767,8 +19858,9 @@ public final class BatchClientImpl {
      */
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Response<Void> terminateJobScheduleWithResponse(String jobScheduleId, RequestOptions requestOptions) {
+        final String accept = "application/json";
         return service.terminateJobScheduleSync(this.getEndpoint(), this.getServiceVersion().getVersion(),
-            jobScheduleId, requestOptions, Context.NONE);
+            jobScheduleId, accept, requestOptions, Context.NONE);
     }
 
     /**
@@ -19783,7 +19875,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -20183,7 +20275,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobSchedule The Job Schedule to be created.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -20193,8 +20285,9 @@ public final class BatchClientImpl {
     public Mono<Response<Void>> createJobScheduleWithResponseAsync(BinaryData jobSchedule,
         RequestOptions requestOptions) {
         final String contentType = "application/json; odata=minimalmetadata";
+        final String accept = "application/json";
         return FluxUtil.withContext(context -> service.createJobSchedule(this.getEndpoint(),
-            this.getServiceVersion().getVersion(), contentType, jobSchedule, requestOptions, context));
+            this.getServiceVersion().getVersion(), contentType, accept, jobSchedule, requestOptions, context));
     }
 
     /**
@@ -20209,7 +20302,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -20609,7 +20702,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobSchedule The Job Schedule to be created.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -20618,8 +20711,9 @@ public final class BatchClientImpl {
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Response<Void> createJobScheduleWithResponse(BinaryData jobSchedule, RequestOptions requestOptions) {
         final String contentType = "application/json; odata=minimalmetadata";
+        final String accept = "application/json";
         return service.createJobScheduleSync(this.getEndpoint(), this.getServiceVersion().getVersion(), contentType,
-            jobSchedule, requestOptions, Context.NONE);
+            accept, jobSchedule, requestOptions, Context.NONE);
     }
 
     /**
@@ -20644,7 +20738,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -21076,7 +21170,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
      * @return the result of listing the Job Schedules in an Account along with {@link PagedResponse} on successful
@@ -21114,7 +21208,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -21546,7 +21640,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
      * @return the result of listing the Job Schedules in an Account as paginated response with {@link PagedFlux}.
@@ -21602,7 +21696,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -22034,7 +22128,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
      * @return the result of listing the Job Schedules in an Account along with {@link PagedResponse}.
@@ -22070,7 +22164,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -22502,7 +22596,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
      * @return the result of listing the Job Schedules in an Account as paginated response with {@link PagedIterable}.
@@ -22538,7 +22632,7 @@ public final class BatchClientImpl {
 
     /**
      * Creates a Task to the specified Job.
-     * 
+     *
      * The maximum lifetime of a Task from addition to completion is 180 days. If a
      * Task has not completed within 180 days of being added it will be terminated by
      * the Batch service and left in whatever state it was in at that time.
@@ -22552,7 +22646,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -22685,7 +22779,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobId The ID of the Job to which the Task is to be created.
      * @param task The Task to be created.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -22696,13 +22790,14 @@ public final class BatchClientImpl {
     public Mono<Response<Void>> createTaskWithResponseAsync(String jobId, BinaryData task,
         RequestOptions requestOptions) {
         final String contentType = "application/json; odata=minimalmetadata";
+        final String accept = "application/json";
         return FluxUtil.withContext(context -> service.createTask(this.getEndpoint(),
-            this.getServiceVersion().getVersion(), contentType, jobId, task, requestOptions, context));
+            this.getServiceVersion().getVersion(), contentType, jobId, accept, task, requestOptions, context));
     }
 
     /**
      * Creates a Task to the specified Job.
-     * 
+     *
      * The maximum lifetime of a Task from addition to completion is 180 days. If a
      * Task has not completed within 180 days of being added it will be terminated by
      * the Batch service and left in whatever state it was in at that time.
@@ -22716,7 +22811,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -22849,7 +22944,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobId The ID of the Job to which the Task is to be created.
      * @param task The Task to be created.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -22859,13 +22954,14 @@ public final class BatchClientImpl {
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Response<Void> createTaskWithResponse(String jobId, BinaryData task, RequestOptions requestOptions) {
         final String contentType = "application/json; odata=minimalmetadata";
+        final String accept = "application/json";
         return service.createTaskSync(this.getEndpoint(), this.getServiceVersion().getVersion(), contentType, jobId,
-            task, requestOptions, Context.NONE);
+            accept, task, requestOptions, Context.NONE);
     }
 
     /**
      * Lists all of the Tasks that are associated with the specified Job.
-     * 
+     *
      * For multi-instance Tasks, information such as affinityId, executionInfo and
      * nodeInfo refer to the primary Task. Use the list subtasks API to retrieve
      * information about subtasks.
@@ -22889,7 +22985,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -23077,7 +23173,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobId The ID of the Job.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -23096,7 +23192,7 @@ public final class BatchClientImpl {
 
     /**
      * Lists all of the Tasks that are associated with the specified Job.
-     * 
+     *
      * For multi-instance Tasks, information such as affinityId, executionInfo and
      * nodeInfo refer to the primary Task. Use the list subtasks API to retrieve
      * information about subtasks.
@@ -23120,7 +23216,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -23308,7 +23404,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobId The ID of the Job.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -23345,7 +23441,7 @@ public final class BatchClientImpl {
 
     /**
      * Lists all of the Tasks that are associated with the specified Job.
-     * 
+     *
      * For multi-instance Tasks, information such as affinityId, executionInfo and
      * nodeInfo refer to the primary Task. Use the list subtasks API to retrieve
      * information about subtasks.
@@ -23369,7 +23465,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -23557,7 +23653,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobId The ID of the Job.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -23574,7 +23670,7 @@ public final class BatchClientImpl {
 
     /**
      * Lists all of the Tasks that are associated with the specified Job.
-     * 
+     *
      * For multi-instance Tasks, information such as affinityId, executionInfo and
      * nodeInfo refer to the primary Task. Use the list subtasks API to retrieve
      * information about subtasks.
@@ -23598,7 +23694,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -23786,7 +23882,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobId The ID of the Job.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -23823,7 +23919,7 @@ public final class BatchClientImpl {
 
     /**
      * Adds a collection of Tasks to the specified Job.
-     * 
+     *
      * Note that each Task must have a unique ID. The Batch service may not return the
      * results for each Task in the same order the Tasks were submitted in this
      * request. If the server times out or the connection is closed during the
@@ -23848,7 +23944,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -23985,9 +24081,9 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -24016,7 +24112,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobId The ID of the Job to which the Task collection is to be added.
      * @param taskCollection The Tasks to be added.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -24036,7 +24132,7 @@ public final class BatchClientImpl {
 
     /**
      * Adds a collection of Tasks to the specified Job.
-     * 
+     *
      * Note that each Task must have a unique ID. The Batch service may not return the
      * results for each Task in the same order the Tasks were submitted in this
      * request. If the server times out or the connection is closed during the
@@ -24061,7 +24157,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -24198,9 +24294,9 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -24229,7 +24325,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobId The ID of the Job to which the Task collection is to be added.
      * @param taskCollection The Tasks to be added.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -24247,7 +24343,7 @@ public final class BatchClientImpl {
 
     /**
      * Deletes a Task from the specified Job.
-     * 
+     *
      * When a Task is deleted, all of the files in its directory on the Compute Node
      * where it ran are also deleted (regardless of the retention time). For
      * multi-instance Tasks, the delete Task operation applies synchronously to the
@@ -24284,7 +24380,7 @@ public final class BatchClientImpl {
      * service does not match the value specified by the client.</td></tr>
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
-     * 
+     *
      * @param jobId The ID of the Job from which to delete the Task.
      * @param taskId The ID of the Task to delete.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -24294,13 +24390,14 @@ public final class BatchClientImpl {
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Mono<Response<Void>> deleteTaskWithResponseAsync(String jobId, String taskId,
         RequestOptions requestOptions) {
+        final String accept = "application/json";
         return FluxUtil.withContext(context -> service.deleteTask(this.getEndpoint(),
-            this.getServiceVersion().getVersion(), jobId, taskId, requestOptions, context));
+            this.getServiceVersion().getVersion(), jobId, taskId, accept, requestOptions, context));
     }
 
     /**
      * Deletes a Task from the specified Job.
-     * 
+     *
      * When a Task is deleted, all of the files in its directory on the Compute Node
      * where it ran are also deleted (regardless of the retention time). For
      * multi-instance Tasks, the delete Task operation applies synchronously to the
@@ -24337,7 +24434,7 @@ public final class BatchClientImpl {
      * service does not match the value specified by the client.</td></tr>
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
-     * 
+     *
      * @param jobId The ID of the Job from which to delete the Task.
      * @param taskId The ID of the Task to delete.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -24346,13 +24443,14 @@ public final class BatchClientImpl {
      */
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Response<Void> deleteTaskWithResponse(String jobId, String taskId, RequestOptions requestOptions) {
-        return service.deleteTaskSync(this.getEndpoint(), this.getServiceVersion().getVersion(), jobId, taskId,
+        final String accept = "application/json";
+        return service.deleteTaskSync(this.getEndpoint(), this.getServiceVersion().getVersion(), jobId, taskId, accept,
             requestOptions, Context.NONE);
     }
 
     /**
      * Gets information about the specified Task.
-     * 
+     *
      * For multi-instance Tasks, information such as affinityId, executionInfo and
      * nodeInfo refer to the primary Task. Use the list subtasks API to retrieve
      * information about subtasks.
@@ -24392,7 +24490,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -24580,13 +24678,13 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobId The ID of the Job that contains the Task.
      * @param taskId The ID of the Task to get information about.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
      * @return information about the specified Task.
-     * 
+     *
      * For multi-instance Tasks, information such as affinityId, executionInfo and
      * nodeInfo refer to the primary Task along with {@link Response} on successful completion of {@link Mono}.
      */
@@ -24600,7 +24698,7 @@ public final class BatchClientImpl {
 
     /**
      * Gets information about the specified Task.
-     * 
+     *
      * For multi-instance Tasks, information such as affinityId, executionInfo and
      * nodeInfo refer to the primary Task. Use the list subtasks API to retrieve
      * information about subtasks.
@@ -24640,7 +24738,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -24828,13 +24926,13 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobId The ID of the Job that contains the Task.
      * @param taskId The ID of the Task to get information about.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
      * @return information about the specified Task.
-     * 
+     *
      * For multi-instance Tasks, information such as affinityId, executionInfo and
      * nodeInfo refer to the primary Task along with {@link Response}.
      */
@@ -24879,7 +24977,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -25067,7 +25165,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobId The ID of the Job containing the Task.
      * @param taskId The ID of the Task to update.
      * @param task The Task to update.
@@ -25079,8 +25177,9 @@ public final class BatchClientImpl {
     public Mono<Response<Void>> replaceTaskWithResponseAsync(String jobId, String taskId, BinaryData task,
         RequestOptions requestOptions) {
         final String contentType = "application/json; odata=minimalmetadata";
+        final String accept = "application/json";
         return FluxUtil.withContext(context -> service.replaceTask(this.getEndpoint(),
-            this.getServiceVersion().getVersion(), contentType, jobId, taskId, task, requestOptions, context));
+            this.getServiceVersion().getVersion(), contentType, jobId, taskId, accept, task, requestOptions, context));
     }
 
     /**
@@ -25117,7 +25216,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -25305,7 +25404,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobId The ID of the Job containing the Task.
      * @param taskId The ID of the Task to update.
      * @param task The Task to update.
@@ -25317,14 +25416,15 @@ public final class BatchClientImpl {
     public Response<Void> replaceTaskWithResponse(String jobId, String taskId, BinaryData task,
         RequestOptions requestOptions) {
         final String contentType = "application/json; odata=minimalmetadata";
+        final String accept = "application/json";
         return service.replaceTaskSync(this.getEndpoint(), this.getServiceVersion().getVersion(), contentType, jobId,
-            taskId, task, requestOptions, Context.NONE);
+            taskId, accept, task, requestOptions, Context.NONE);
     }
 
     /**
      * Lists all of the subtasks that are associated with the specified multi-instance
      * Task.
-     * 
+     *
      * If the Task is not a multi-instance Task then this returns an empty collection.
      * <p><strong>Query Parameters</strong></p>
      * <table border="1">
@@ -25338,7 +25438,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -25378,7 +25478,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobId The ID of the Job.
      * @param taskId The ID of the Task.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -25400,7 +25500,7 @@ public final class BatchClientImpl {
     /**
      * Lists all of the subtasks that are associated with the specified multi-instance
      * Task.
-     * 
+     *
      * If the Task is not a multi-instance Task then this returns an empty collection.
      * <p><strong>Query Parameters</strong></p>
      * <table border="1">
@@ -25414,7 +25514,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -25454,7 +25554,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobId The ID of the Job.
      * @param taskId The ID of the Task.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -25473,7 +25573,7 @@ public final class BatchClientImpl {
     /**
      * Lists all of the subtasks that are associated with the specified multi-instance
      * Task.
-     * 
+     *
      * If the Task is not a multi-instance Task then this returns an empty collection.
      * <p><strong>Query Parameters</strong></p>
      * <table border="1">
@@ -25487,7 +25587,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -25527,7 +25627,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobId The ID of the Job.
      * @param taskId The ID of the Task.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -25547,7 +25647,7 @@ public final class BatchClientImpl {
     /**
      * Lists all of the subtasks that are associated with the specified multi-instance
      * Task.
-     * 
+     *
      * If the Task is not a multi-instance Task then this returns an empty collection.
      * <p><strong>Query Parameters</strong></p>
      * <table border="1">
@@ -25561,7 +25661,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -25601,7 +25701,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobId The ID of the Job.
      * @param taskId The ID of the Task.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -25619,7 +25719,7 @@ public final class BatchClientImpl {
 
     /**
      * Terminates the specified Task.
-     * 
+     *
      * When the Task has been terminated, it moves to the completed state. For
      * multi-instance Tasks, the terminate Task operation applies synchronously to the
      * primary task; subtasks are then terminated asynchronously in the background.
@@ -25654,7 +25754,7 @@ public final class BatchClientImpl {
      * service does not match the value specified by the client.</td></tr>
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
-     * 
+     *
      * @param jobId The ID of the Job containing the Task.
      * @param taskId The ID of the Task to terminate.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -25664,13 +25764,14 @@ public final class BatchClientImpl {
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Mono<Response<Void>> terminateTaskWithResponseAsync(String jobId, String taskId,
         RequestOptions requestOptions) {
+        final String accept = "application/json";
         return FluxUtil.withContext(context -> service.terminateTask(this.getEndpoint(),
-            this.getServiceVersion().getVersion(), jobId, taskId, requestOptions, context));
+            this.getServiceVersion().getVersion(), jobId, taskId, accept, requestOptions, context));
     }
 
     /**
      * Terminates the specified Task.
-     * 
+     *
      * When the Task has been terminated, it moves to the completed state. For
      * multi-instance Tasks, the terminate Task operation applies synchronously to the
      * primary task; subtasks are then terminated asynchronously in the background.
@@ -25705,7 +25806,7 @@ public final class BatchClientImpl {
      * service does not match the value specified by the client.</td></tr>
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
-     * 
+     *
      * @param jobId The ID of the Job containing the Task.
      * @param taskId The ID of the Task to terminate.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -25714,14 +25815,15 @@ public final class BatchClientImpl {
      */
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Response<Void> terminateTaskWithResponse(String jobId, String taskId, RequestOptions requestOptions) {
+        final String accept = "application/json";
         return service.terminateTaskSync(this.getEndpoint(), this.getServiceVersion().getVersion(), jobId, taskId,
-            requestOptions, Context.NONE);
+            accept, requestOptions, Context.NONE);
     }
 
     /**
      * Reactivates a Task, allowing it to run again even if its retry count has been
      * exhausted.
-     * 
+     *
      * Reactivation makes a Task eligible to be retried again up to its maximum retry
      * count. The Task's state is changed to active. As the Task is no longer in the
      * completed state, any previous exit code or failure information is no longer
@@ -25760,7 +25862,7 @@ public final class BatchClientImpl {
      * service does not match the value specified by the client.</td></tr>
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
-     * 
+     *
      * @param jobId The ID of the Job containing the Task.
      * @param taskId The ID of the Task to reactivate.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -25770,14 +25872,15 @@ public final class BatchClientImpl {
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Mono<Response<Void>> reactivateTaskWithResponseAsync(String jobId, String taskId,
         RequestOptions requestOptions) {
+        final String accept = "application/json";
         return FluxUtil.withContext(context -> service.reactivateTask(this.getEndpoint(),
-            this.getServiceVersion().getVersion(), jobId, taskId, requestOptions, context));
+            this.getServiceVersion().getVersion(), jobId, taskId, accept, requestOptions, context));
     }
 
     /**
      * Reactivates a Task, allowing it to run again even if its retry count has been
      * exhausted.
-     * 
+     *
      * Reactivation makes a Task eligible to be retried again up to its maximum retry
      * count. The Task's state is changed to active. As the Task is no longer in the
      * completed state, any previous exit code or failure information is no longer
@@ -25816,7 +25919,7 @@ public final class BatchClientImpl {
      * service does not match the value specified by the client.</td></tr>
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
-     * 
+     *
      * @param jobId The ID of the Job containing the Task.
      * @param taskId The ID of the Task to reactivate.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -25825,8 +25928,9 @@ public final class BatchClientImpl {
      */
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Response<Void> reactivateTaskWithResponse(String jobId, String taskId, RequestOptions requestOptions) {
+        final String accept = "application/json";
         return service.reactivateTaskSync(this.getEndpoint(), this.getServiceVersion().getVersion(), jobId, taskId,
-            requestOptions, Context.NONE);
+            accept, requestOptions, Context.NONE);
     }
 
     /**
@@ -25845,7 +25949,7 @@ public final class BatchClientImpl {
      * then the directory must be empty or deletion will fail.</td></tr>
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
-     * 
+     *
      * @param jobId The ID of the Job that contains the Task.
      * @param taskId The ID of the Task whose file you want to retrieve.
      * @param filePath The path to the Task file that you want to get the content of.
@@ -25856,8 +25960,9 @@ public final class BatchClientImpl {
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Mono<Response<Void>> deleteTaskFileWithResponseAsync(String jobId, String taskId, String filePath,
         RequestOptions requestOptions) {
+        final String accept = "application/json";
         return FluxUtil.withContext(context -> service.deleteTaskFile(this.getEndpoint(),
-            this.getServiceVersion().getVersion(), jobId, taskId, filePath, requestOptions, context));
+            this.getServiceVersion().getVersion(), jobId, taskId, filePath, accept, requestOptions, context));
     }
 
     /**
@@ -25876,7 +25981,7 @@ public final class BatchClientImpl {
      * then the directory must be empty or deletion will fail.</td></tr>
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
-     * 
+     *
      * @param jobId The ID of the Job that contains the Task.
      * @param taskId The ID of the Task whose file you want to retrieve.
      * @param filePath The path to the Task file that you want to get the content of.
@@ -25887,8 +25992,9 @@ public final class BatchClientImpl {
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Response<Void> deleteTaskFileWithResponse(String jobId, String taskId, String filePath,
         RequestOptions requestOptions) {
+        final String accept = "application/json";
         return service.deleteTaskFileSync(this.getEndpoint(), this.getServiceVersion().getVersion(), jobId, taskId,
-            filePath, requestOptions, Context.NONE);
+            filePath, accept, requestOptions, Context.NONE);
     }
 
     /**
@@ -25920,13 +26026,13 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * BinaryData
      * }
      * </pre>
-     * 
+     *
      * @param jobId The ID of the Job that contains the Task.
      * @param taskId The ID of the Task whose file you want to retrieve.
      * @param filePath The path to the Task file that you want to get the content of.
@@ -25971,13 +26077,13 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * BinaryData
      * }
      * </pre>
-     * 
+     *
      * @param jobId The ID of the Job that contains the Task.
      * @param taskId The ID of the Task whose file you want to retrieve.
      * @param filePath The path to the Task file that you want to get the content of.
@@ -26018,7 +26124,7 @@ public final class BatchClientImpl {
      * not been modified since the specified time.</td></tr>
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
-     * 
+     *
      * @param jobId The ID of the Job that contains the Task.
      * @param taskId The ID of the Task whose file you want to retrieve.
      * @param filePath The path to the Task file that you want to get the content of.
@@ -26030,8 +26136,9 @@ public final class BatchClientImpl {
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Mono<Response<Void>> getTaskFilePropertiesWithResponseAsync(String jobId, String taskId, String filePath,
         RequestOptions requestOptions) {
+        final String accept = "application/json";
         return FluxUtil.withContext(context -> service.getTaskFileProperties(this.getEndpoint(),
-            this.getServiceVersion().getVersion(), jobId, taskId, filePath, requestOptions, context));
+            this.getServiceVersion().getVersion(), jobId, taskId, filePath, accept, requestOptions, context));
     }
 
     /**
@@ -26059,7 +26166,7 @@ public final class BatchClientImpl {
      * not been modified since the specified time.</td></tr>
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
-     * 
+     *
      * @param jobId The ID of the Job that contains the Task.
      * @param taskId The ID of the Task whose file you want to retrieve.
      * @param filePath The path to the Task file that you want to get the content of.
@@ -26070,8 +26177,9 @@ public final class BatchClientImpl {
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Response<Void> getTaskFilePropertiesWithResponse(String jobId, String taskId, String filePath,
         RequestOptions requestOptions) {
+        final String accept = "application/json";
         return service.getTaskFilePropertiesSync(this.getEndpoint(), this.getServiceVersion().getVersion(), jobId,
-            taskId, filePath, requestOptions, Context.NONE);
+            taskId, filePath, accept, requestOptions, Context.NONE);
     }
 
     /**
@@ -26095,7 +26203,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -26112,7 +26220,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobId The ID of the Job that contains the Task.
      * @param taskId The ID of the Task whose files you want to list.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -26152,7 +26260,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -26169,7 +26277,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobId The ID of the Job that contains the Task.
      * @param taskId The ID of the Task whose files you want to list.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -26227,7 +26335,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -26244,7 +26352,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobId The ID of the Job that contains the Task.
      * @param taskId The ID of the Task whose files you want to list.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -26283,7 +26391,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -26300,7 +26408,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param jobId The ID of the Job that contains the Task.
      * @param taskId The ID of the Task whose files you want to list.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -26339,7 +26447,7 @@ public final class BatchClientImpl {
 
     /**
      * Adds a user Account to the specified Compute Node.
-     * 
+     *
      * You can add a user Account to a Compute Node only when it is in the idle or
      * running state.
      * <p><strong>Query Parameters</strong></p>
@@ -26352,7 +26460,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -26364,7 +26472,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool that contains the Compute Node.
      * @param nodeId The ID of the machine on which you want to create a user Account.
      * @param user The options to use for creating the user.
@@ -26376,13 +26484,14 @@ public final class BatchClientImpl {
     public Mono<Response<Void>> createNodeUserWithResponseAsync(String poolId, String nodeId, BinaryData user,
         RequestOptions requestOptions) {
         final String contentType = "application/json; odata=minimalmetadata";
+        final String accept = "application/json";
         return FluxUtil.withContext(context -> service.createNodeUser(this.getEndpoint(),
-            this.getServiceVersion().getVersion(), contentType, poolId, nodeId, user, requestOptions, context));
+            this.getServiceVersion().getVersion(), contentType, poolId, nodeId, accept, user, requestOptions, context));
     }
 
     /**
      * Adds a user Account to the specified Compute Node.
-     * 
+     *
      * You can add a user Account to a Compute Node only when it is in the idle or
      * running state.
      * <p><strong>Query Parameters</strong></p>
@@ -26395,7 +26504,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -26407,7 +26516,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool that contains the Compute Node.
      * @param nodeId The ID of the machine on which you want to create a user Account.
      * @param user The options to use for creating the user.
@@ -26419,13 +26528,14 @@ public final class BatchClientImpl {
     public Response<Void> createNodeUserWithResponse(String poolId, String nodeId, BinaryData user,
         RequestOptions requestOptions) {
         final String contentType = "application/json; odata=minimalmetadata";
+        final String accept = "application/json";
         return service.createNodeUserSync(this.getEndpoint(), this.getServiceVersion().getVersion(), contentType,
-            poolId, nodeId, user, requestOptions, Context.NONE);
+            poolId, nodeId, accept, user, requestOptions, Context.NONE);
     }
 
     /**
      * Deletes a user Account from the specified Compute Node.
-     * 
+     *
      * You can delete a user Account to a Compute Node only when it is in the idle or
      * running state.
      * <p><strong>Query Parameters</strong></p>
@@ -26437,7 +26547,7 @@ public final class BatchClientImpl {
      * instead.".</td></tr>
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
-     * 
+     *
      * @param poolId The ID of the Pool that contains the Compute Node.
      * @param nodeId The ID of the machine on which you want to delete a user Account.
      * @param userName The name of the user Account to delete.
@@ -26448,13 +26558,14 @@ public final class BatchClientImpl {
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Mono<Response<Void>> deleteNodeUserWithResponseAsync(String poolId, String nodeId, String userName,
         RequestOptions requestOptions) {
+        final String accept = "application/json";
         return FluxUtil.withContext(context -> service.deleteNodeUser(this.getEndpoint(),
-            this.getServiceVersion().getVersion(), poolId, nodeId, userName, requestOptions, context));
+            this.getServiceVersion().getVersion(), poolId, nodeId, userName, accept, requestOptions, context));
     }
 
     /**
      * Deletes a user Account from the specified Compute Node.
-     * 
+     *
      * You can delete a user Account to a Compute Node only when it is in the idle or
      * running state.
      * <p><strong>Query Parameters</strong></p>
@@ -26466,7 +26577,7 @@ public final class BatchClientImpl {
      * instead.".</td></tr>
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
-     * 
+     *
      * @param poolId The ID of the Pool that contains the Compute Node.
      * @param nodeId The ID of the machine on which you want to delete a user Account.
      * @param userName The name of the user Account to delete.
@@ -26477,13 +26588,14 @@ public final class BatchClientImpl {
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Response<Void> deleteNodeUserWithResponse(String poolId, String nodeId, String userName,
         RequestOptions requestOptions) {
+        final String accept = "application/json";
         return service.deleteNodeUserSync(this.getEndpoint(), this.getServiceVersion().getVersion(), poolId, nodeId,
-            userName, requestOptions, Context.NONE);
+            userName, accept, requestOptions, Context.NONE);
     }
 
     /**
      * Updates the password and expiration time of a user Account on the specified Compute Node.
-     * 
+     *
      * This operation replaces of all the updatable properties of the Account. For
      * example, if the expiryTime element is not specified, the current value is
      * replaced with the default value, not left unmodified. You can update a user
@@ -26498,7 +26610,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -26508,7 +26620,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool that contains the Compute Node.
      * @param nodeId The ID of the machine on which you want to update a user Account.
      * @param userName The name of the user Account to update.
@@ -26521,14 +26633,15 @@ public final class BatchClientImpl {
     public Mono<Response<Void>> replaceNodeUserWithResponseAsync(String poolId, String nodeId, String userName,
         BinaryData parameters, RequestOptions requestOptions) {
         final String contentType = "application/json; odata=minimalmetadata";
+        final String accept = "application/json";
         return FluxUtil
             .withContext(context -> service.replaceNodeUser(this.getEndpoint(), this.getServiceVersion().getVersion(),
-                contentType, poolId, nodeId, userName, parameters, requestOptions, context));
+                contentType, poolId, nodeId, userName, accept, parameters, requestOptions, context));
     }
 
     /**
      * Updates the password and expiration time of a user Account on the specified Compute Node.
-     * 
+     *
      * This operation replaces of all the updatable properties of the Account. For
      * example, if the expiryTime element is not specified, the current value is
      * replaced with the default value, not left unmodified. You can update a user
@@ -26543,7 +26656,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -26553,7 +26666,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool that contains the Compute Node.
      * @param nodeId The ID of the machine on which you want to update a user Account.
      * @param userName The name of the user Account to update.
@@ -26566,8 +26679,9 @@ public final class BatchClientImpl {
     public Response<Void> replaceNodeUserWithResponse(String poolId, String nodeId, String userName,
         BinaryData parameters, RequestOptions requestOptions) {
         final String contentType = "application/json; odata=minimalmetadata";
+        final String accept = "application/json";
         return service.replaceNodeUserSync(this.getEndpoint(), this.getServiceVersion().getVersion(), contentType,
-            poolId, nodeId, userName, parameters, requestOptions, Context.NONE);
+            poolId, nodeId, userName, accept, parameters, requestOptions, Context.NONE);
     }
 
     /**
@@ -26584,7 +26698,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -26749,7 +26863,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool that contains the Compute Node.
      * @param nodeId The ID of the Compute Node that you want to get information about.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -26779,7 +26893,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -26944,7 +27058,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool that contains the Compute Node.
      * @param nodeId The ID of the Compute Node that you want to get information about.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -26960,7 +27074,7 @@ public final class BatchClientImpl {
 
     /**
      * Restarts the specified Compute Node.
-     * 
+     *
      * You can restart a Compute Node only if it is in an idle or running state.
      * <p><strong>Query Parameters</strong></p>
      * <table border="1">
@@ -26980,7 +27094,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -26988,7 +27102,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool that contains the Compute Node.
      * @param nodeId The ID of the Compute Node that you want to restart.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -26998,6 +27112,7 @@ public final class BatchClientImpl {
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Mono<Response<Void>> rebootNodeWithResponseAsync(String poolId, String nodeId,
         RequestOptions requestOptions) {
+        final String accept = "application/json";
         RequestOptions requestOptionsLocal = requestOptions == null ? new RequestOptions() : requestOptions;
         requestOptionsLocal.addRequestCallback(requestLocal -> {
             if (requestLocal.getBody() != null && requestLocal.getHeaders().get(HttpHeaderName.CONTENT_TYPE) == null) {
@@ -27005,12 +27120,12 @@ public final class BatchClientImpl {
             }
         });
         return FluxUtil.withContext(context -> service.rebootNode(this.getEndpoint(),
-            this.getServiceVersion().getVersion(), poolId, nodeId, requestOptionsLocal, context));
+            this.getServiceVersion().getVersion(), poolId, nodeId, accept, requestOptionsLocal, context));
     }
 
     /**
      * Restarts the specified Compute Node.
-     * 
+     *
      * You can restart a Compute Node only if it is in an idle or running state.
      * <p><strong>Query Parameters</strong></p>
      * <table border="1">
@@ -27030,7 +27145,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -27038,7 +27153,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool that contains the Compute Node.
      * @param nodeId The ID of the Compute Node that you want to restart.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -27047,19 +27162,20 @@ public final class BatchClientImpl {
      */
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Response<Void> rebootNodeWithResponse(String poolId, String nodeId, RequestOptions requestOptions) {
+        final String accept = "application/json";
         RequestOptions requestOptionsLocal = requestOptions == null ? new RequestOptions() : requestOptions;
         requestOptionsLocal.addRequestCallback(requestLocal -> {
             if (requestLocal.getBody() != null && requestLocal.getHeaders().get(HttpHeaderName.CONTENT_TYPE) == null) {
                 requestLocal.getHeaders().set(HttpHeaderName.CONTENT_TYPE, "application/json; odata=minimalmetadata");
             }
         });
-        return service.rebootNodeSync(this.getEndpoint(), this.getServiceVersion().getVersion(), poolId, nodeId,
+        return service.rebootNodeSync(this.getEndpoint(), this.getServiceVersion().getVersion(), poolId, nodeId, accept,
             requestOptionsLocal, Context.NONE);
     }
 
     /**
      * Starts the specified Compute Node.
-     * 
+     *
      * You can start a Compute Node only if it has been deallocated.
      * <p><strong>Query Parameters</strong></p>
      * <table border="1">
@@ -27070,7 +27186,7 @@ public final class BatchClientImpl {
      * instead.".</td></tr>
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
-     * 
+     *
      * @param poolId The ID of the Pool that contains the Compute Node.
      * @param nodeId The ID of the Compute Node that you want to restart.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -27080,13 +27196,14 @@ public final class BatchClientImpl {
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Mono<Response<Void>> startNodeWithResponseAsync(String poolId, String nodeId,
         RequestOptions requestOptions) {
+        final String accept = "application/json";
         return FluxUtil.withContext(context -> service.startNode(this.getEndpoint(),
-            this.getServiceVersion().getVersion(), poolId, nodeId, requestOptions, context));
+            this.getServiceVersion().getVersion(), poolId, nodeId, accept, requestOptions, context));
     }
 
     /**
      * Starts the specified Compute Node.
-     * 
+     *
      * You can start a Compute Node only if it has been deallocated.
      * <p><strong>Query Parameters</strong></p>
      * <table border="1">
@@ -27097,7 +27214,7 @@ public final class BatchClientImpl {
      * instead.".</td></tr>
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
-     * 
+     *
      * @param poolId The ID of the Pool that contains the Compute Node.
      * @param nodeId The ID of the Compute Node that you want to restart.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -27106,13 +27223,14 @@ public final class BatchClientImpl {
      */
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Response<Void> startNodeWithResponse(String poolId, String nodeId, RequestOptions requestOptions) {
-        return service.startNodeSync(this.getEndpoint(), this.getServiceVersion().getVersion(), poolId, nodeId,
+        final String accept = "application/json";
+        return service.startNodeSync(this.getEndpoint(), this.getServiceVersion().getVersion(), poolId, nodeId, accept,
             requestOptions, Context.NONE);
     }
 
     /**
      * Reinstalls the operating system on the specified Compute Node.
-     * 
+     *
      * You can reinstall the operating system on a Compute Node only if it is in an
      * idle or running state. This API can be invoked only on Pools created with the
      * cloud service configuration property.
@@ -27134,7 +27252,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -27142,7 +27260,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool that contains the Compute Node.
      * @param nodeId The ID of the Compute Node that you want to restart.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -27152,6 +27270,7 @@ public final class BatchClientImpl {
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Mono<Response<Void>> reimageNodeWithResponseAsync(String poolId, String nodeId,
         RequestOptions requestOptions) {
+        final String accept = "application/json";
         RequestOptions requestOptionsLocal = requestOptions == null ? new RequestOptions() : requestOptions;
         requestOptionsLocal.addRequestCallback(requestLocal -> {
             if (requestLocal.getBody() != null && requestLocal.getHeaders().get(HttpHeaderName.CONTENT_TYPE) == null) {
@@ -27159,12 +27278,12 @@ public final class BatchClientImpl {
             }
         });
         return FluxUtil.withContext(context -> service.reimageNode(this.getEndpoint(),
-            this.getServiceVersion().getVersion(), poolId, nodeId, requestOptionsLocal, context));
+            this.getServiceVersion().getVersion(), poolId, nodeId, accept, requestOptionsLocal, context));
     }
 
     /**
      * Reinstalls the operating system on the specified Compute Node.
-     * 
+     *
      * You can reinstall the operating system on a Compute Node only if it is in an
      * idle or running state. This API can be invoked only on Pools created with the
      * cloud service configuration property.
@@ -27186,7 +27305,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -27194,7 +27313,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool that contains the Compute Node.
      * @param nodeId The ID of the Compute Node that you want to restart.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -27203,6 +27322,7 @@ public final class BatchClientImpl {
      */
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Response<Void> reimageNodeWithResponse(String poolId, String nodeId, RequestOptions requestOptions) {
+        final String accept = "application/json";
         RequestOptions requestOptionsLocal = requestOptions == null ? new RequestOptions() : requestOptions;
         requestOptionsLocal.addRequestCallback(requestLocal -> {
             if (requestLocal.getBody() != null && requestLocal.getHeaders().get(HttpHeaderName.CONTENT_TYPE) == null) {
@@ -27210,12 +27330,12 @@ public final class BatchClientImpl {
             }
         });
         return service.reimageNodeSync(this.getEndpoint(), this.getServiceVersion().getVersion(), poolId, nodeId,
-            requestOptionsLocal, Context.NONE);
+            accept, requestOptionsLocal, Context.NONE);
     }
 
     /**
      * Deallocates the specified Compute Node.
-     * 
+     *
      * You can deallocate a Compute Node only if it is in an idle or running state.
      * <p><strong>Query Parameters</strong></p>
      * <table border="1">
@@ -27235,7 +27355,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -27243,7 +27363,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool that contains the Compute Node.
      * @param nodeId The ID of the Compute Node that you want to restart.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -27253,6 +27373,7 @@ public final class BatchClientImpl {
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Mono<Response<Void>> deallocateNodeWithResponseAsync(String poolId, String nodeId,
         RequestOptions requestOptions) {
+        final String accept = "application/json";
         RequestOptions requestOptionsLocal = requestOptions == null ? new RequestOptions() : requestOptions;
         requestOptionsLocal.addRequestCallback(requestLocal -> {
             if (requestLocal.getBody() != null && requestLocal.getHeaders().get(HttpHeaderName.CONTENT_TYPE) == null) {
@@ -27260,12 +27381,12 @@ public final class BatchClientImpl {
             }
         });
         return FluxUtil.withContext(context -> service.deallocateNode(this.getEndpoint(),
-            this.getServiceVersion().getVersion(), poolId, nodeId, requestOptionsLocal, context));
+            this.getServiceVersion().getVersion(), poolId, nodeId, accept, requestOptionsLocal, context));
     }
 
     /**
      * Deallocates the specified Compute Node.
-     * 
+     *
      * You can deallocate a Compute Node only if it is in an idle or running state.
      * <p><strong>Query Parameters</strong></p>
      * <table border="1">
@@ -27285,7 +27406,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -27293,7 +27414,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool that contains the Compute Node.
      * @param nodeId The ID of the Compute Node that you want to restart.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -27302,6 +27423,7 @@ public final class BatchClientImpl {
      */
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Response<Void> deallocateNodeWithResponse(String poolId, String nodeId, RequestOptions requestOptions) {
+        final String accept = "application/json";
         RequestOptions requestOptionsLocal = requestOptions == null ? new RequestOptions() : requestOptions;
         requestOptionsLocal.addRequestCallback(requestLocal -> {
             if (requestLocal.getBody() != null && requestLocal.getHeaders().get(HttpHeaderName.CONTENT_TYPE) == null) {
@@ -27309,12 +27431,12 @@ public final class BatchClientImpl {
             }
         });
         return service.deallocateNodeSync(this.getEndpoint(), this.getServiceVersion().getVersion(), poolId, nodeId,
-            requestOptionsLocal, Context.NONE);
+            accept, requestOptionsLocal, Context.NONE);
     }
 
     /**
      * Disables Task scheduling on the specified Compute Node.
-     * 
+     *
      * You can disable Task scheduling on a Compute Node only if its current
      * scheduling state is enabled.
      * <p><strong>Query Parameters</strong></p>
@@ -27335,7 +27457,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -27343,7 +27465,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool that contains the Compute Node.
      * @param nodeId The ID of the Compute Node on which you want to disable Task scheduling.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -27353,6 +27475,7 @@ public final class BatchClientImpl {
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Mono<Response<Void>> disableNodeSchedulingWithResponseAsync(String poolId, String nodeId,
         RequestOptions requestOptions) {
+        final String accept = "application/json";
         RequestOptions requestOptionsLocal = requestOptions == null ? new RequestOptions() : requestOptions;
         requestOptionsLocal.addRequestCallback(requestLocal -> {
             if (requestLocal.getBody() != null && requestLocal.getHeaders().get(HttpHeaderName.CONTENT_TYPE) == null) {
@@ -27360,12 +27483,12 @@ public final class BatchClientImpl {
             }
         });
         return FluxUtil.withContext(context -> service.disableNodeScheduling(this.getEndpoint(),
-            this.getServiceVersion().getVersion(), poolId, nodeId, requestOptionsLocal, context));
+            this.getServiceVersion().getVersion(), poolId, nodeId, accept, requestOptionsLocal, context));
     }
 
     /**
      * Disables Task scheduling on the specified Compute Node.
-     * 
+     *
      * You can disable Task scheduling on a Compute Node only if its current
      * scheduling state is enabled.
      * <p><strong>Query Parameters</strong></p>
@@ -27386,7 +27509,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -27394,7 +27517,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool that contains the Compute Node.
      * @param nodeId The ID of the Compute Node on which you want to disable Task scheduling.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -27404,6 +27527,7 @@ public final class BatchClientImpl {
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Response<Void> disableNodeSchedulingWithResponse(String poolId, String nodeId,
         RequestOptions requestOptions) {
+        final String accept = "application/json";
         RequestOptions requestOptionsLocal = requestOptions == null ? new RequestOptions() : requestOptions;
         requestOptionsLocal.addRequestCallback(requestLocal -> {
             if (requestLocal.getBody() != null && requestLocal.getHeaders().get(HttpHeaderName.CONTENT_TYPE) == null) {
@@ -27411,12 +27535,12 @@ public final class BatchClientImpl {
             }
         });
         return service.disableNodeSchedulingSync(this.getEndpoint(), this.getServiceVersion().getVersion(), poolId,
-            nodeId, requestOptionsLocal, Context.NONE);
+            nodeId, accept, requestOptionsLocal, Context.NONE);
     }
 
     /**
      * Enables Task scheduling on the specified Compute Node.
-     * 
+     *
      * You can enable Task scheduling on a Compute Node only if its current scheduling
      * state is disabled.
      * <p><strong>Query Parameters</strong></p>
@@ -27428,7 +27552,7 @@ public final class BatchClientImpl {
      * instead.".</td></tr>
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
-     * 
+     *
      * @param poolId The ID of the Pool that contains the Compute Node.
      * @param nodeId The ID of the Compute Node on which you want to enable Task scheduling.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -27438,13 +27562,14 @@ public final class BatchClientImpl {
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Mono<Response<Void>> enableNodeSchedulingWithResponseAsync(String poolId, String nodeId,
         RequestOptions requestOptions) {
+        final String accept = "application/json";
         return FluxUtil.withContext(context -> service.enableNodeScheduling(this.getEndpoint(),
-            this.getServiceVersion().getVersion(), poolId, nodeId, requestOptions, context));
+            this.getServiceVersion().getVersion(), poolId, nodeId, accept, requestOptions, context));
     }
 
     /**
      * Enables Task scheduling on the specified Compute Node.
-     * 
+     *
      * You can enable Task scheduling on a Compute Node only if its current scheduling
      * state is disabled.
      * <p><strong>Query Parameters</strong></p>
@@ -27456,7 +27581,7 @@ public final class BatchClientImpl {
      * instead.".</td></tr>
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
-     * 
+     *
      * @param poolId The ID of the Pool that contains the Compute Node.
      * @param nodeId The ID of the Compute Node on which you want to enable Task scheduling.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -27466,13 +27591,14 @@ public final class BatchClientImpl {
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Response<Void> enableNodeSchedulingWithResponse(String poolId, String nodeId,
         RequestOptions requestOptions) {
+        final String accept = "application/json";
         return service.enableNodeSchedulingSync(this.getEndpoint(), this.getServiceVersion().getVersion(), poolId,
-            nodeId, requestOptions, Context.NONE);
+            nodeId, accept, requestOptions, Context.NONE);
     }
 
     /**
      * Gets the settings required for remote login to a Compute Node.
-     * 
+     *
      * Before you can remotely login to a Compute Node using the remote login settings,
      * you must create a user Account on the Compute Node.
      * <p><strong>Query Parameters</strong></p>
@@ -27485,7 +27611,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -27494,13 +27620,13 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool that contains the Compute Node.
      * @param nodeId The ID of the Compute Node for which to obtain the remote login settings.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
      * @return the settings required for remote login to a Compute Node.
-     * 
+     *
      * Before you can remotely login to a Compute Node using the remote login settings,
      * you must create a user Account on the Compute Node along with {@link Response} on successful completion of
      * {@link Mono}.
@@ -27515,7 +27641,7 @@ public final class BatchClientImpl {
 
     /**
      * Gets the settings required for remote login to a Compute Node.
-     * 
+     *
      * Before you can remotely login to a Compute Node using the remote login settings,
      * you must create a user Account on the Compute Node.
      * <p><strong>Query Parameters</strong></p>
@@ -27528,7 +27654,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -27537,13 +27663,13 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool that contains the Compute Node.
      * @param nodeId The ID of the Compute Node for which to obtain the remote login settings.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
      * @return the settings required for remote login to a Compute Node.
-     * 
+     *
      * Before you can remotely login to a Compute Node using the remote login settings,
      * you must create a user Account on the Compute Node along with {@link Response}.
      */
@@ -27558,7 +27684,7 @@ public final class BatchClientImpl {
     /**
      * Upload Azure Batch service log files from the specified Compute Node to Azure
      * Blob Storage.
-     * 
+     *
      * This is for gathering Azure Batch service log files in an automated fashion
      * from Compute Nodes if you are experiencing an error and wish to escalate to
      * Azure support. The Azure Batch service log files should be shared with Azure
@@ -27573,7 +27699,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -27586,9 +27712,9 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -27597,7 +27723,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool that contains the Compute Node.
      * @param nodeId The ID of the Compute Node for which you want to get the Remote Desktop
      * Protocol file.
@@ -27620,7 +27746,7 @@ public final class BatchClientImpl {
     /**
      * Upload Azure Batch service log files from the specified Compute Node to Azure
      * Blob Storage.
-     * 
+     *
      * This is for gathering Azure Batch service log files in an automated fashion
      * from Compute Nodes if you are experiencing an error and wish to escalate to
      * Azure support. The Azure Batch service log files should be shared with Azure
@@ -27635,7 +27761,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Request Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -27648,9 +27774,9 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -27659,7 +27785,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool that contains the Compute Node.
      * @param nodeId The ID of the Compute Node for which you want to get the Remote Desktop
      * Protocol file.
@@ -27697,7 +27823,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -27862,7 +27988,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool from which you want to list Compute Nodes.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -27899,7 +28025,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -28064,7 +28190,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool from which you want to list Compute Nodes.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -28119,7 +28245,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -28284,7 +28410,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool from which you want to list Compute Nodes.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -28319,7 +28445,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -28484,7 +28610,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool from which you want to list Compute Nodes.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -28533,7 +28659,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -28573,7 +28699,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool that contains the Compute Node.
      * @param nodeId The ID of the Compute Node that contains the extensions.
      * @param extensionName The name of the Compute Node Extension that you want to get information about.
@@ -28604,7 +28730,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -28644,7 +28770,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool that contains the Compute Node.
      * @param nodeId The ID of the Compute Node that contains the extensions.
      * @param extensionName The name of the Compute Node Extension that you want to get information about.
@@ -28677,7 +28803,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -28717,7 +28843,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool that contains Compute Node.
      * @param nodeId The ID of the Compute Node that you want to list extensions.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -28753,7 +28879,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -28793,7 +28919,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool that contains Compute Node.
      * @param nodeId The ID of the Compute Node that you want to list extensions.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -28846,7 +28972,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -28886,7 +29012,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool that contains Compute Node.
      * @param nodeId The ID of the Compute Node that you want to list extensions.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -28920,7 +29046,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -28960,7 +29086,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool that contains Compute Node.
      * @param nodeId The ID of the Compute Node that you want to list extensions.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -29013,7 +29139,7 @@ public final class BatchClientImpl {
      * then the directory must be empty or deletion will fail.</td></tr>
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
-     * 
+     *
      * @param poolId The ID of the Pool that contains the Compute Node.
      * @param nodeId The ID of the Compute Node.
      * @param filePath The path to the file or directory.
@@ -29024,8 +29150,9 @@ public final class BatchClientImpl {
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Mono<Response<Void>> deleteNodeFileWithResponseAsync(String poolId, String nodeId, String filePath,
         RequestOptions requestOptions) {
+        final String accept = "application/json";
         return FluxUtil.withContext(context -> service.deleteNodeFile(this.getEndpoint(),
-            this.getServiceVersion().getVersion(), poolId, nodeId, filePath, requestOptions, context));
+            this.getServiceVersion().getVersion(), poolId, nodeId, filePath, accept, requestOptions, context));
     }
 
     /**
@@ -29044,7 +29171,7 @@ public final class BatchClientImpl {
      * then the directory must be empty or deletion will fail.</td></tr>
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
-     * 
+     *
      * @param poolId The ID of the Pool that contains the Compute Node.
      * @param nodeId The ID of the Compute Node.
      * @param filePath The path to the file or directory.
@@ -29055,8 +29182,9 @@ public final class BatchClientImpl {
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Response<Void> deleteNodeFileWithResponse(String poolId, String nodeId, String filePath,
         RequestOptions requestOptions) {
+        final String accept = "application/json";
         return service.deleteNodeFileSync(this.getEndpoint(), this.getServiceVersion().getVersion(), poolId, nodeId,
-            filePath, requestOptions, Context.NONE);
+            filePath, accept, requestOptions, Context.NONE);
     }
 
     /**
@@ -29088,13 +29216,13 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * BinaryData
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool that contains the Compute Node.
      * @param nodeId The ID of the Compute Node.
      * @param filePath The path to the file or directory.
@@ -29139,13 +29267,13 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * BinaryData
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool that contains the Compute Node.
      * @param nodeId The ID of the Compute Node.
      * @param filePath The path to the file or directory.
@@ -29186,7 +29314,7 @@ public final class BatchClientImpl {
      * not been modified since the specified time.</td></tr>
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
-     * 
+     *
      * @param poolId The ID of the Pool that contains the Compute Node.
      * @param nodeId The ID of the Compute Node.
      * @param filePath The path to the file or directory.
@@ -29198,8 +29326,9 @@ public final class BatchClientImpl {
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Mono<Response<Void>> getNodeFilePropertiesWithResponseAsync(String poolId, String nodeId, String filePath,
         RequestOptions requestOptions) {
+        final String accept = "application/json";
         return FluxUtil.withContext(context -> service.getNodeFileProperties(this.getEndpoint(),
-            this.getServiceVersion().getVersion(), poolId, nodeId, filePath, requestOptions, context));
+            this.getServiceVersion().getVersion(), poolId, nodeId, filePath, accept, requestOptions, context));
     }
 
     /**
@@ -29227,7 +29356,7 @@ public final class BatchClientImpl {
      * not been modified since the specified time.</td></tr>
      * </table>
      * You can add these to a request with {@link RequestOptions#addHeader}
-     * 
+     *
      * @param poolId The ID of the Pool that contains the Compute Node.
      * @param nodeId The ID of the Compute Node.
      * @param filePath The path to the file or directory.
@@ -29238,8 +29367,9 @@ public final class BatchClientImpl {
     @ServiceMethod(returns = ReturnType.SINGLE)
     public Response<Void> getNodeFilePropertiesWithResponse(String poolId, String nodeId, String filePath,
         RequestOptions requestOptions) {
+        final String accept = "application/json";
         return service.getNodeFilePropertiesSync(this.getEndpoint(), this.getServiceVersion().getVersion(), poolId,
-            nodeId, filePath, requestOptions, Context.NONE);
+            nodeId, filePath, accept, requestOptions, Context.NONE);
     }
 
     /**
@@ -29261,7 +29391,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -29278,7 +29408,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool that contains the Compute Node.
      * @param nodeId The ID of the Compute Node whose files you want to list.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -29316,7 +29446,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -29333,7 +29463,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool that contains the Compute Node.
      * @param nodeId The ID of the Compute Node whose files you want to list.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -29389,7 +29519,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -29406,7 +29536,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool that contains the Compute Node.
      * @param nodeId The ID of the Compute Node whose files you want to list.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -29443,7 +29573,7 @@ public final class BatchClientImpl {
      * </table>
      * You can add these to a request with {@link RequestOptions#addQueryParam}
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -29460,7 +29590,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param poolId The ID of the Pool that contains the Compute Node.
      * @param nodeId The ID of the Compute Node whose files you want to list.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
@@ -29499,10 +29629,10 @@ public final class BatchClientImpl {
 
     /**
      * Lists all of the applications available in the specified Account.
-     * 
+     *
      * Get the next page of items.
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -29514,7 +29644,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param nextLink The URL to get the next list of items.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -29534,10 +29664,10 @@ public final class BatchClientImpl {
 
     /**
      * Lists all of the applications available in the specified Account.
-     * 
+     *
      * Get the next page of items.
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -29549,7 +29679,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param nextLink The URL to get the next list of items.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -29567,10 +29697,10 @@ public final class BatchClientImpl {
     /**
      * Lists the usage metrics, aggregated by Pool across individual time intervals,
      * for the specified Account.
-     * 
+     *
      * Get the next page of items.
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -29582,7 +29712,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param nextLink The URL to get the next list of items.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -29602,10 +29732,10 @@ public final class BatchClientImpl {
     /**
      * Lists the usage metrics, aggregated by Pool across individual time intervals,
      * for the specified Account.
-     * 
+     *
      * Get the next page of items.
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -29617,7 +29747,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param nextLink The URL to get the next list of items.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -29635,10 +29765,10 @@ public final class BatchClientImpl {
 
     /**
      * Lists all of the Pools which be mounted.
-     * 
+     *
      * Get the next page of items.
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -29986,7 +30116,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param nextLink The URL to get the next list of items.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -30006,10 +30136,10 @@ public final class BatchClientImpl {
 
     /**
      * Lists all of the Pools which be mounted.
-     * 
+     *
      * Get the next page of items.
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -30357,7 +30487,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param nextLink The URL to get the next list of items.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -30374,10 +30504,10 @@ public final class BatchClientImpl {
 
     /**
      * Lists all Virtual Machine Images supported by the Azure Batch service.
-     * 
+     *
      * Get the next page of items.
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -30401,7 +30531,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param nextLink The URL to get the next list of items.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -30420,10 +30550,10 @@ public final class BatchClientImpl {
 
     /**
      * Lists all Virtual Machine Images supported by the Azure Batch service.
-     * 
+     *
      * Get the next page of items.
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -30447,7 +30577,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param nextLink The URL to get the next list of items.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -30466,7 +30596,7 @@ public final class BatchClientImpl {
     /**
      * Get the next page of items.
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -30494,12 +30624,12 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param nextLink The URL to get the next list of items.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
-     * @return the number of Compute Nodes in each state, grouped by Pool along with {@link PagedResponse} on successful
-     * completion of {@link Mono}.
+     * @return the result of listing the Compute Node counts in the Account along with {@link PagedResponse} on
+     * successful completion of {@link Mono}.
      */
     @ServiceMethod(returns = ReturnType.SINGLE)
     private Mono<PagedResponse<BinaryData>> listPoolNodeCountsNextSinglePageAsync(String nextLink,
@@ -30514,7 +30644,7 @@ public final class BatchClientImpl {
     /**
      * Get the next page of items.
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -30542,11 +30672,11 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param nextLink The URL to get the next list of items.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
-     * @return the number of Compute Nodes in each state, grouped by Pool along with {@link PagedResponse}.
+     * @return the result of listing the Compute Node counts in the Account along with {@link PagedResponse}.
      */
     @ServiceMethod(returns = ReturnType.SINGLE)
     private PagedResponse<BinaryData> listPoolNodeCountsNextSinglePage(String nextLink, RequestOptions requestOptions) {
@@ -30559,10 +30689,10 @@ public final class BatchClientImpl {
 
     /**
      * Lists all of the Jobs in the specified Account.
-     * 
+     *
      * Get the next page of items.
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -30991,7 +31121,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param nextLink The URL to get the next list of items.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -31010,10 +31140,10 @@ public final class BatchClientImpl {
 
     /**
      * Lists all of the Jobs in the specified Account.
-     * 
+     *
      * Get the next page of items.
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -31442,7 +31572,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param nextLink The URL to get the next list of items.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -31459,10 +31589,10 @@ public final class BatchClientImpl {
 
     /**
      * Lists the Jobs that have been created under the specified Job Schedule.
-     * 
+     *
      * Get the next page of items.
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -31891,7 +32021,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param nextLink The URL to get the next list of items.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -31910,10 +32040,10 @@ public final class BatchClientImpl {
 
     /**
      * Lists the Jobs that have been created under the specified Job Schedule.
-     * 
+     *
      * Get the next page of items.
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -32342,7 +32472,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param nextLink The URL to get the next list of items.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -32361,10 +32491,10 @@ public final class BatchClientImpl {
     /**
      * Lists the execution status of the Job Preparation and Job Release Task for the
      * specified Job across the Compute Nodes where the Job has run.
-     * 
+     *
      * Get the next page of items.
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -32412,7 +32542,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param nextLink The URL to get the next list of items.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -32433,10 +32563,10 @@ public final class BatchClientImpl {
     /**
      * Lists the execution status of the Job Preparation and Job Release Task for the
      * specified Job across the Compute Nodes where the Job has run.
-     * 
+     *
      * Get the next page of items.
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -32484,7 +32614,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param nextLink The URL to get the next list of items.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -32503,10 +32633,10 @@ public final class BatchClientImpl {
 
     /**
      * Lists all of the Certificates that have been added to the specified Account.
-     * 
+     *
      * Get the next page of items.
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -32534,7 +32664,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param nextLink The URL to get the next list of items.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -32554,10 +32684,10 @@ public final class BatchClientImpl {
 
     /**
      * Lists all of the Certificates that have been added to the specified Account.
-     * 
+     *
      * Get the next page of items.
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -32585,7 +32715,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param nextLink The URL to get the next list of items.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -32602,10 +32732,10 @@ public final class BatchClientImpl {
 
     /**
      * Lists all of the Job Schedules in the specified Account.
-     * 
+     *
      * Get the next page of items.
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -33037,7 +33167,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param nextLink The URL to get the next list of items.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -33057,10 +33187,10 @@ public final class BatchClientImpl {
 
     /**
      * Lists all of the Job Schedules in the specified Account.
-     * 
+     *
      * Get the next page of items.
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -33492,7 +33622,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param nextLink The URL to get the next list of items.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -33509,10 +33639,10 @@ public final class BatchClientImpl {
 
     /**
      * Lists all of the Tasks that are associated with the specified Job.
-     * 
+     *
      * Get the next page of items.
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -33700,7 +33830,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param nextLink The URL to get the next list of items.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -33720,10 +33850,10 @@ public final class BatchClientImpl {
 
     /**
      * Lists all of the Tasks that are associated with the specified Job.
-     * 
+     *
      * Get the next page of items.
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -33911,7 +34041,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param nextLink The URL to get the next list of items.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -33929,10 +34059,10 @@ public final class BatchClientImpl {
     /**
      * Lists all of the subtasks that are associated with the specified multi-instance
      * Task.
-     * 
+     *
      * Get the next page of items.
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -33972,7 +34102,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param nextLink The URL to get the next list of items.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -33993,10 +34123,10 @@ public final class BatchClientImpl {
     /**
      * Lists all of the subtasks that are associated with the specified multi-instance
      * Task.
-     * 
+     *
      * Get the next page of items.
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -34036,7 +34166,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param nextLink The URL to get the next list of items.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -34053,10 +34183,10 @@ public final class BatchClientImpl {
 
     /**
      * Lists the files in a Task's directory on its Compute Node.
-     * 
+     *
      * Get the next page of items.
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -34073,7 +34203,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param nextLink The URL to get the next list of items.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -34093,10 +34223,10 @@ public final class BatchClientImpl {
 
     /**
      * Lists the files in a Task's directory on its Compute Node.
-     * 
+     *
      * Get the next page of items.
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -34113,7 +34243,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param nextLink The URL to get the next list of items.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -34131,10 +34261,10 @@ public final class BatchClientImpl {
 
     /**
      * Lists the Compute Nodes in the specified Pool.
-     * 
+     *
      * Get the next page of items.
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -34299,7 +34429,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param nextLink The URL to get the next list of items.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -34319,10 +34449,10 @@ public final class BatchClientImpl {
 
     /**
      * Lists the Compute Nodes in the specified Pool.
-     * 
+     *
      * Get the next page of items.
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -34487,7 +34617,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param nextLink The URL to get the next list of items.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -34504,10 +34634,10 @@ public final class BatchClientImpl {
 
     /**
      * Lists the Compute Nodes Extensions in the specified Pool.
-     * 
+     *
      * Get the next page of items.
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -34547,7 +34677,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param nextLink The URL to get the next list of items.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -34566,10 +34696,10 @@ public final class BatchClientImpl {
 
     /**
      * Lists the Compute Nodes Extensions in the specified Pool.
-     * 
+     *
      * Get the next page of items.
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -34609,7 +34739,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param nextLink The URL to get the next list of items.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -34626,10 +34756,10 @@ public final class BatchClientImpl {
 
     /**
      * Lists all of the files in Task directories on the specified Compute Node.
-     * 
+     *
      * Get the next page of items.
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -34646,7 +34776,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param nextLink The URL to get the next list of items.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
@@ -34666,10 +34796,10 @@ public final class BatchClientImpl {
 
     /**
      * Lists all of the files in Task directories on the specified Compute Node.
-     * 
+     *
      * Get the next page of items.
      * <p><strong>Response Body Schema</strong></p>
-     * 
+     *
      * <pre>
      * {@code
      * {
@@ -34686,7 +34816,7 @@ public final class BatchClientImpl {
      * }
      * }
      * </pre>
-     * 
+     *
      * @param nextLink The URL to get the next list of items.
      * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
      * @throws BatchErrorException thrown if the request is rejected by server.
-- 
2.51.0.windows.1

