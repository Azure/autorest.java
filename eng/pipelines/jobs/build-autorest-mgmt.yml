jobs:
- job: Build_AutoRest_Management

  timeoutInMinutes: 60

  variables:
    - template: /eng/pipelines/variables/globals.yml
    - template: /eng/pipelines/variables/image.yml

  pool:
    name: $(LINUXPOOL)
    image: $(LINUXVMIMAGE)
    os: linux

  steps:
  - checkout: self
    submodules: true

  - script: |
      git checkout .
      git apply ../core.diff --ignore-whitespace
    displayName: 'Patch core'
    workingDirectory: ./core

  - task: NodeTool@0
    inputs:
      versionSpec: '$(NodeVersion)'

  - script: npm install autorest -g

  - template: /eng/pipelines/steps/cache-maven-repository.yml
    parameters:
      JobType: 'Fluent Integration'

  - task: Maven@4
    displayName: 'Build and Package'
    inputs:
      mavenPomFile: pom.xml
      goals: 'clean install'
      options: '$(DefaultOptions) -P local -T 1C -DskipTests'
      mavenOptions: '$(MemoryOptions) $(LoggingOptions)'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: $(JavaVersion)
      jdkArchitectureOption: 'x64'
      publishJUnitResults: false

  - task: PowerShell@2
    displayName: 'Generate Code'
    inputs:
      pwsh: true
      filePath: fluent-tests/Initialize-Tests.ps1
      workingDirectory: ./fluent-tests

  - task: Maven@4
    displayName: 'Run Tests'
    inputs:
      mavenPomFile: 'pom.xml'
      mavenOptions: '$(MemoryOptions) $(LoggingOptions)'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: $(JavaVersion)
      jdkArchitectureOption: 'x64'
      publishJUnitResults: true
      testResultsFiles: '**/TEST-*.xml'
      goals: 'clean install'
      options: '$(DefaultOptions) -P local,testFluent -T 1C'

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'JaCoCo'
      summaryFileLocation: fluentgen/target/site/test-coverage/jacoco.xml
      reportDirectory: fluentgen/target/site/test-coverage/
      failIfCoverageEmpty: false

  - template: /eng/pipelines/steps/cleanup-maven-local-cache.yml
