trigger:
  branches:
    include:
      - main
      - hotfix/*
      - release/*

pr:
  branches:
    include:
      - main
      - feature/*
      - hotfix/*
      - release/*
  paths:
    include:
      - '*'
    exclude:
      - 'fluent*'
      - 'typespec*'

jobs:
  - job: Build

    timeoutInMinutes: 60

    variables:
      - template: /eng/pipelines/variables/globals.yml
      - template: /eng/pipelines/variables/image.yml

    pool:
      name: $(LINUXPOOL)
      image: $(LINUXVMIMAGE)
      os: linux

    steps:
      - checkout: self
        submodules: true

      - script: |
          git checkout .
          git apply ../core.diff --ignore-whitespace
        displayName: 'Patch core'
        workingDirectory: ./core

      - task: NodeTool@0
        displayName: 'Install Node.js $(NodeVersion)'
        inputs:
          versionSpec: '$(NodeVersion)'

      - template: /eng/pipelines/steps/cache-maven-repository.yml
        parameters:
          JobType: 'Autorest'

      - task: Maven@4
        displayName: 'Build and Package'
        inputs:
          mavenPomFile: pom.xml
          goals: 'clean install'
          options: '$(DefaultOptions) -P local -T 1C'
          mavenOptions: '$(MemoryOptions) $(LoggingOptions)'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: $(JavaVersion)
          jdkArchitectureOption: 'x64'
          publishJUnitResults: false

      - script: |
          npm install -g autorest
          npm ci
        displayName: 'Prepare Environment for Generation'

      - task: PowerShell@2
        displayName: 'Generate Code'
        inputs:
          pwsh: true
          filePath: Generate.ps1

      - script: |
          git status
          git diff --ignore-submodules
        displayName: 'Git Diff'

      - script: |
          [ -z "`git status --ignore-submodules --porcelain`" ]
        displayName: 'Check no Diff'

      - script: |
          npm run testserver-run &
        displayName: 'Start Testserver'

      - task: Maven@4
        displayName: 'Run Vanilla Tests'
        inputs:
          mavenPomFile: pom.xml
          goals: 'clean test'
          options: '$(DefaultOptions) -DtestVanilla -pl vanilla-tests -DtrimStackTrace=false'
          mavenOptions: '$(MemoryOptions) $(LoggingOptions)'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: $(JavaVersion)
          jdkArchitectureOption: 'x64'
          publishJUnitResults: false

      - task: PublishTestResults@2
        inputs:
          mergeTestResults: true
          testRunTitle: 'vanilla-tests'
          searchFolder: '$(System.DefaultWorkingDirectory)/vanilla-tests/'
        condition: always()

      - task: Maven@4
        displayName: 'Run Azure Tests'
        inputs:
          mavenPomFile: pom.xml
          goals: 'clean test'
          options: '$(DefaultOptions) -DtestAzure -pl azure-tests -DtrimStackTrace=false'
          mavenOptions: '$(MemoryOptions) $(LoggingOptions)'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: $(JavaVersion)
          jdkArchitectureOption: 'x64'
          publishJUnitResults: false

      - task: PublishTestResults@2
        inputs:
          mergeTestResults: true
          testRunTitle: 'azure-tests'
          searchFolder: '$(System.DefaultWorkingDirectory)/azure-tests/'
        condition: always()

      - task: Maven@4
        displayName: 'Run Protocol Tests'
        inputs:
          mavenPomFile: pom.xml
          goals: 'clean test'
          options: '$(DefaultOptions) -DtestProtocol -pl protocol-tests -DtrimStackTrace=false'
          mavenOptions: '$(MemoryOptions) $(LoggingOptions)'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: $(JavaVersion)
          jdkArchitectureOption: 'x64'
          publishJUnitResults: false

      - task: PublishTestResults@2
        inputs:
          mergeTestResults: true
          testRunTitle: 'protocol-tests'
          searchFolder: '$(System.DefaultWorkingDirectory)/protocol-tests/'
        condition: always()

      - script: |
          npm run testserver-stop
        displayName: 'Stop Testserver'

      - script: |
          cat coverage/report-vanilla.json || true
          cat coverage/report-azure.json || true
          cat coverage/report-dpg.json || true
        displayName: 'Display Coverage Data'

      - task: Maven@4
        displayName: 'Verify Javadoc of Protocol Tests'
        inputs:
          mavenPomFile: protocol-tests/pom.xml
          goals: 'javadoc:javadoc'
          options: '$(DefaultOptions)'
          mavenOptions: '$(MemoryOptions) $(LoggingOptions)'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: $(JavaVersion)
          jdkArchitectureOption: 'x64'
          publishJUnitResults: false

      - task: Maven@4
        displayName: 'Run Protocol Resilience Tests'
        inputs:
          mavenPomFile: protocol-resilience-test/pom.xml
          goals: 'package revapi:check'
          options: '$(DefaultOptions)'
          mavenOptions: '$(MemoryOptions) $(LoggingOptions)'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: $(JavaVersion)
          jdkArchitectureOption: 'x64'
          publishJUnitResults: false

      - script: |
          ./protocol-sdk-integration-tests/test.py
        displayName: 'Run Protocol Test on SDK Integration'

      - template: /eng/pipelines/steps/cleanup-maven-local-cache.yml
