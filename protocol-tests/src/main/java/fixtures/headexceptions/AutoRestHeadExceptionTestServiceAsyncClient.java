// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package fixtures.headexceptions;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceClient;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.exception.ClientAuthenticationException;
import com.azure.core.exception.ResourceModifiedException;
import com.azure.core.exception.ResourceNotFoundException;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import fixtures.headexceptions.implementation.HeadExceptionsImpl;
import fixtures.headexceptions.models.CustomizedException;
import reactor.core.publisher.Mono;

/** Initializes a new instance of the asynchronous AutoRestHeadExceptionTestServiceClient type. */
@ServiceClient(builder = AutoRestHeadExceptionTestServiceClientBuilder.class, isAsync = true)
public final class AutoRestHeadExceptionTestServiceAsyncClient {
    @Generated private final HeadExceptionsImpl serviceClient;

    /**
     * Initializes an instance of AutoRestHeadExceptionTestServiceAsyncClient class.
     *
     * @param serviceClient the service client implementation.
     */
    @Generated
    AutoRestHeadExceptionTestServiceAsyncClient(HeadExceptionsImpl serviceClient) {
        this.serviceClient = serviceClient;
    }

    /**
     * Return 200 status code if successful.
     *
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws CustomizedException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link Response} on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<Void>> head200WithResponse(RequestOptions requestOptions) {
        return this.serviceClient.head200WithResponseAsync(requestOptions);
    }

    /**
     * Return 204 status code if successful.
     *
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws CustomizedException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link Response} on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<Void>> head204WithResponse(RequestOptions requestOptions) {
        return this.serviceClient.head204WithResponseAsync(requestOptions);
    }

    /**
     * Return 404 status code if successful.
     *
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws CustomizedException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link Response} on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<Void>> head404WithResponse(RequestOptions requestOptions) {
        return this.serviceClient.head404WithResponseAsync(requestOptions);
    }

    /**
     * Return 200 status code if successful.
     *
     * @throws fixtures.headexceptions.models.CustomizedException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return A {@link Mono} that completes when a successful response is received.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Void> head200() {
        // Generated convenience method for head200WithResponse
        RequestOptions requestOptions = new RequestOptions();
        return head200WithResponse(requestOptions).then();
    }

    /**
     * Return 204 status code if successful.
     *
     * @throws fixtures.headexceptions.models.CustomizedException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return A {@link Mono} that completes when a successful response is received.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Void> head204() {
        // Generated convenience method for head204WithResponse
        RequestOptions requestOptions = new RequestOptions();
        return head204WithResponse(requestOptions).then();
    }

    /**
     * Return 404 status code if successful.
     *
     * @throws fixtures.headexceptions.models.CustomizedException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return A {@link Mono} that completes when a successful response is received.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Void> head404() {
        // Generated convenience method for head404WithResponse
        RequestOptions requestOptions = new RequestOptions();
        return head404WithResponse(requestOptions).then();
    }
}
