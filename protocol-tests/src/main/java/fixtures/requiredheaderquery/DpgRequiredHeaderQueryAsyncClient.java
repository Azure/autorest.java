// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package fixtures.requiredheaderquery;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceClient;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.exception.ClientAuthenticationException;
import com.azure.core.exception.HttpResponseException;
import com.azure.core.exception.ResourceModifiedException;
import com.azure.core.exception.ResourceNotFoundException;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.util.BinaryData;
import com.azure.core.util.serializer.CollectionFormat;
import com.azure.core.util.serializer.JacksonAdapter;
import fixtures.requiredheaderquery.implementation.ParamsImpl;
import fixtures.requiredheaderquery.implementation.models.Get6ItemsItem;
import java.time.Duration;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Objects;
import java.util.stream.Collectors;
import reactor.core.publisher.Mono;

/** Initializes a new instance of the asynchronous DpgRequiredHeaderQueryClient type. */
@ServiceClient(builder = DpgRequiredHeaderQueryClientBuilder.class, isAsync = true)
public final class DpgRequiredHeaderQueryAsyncClient {
    @Generated private final ParamsImpl serviceClient;

    /**
     * Initializes an instance of DpgRequiredHeaderQueryAsyncClient class.
     *
     * @param serviceClient the service client implementation.
     */
    @Generated
    DpgRequiredHeaderQueryAsyncClient(ParamsImpl serviceClient) {
        this.serviceClient = serviceClient;
    }

    /**
     * Test Case for Required Query Parameters
     *
     * <p>Get Required Query Parameters.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>parameter_optional_csv_int_array</td><td>List&lt;Integer&gt;</td><td>No</td><td>I am a required csv int array parameter. In the form of "," separated string.</td></tr>
     *     <tr><td>parameter_optional_multi_int_array</td><td>List&lt;Integer&gt;</td><td>No</td><td>The array of integer collect by multi. Call {@link RequestOptions#addQueryParam} to add string to array.</td></tr>
     * </table>
     *
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * Object
     * }</pre>
     *
     * @param parameterInt I am a required int parameter.
     * @param parameterBoolean I am a required boolean parameter.
     * @param parameterCsvStringArray I am a required csv string array parameter.
     * @param parameterCsvIntArray I am a required csv int array parameter.
     * @param parameterMultiStringArray The array of string collect by multi.
     * @param parameterMultiIntArray The array of integer collect by multi.
     * @param parameterMultiEnumArray The array of enum collect by multi.
     * @param parameterDatetime The datetime parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return required Query Parameters along with {@link Response} on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> getRequiredQueryParamWithResponse(
            int parameterInt,
            boolean parameterBoolean,
            List<String> parameterCsvStringArray,
            List<Integer> parameterCsvIntArray,
            List<String> parameterMultiStringArray,
            List<Integer> parameterMultiIntArray,
            List<String> parameterMultiEnumArray,
            OffsetDateTime parameterDatetime,
            RequestOptions requestOptions) {
        return this.serviceClient.getRequiredQueryParamWithResponseAsync(
                parameterInt,
                parameterBoolean,
                parameterCsvStringArray,
                parameterCsvIntArray,
                parameterMultiStringArray,
                parameterMultiIntArray,
                parameterMultiEnumArray,
                parameterDatetime,
                requestOptions);
    }

    /**
     * Get Required Header Parameters.
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * Object
     * }</pre>
     *
     * @param parameterInt I am a required int parameter.
     * @param parameterBoolean I am a required boolean parameter.
     * @param parameterCsvStringArray The array of string collect by csv.
     * @param parameterCsvIntArray The array of integer collect by csv.
     * @param parameterDatetime The datetime parameter.
     * @param parameterDuration The duration parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return required Header Parameters along with {@link Response} on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> getRequiredHeaderWithResponse(
            int parameterInt,
            boolean parameterBoolean,
            List<String> parameterCsvStringArray,
            List<Integer> parameterCsvIntArray,
            OffsetDateTime parameterDatetime,
            Duration parameterDuration,
            RequestOptions requestOptions) {
        return this.serviceClient.getRequiredHeaderWithResponseAsync(
                parameterInt,
                parameterBoolean,
                parameterCsvStringArray,
                parameterCsvIntArray,
                parameterDatetime,
                parameterDuration,
                requestOptions);
    }

    /**
     * Test Case for Required Query Parameters
     *
     * <p>Get Required Query Parameters.
     *
     * @param parameterInt I am a required int parameter.
     * @param parameterBoolean I am a required boolean parameter.
     * @param parameterCsvStringArray I am a required csv string array parameter.
     * @param parameterCsvIntArray I am a required csv int array parameter.
     * @param parameterMultiStringArray The array of string collect by multi.
     * @param parameterMultiIntArray The array of integer collect by multi.
     * @param parameterMultiEnumArray The array of enum collect by multi.
     * @param parameterDatetime The datetime parameter.
     * @param parameterOptionalCsvIntArray I am a required csv int array parameter.
     * @param parameterOptionalMultiIntArray The array of integer collect by multi.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.exception.HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return required Query Parameters on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Object> getRequiredQueryParam(
            int parameterInt,
            boolean parameterBoolean,
            List<String> parameterCsvStringArray,
            List<Integer> parameterCsvIntArray,
            List<String> parameterMultiStringArray,
            List<Integer> parameterMultiIntArray,
            List<Get6ItemsItem> parameterMultiEnumArray,
            OffsetDateTime parameterDatetime,
            List<Integer> parameterOptionalCsvIntArray,
            List<Integer> parameterOptionalMultiIntArray) {
        // Generated convenience method for getRequiredQueryParamWithResponse
        RequestOptions requestOptions = new RequestOptions();
        if (parameterOptionalCsvIntArray != null) {
            requestOptions.addQueryParam(
                    "parameter_optional_csv_int_array",
                    JacksonAdapter.createDefaultSerializerAdapter()
                            .serializeIterable(parameterOptionalCsvIntArray, CollectionFormat.CSV));
        }
        if (parameterOptionalMultiIntArray != null) {
            requestOptions.addQueryParam(
                    "parameter_optional_multi_int_array",
                    JacksonAdapter.createDefaultSerializerAdapter()
                            .serializeIterable(parameterOptionalMultiIntArray, CollectionFormat.CSV));
        }
        return getRequiredQueryParamWithResponse(
                        parameterInt,
                        parameterBoolean,
                        parameterCsvStringArray,
                        parameterCsvIntArray,
                        parameterMultiStringArray,
                        parameterMultiIntArray,
                        parameterMultiEnumArray.stream()
                                .map(paramItemValue -> Objects.toString(paramItemValue, ""))
                                .collect(Collectors.toList()),
                        parameterDatetime,
                        requestOptions)
                .map(Response::getValue);
    }

    /**
     * Get Required Header Parameters.
     *
     * @param parameterInt I am a required int parameter.
     * @param parameterBoolean I am a required boolean parameter.
     * @param parameterCsvStringArray The array of string collect by csv.
     * @param parameterCsvIntArray The array of integer collect by csv.
     * @param parameterDatetime The datetime parameter.
     * @param parameterDuration The duration parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.exception.HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return required Header Parameters on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Object> getRequiredHeader(
            int parameterInt,
            boolean parameterBoolean,
            List<String> parameterCsvStringArray,
            List<Integer> parameterCsvIntArray,
            OffsetDateTime parameterDatetime,
            Duration parameterDuration) {
        // Generated convenience method for getRequiredHeaderWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return getRequiredHeaderWithResponse(
                        parameterInt,
                        parameterBoolean,
                        parameterCsvStringArray,
                        parameterCsvIntArray,
                        parameterDatetime,
                        parameterDuration,
                        requestOptions)
                .map(Response::getValue);
    }
}
