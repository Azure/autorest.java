// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package fixtures.multimediatypes;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceClient;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.exception.ClientAuthenticationException;
import com.azure.core.exception.HttpResponseException;
import com.azure.core.exception.ResourceModifiedException;
import com.azure.core.exception.ResourceNotFoundException;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.util.BinaryData;
import fixtures.multimediatypes.implementation.DpgMultiMediaTypesClientImpl;

/**
 * Initializes a new instance of the synchronous DpgMultiMediaTypesClient type.
 */
@ServiceClient(builder = DpgMultiMediaTypesClientBuilder.class)
public final class DpgMultiMediaTypesClient {
    @Generated
    private final DpgMultiMediaTypesClientImpl serviceClient;

    /**
     * Initializes an instance of DpgMultiMediaTypesClient class.
     * 
     * @param serviceClient the service client implementation.
     */
    @Generated
    DpgMultiMediaTypesClient(DpgMultiMediaTypesClientImpl serviceClient) {
        this.serviceClient = serviceClient;
    }

    /**
     * json and binary types with json type first.
     * <p>
     * <strong>Request Body Schema</strong>
     * </p>
     * <pre>{@code
     * BinaryData
     * }</pre>
     * <p>
     * <strong>Response Body Schema</strong>
     * </p>
     * <pre>{@code
     * String
     * }</pre>
     * 
     * @param contentType Upload file type. Allowed values: "application/pdf", "image/jpeg", "image/png", "image/tiff".
     * @param input Input parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the response body along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> jsonAndBinaryTypesJsonFirstWithResponse(String contentType, BinaryData input,
        RequestOptions requestOptions) {
        return this.serviceClient.jsonAndBinaryTypesJsonFirstWithResponse(contentType, input, requestOptions);
    }

    /**
     * json and binary types with binary type first.
     * <p>
     * <strong>Request Body Schema</strong>
     * </p>
     * <pre>{@code
     * BinaryData
     * }</pre>
     * <p>
     * <strong>Response Body Schema</strong>
     * </p>
     * <pre>{@code
     * String
     * }</pre>
     * 
     * @param contentType Upload file type. Allowed values: "application/pdf", "image/jpeg", "image/png", "image/tiff".
     * @param input Input parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the response body along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> jsonAndBinaryTypesBinaryFirstWithResponse(String contentType, BinaryData input,
        RequestOptions requestOptions) {
        return this.serviceClient.jsonAndBinaryTypesBinaryFirstWithResponse(contentType, input, requestOptions);
    }

    /**
     * json and octet media types with json type first.
     * <p>
     * <strong>Request Body Schema</strong>
     * </p>
     * <pre>{@code
     * BinaryData
     * }</pre>
     * <p>
     * <strong>Response Body Schema</strong>
     * </p>
     * <pre>{@code
     * String
     * }</pre>
     * 
     * @param contentType Upload file type. Allowed values: "application/json", "application/octet-stream".
     * @param message The payload body.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the response body along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> jsonAndOctectWithJsonFirstWithResponse(String contentType, BinaryData message,
        RequestOptions requestOptions) {
        return this.serviceClient.jsonAndOctectWithJsonFirstWithResponse(contentType, message, requestOptions);
    }

    /**
     * json and octet media types with octet type first.
     * <p>
     * <strong>Request Body Schema</strong>
     * </p>
     * <pre>{@code
     * BinaryData
     * }</pre>
     * <p>
     * <strong>Response Body Schema</strong>
     * </p>
     * <pre>{@code
     * String
     * }</pre>
     * 
     * @param contentType Upload file type. Allowed values: "application/json", "application/octet-stream".
     * @param message The payload body.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the response body along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> jsonAndOctectWithOctetFirstWithResponse(String contentType, BinaryData message,
        RequestOptions requestOptions) {
        return this.serviceClient.jsonAndOctectWithOctetFirstWithResponse(contentType, message, requestOptions);
    }

    /**
     * json and encoding types with json type first.
     * <p>
     * <strong>Request Body Schema</strong>
     * </p>
     * <pre>{@code
     * BinaryData
     * }</pre>
     * <p>
     * <strong>Response Body Schema</strong>
     * </p>
     * <pre>{@code
     * String
     * }</pre>
     * 
     * @param contentType Upload file type. Allowed values: "application/json", "text/plain; charset=UTF-8".
     * @param message The payload body.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the response body along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> jsonAndEncodingWithJsonFirstWithResponse(String contentType, BinaryData message,
        RequestOptions requestOptions) {
        return this.serviceClient.jsonAndEncodingWithJsonFirstWithResponse(contentType, message, requestOptions);
    }

    /**
     * json and encoding types with encoding type first.
     * <p>
     * <strong>Request Body Schema</strong>
     * </p>
     * <pre>{@code
     * String
     * }</pre>
     * <p>
     * <strong>Response Body Schema</strong>
     * </p>
     * <pre>{@code
     * String
     * }</pre>
     * 
     * @param contentType Upload file type. Allowed values: "application/json", "text/plain; charset=UTF-8".
     * @param input Input parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the response body along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> jsonAndEncodingWithEncodingFirstWithResponse(String contentType, BinaryData input,
        RequestOptions requestOptions) {
        return this.serviceClient.jsonAndEncodingWithEncodingFirstWithResponse(contentType, input, requestOptions);
    }

    /**
     * json and text types with text type first.
     * <p>
     * <strong>Request Body Schema</strong>
     * </p>
     * <pre>{@code
     * String
     * }</pre>
     * <p>
     * <strong>Response Body Schema</strong>
     * </p>
     * <pre>{@code
     * String
     * }</pre>
     * 
     * @param contentType Upload file type. Allowed values: "application/json", "text/plain".
     * @param input Input parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the response body along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> jsonAndTextWithTextFirstWithResponse(String contentType, BinaryData input,
        RequestOptions requestOptions) {
        return this.serviceClient.jsonAndTextWithTextFirstWithResponse(contentType, input, requestOptions);
    }

    /**
     * json and text types with json type first.
     * <p>
     * <strong>Request Body Schema</strong>
     * </p>
     * <pre>{@code
     * String
     * }</pre>
     * <p>
     * <strong>Response Body Schema</strong>
     * </p>
     * <pre>{@code
     * String
     * }</pre>
     * 
     * @param contentType Upload file type. Allowed values: "application/json", "text/plain".
     * @param input Input parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the response body along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> jsonAndTextWithJsonFirstWithResponse(String contentType, BinaryData input,
        RequestOptions requestOptions) {
        return this.serviceClient.jsonAndTextWithJsonFirstWithResponse(contentType, input, requestOptions);
    }

    /**
     * json and image types with json type first.
     * <p>
     * <strong>Request Body Schema</strong>
     * </p>
     * <pre>{@code
     * BinaryData
     * }</pre>
     * <p>
     * <strong>Response Body Schema</strong>
     * </p>
     * <pre>{@code
     * String
     * }</pre>
     * 
     * @param contentType Upload file type. Allowed values: "application/json", "image/jpeg".
     * @param input Input parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the response body along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> jsonAndImageWithJsonFirstWithResponse(String contentType, BinaryData input,
        RequestOptions requestOptions) {
        return this.serviceClient.jsonAndImageWithJsonFirstWithResponse(contentType, input, requestOptions);
    }

    /**
     * json and image types with json type first.
     * <p>
     * <strong>Request Body Schema</strong>
     * </p>
     * <pre>{@code
     * BinaryData
     * }</pre>
     * <p>
     * <strong>Response Body Schema</strong>
     * </p>
     * <pre>{@code
     * String
     * }</pre>
     * 
     * @param contentType The content type. Allowed values: "application/json", "image/jpeg".
     * @param input Input parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the response body along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> jsonAndImageObjectTypeWithJsonFirstWithResponse(String contentType, BinaryData input,
        RequestOptions requestOptions) {
        return this.serviceClient.jsonAndImageObjectTypeWithJsonFirstWithResponse(contentType, input, requestOptions);
    }

    /**
     * image type with non-required body.
     * <p>
     * <strong>Header Parameters</strong>
     * </p>
     * <table border="1">
     * <caption>Header Parameters</caption>
     * <tr>
     * <th>Name</th>
     * <th>Type</th>
     * <th>Required</th>
     * <th>Description</th>
     * </tr>
     * <tr>
     * <td>Content-Type</td>
     * <td>String</td>
     * <td>No</td>
     * <td>The content type. Allowed values: "image/jpeg".</td>
     * </tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addHeader}
     * <p>
     * <strong>Request Body Schema</strong>
     * </p>
     * <pre>{@code
     * BinaryData
     * }</pre>
     * <p>
     * <strong>Response Body Schema</strong>
     * </p>
     * <pre>{@code
     * String
     * }</pre>
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the response body along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> imageTypeWithNonRequiredBodyWithResponse(RequestOptions requestOptions) {
        return this.serviceClient.imageTypeWithNonRequiredBodyWithResponse(requestOptions);
    }

    /**
     * json and image types with non-required body and json type first.
     * <p>
     * <strong>Request Body Schema</strong>
     * </p>
     * <pre>{@code
     * BinaryData
     * }</pre>
     * <p>
     * <strong>Response Body Schema</strong>
     * </p>
     * <pre>{@code
     * String
     * }</pre>
     * 
     * @param contentType Upload file type. Allowed values: "application/json", "image/jpeg".
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the response body along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> jsonAndImageBinaryTypeJsonFirstWithNonRequiredBodyWithResponse(String contentType,
        RequestOptions requestOptions) {
        return this.serviceClient.jsonAndImageBinaryTypeJsonFirstWithNonRequiredBodyWithResponse(contentType,
            requestOptions);
    }

    /**
     * json and image types with non-required body and json type first.
     * <p>
     * <strong>Header Parameters</strong>
     * </p>
     * <table border="1">
     * <caption>Header Parameters</caption>
     * <tr>
     * <th>Name</th>
     * <th>Type</th>
     * <th>Required</th>
     * <th>Description</th>
     * </tr>
     * <tr>
     * <td>Content-Type</td>
     * <td>String</td>
     * <td>No</td>
     * <td>The content type. Allowed values: "application/json", "image/jpeg".</td>
     * </tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addHeader}
     * <p>
     * <strong>Request Body Schema</strong>
     * </p>
     * <pre>{@code
     * BinaryData
     * }</pre>
     * <p>
     * <strong>Response Body Schema</strong>
     * </p>
     * <pre>{@code
     * String
     * }</pre>
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the response body along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData>
        jsonAndImageObjectTypeJsonFirstWithNonRequiredBodyWithResponse(RequestOptions requestOptions) {
        return this.serviceClient.jsonAndImageObjectTypeJsonFirstWithNonRequiredBodyWithResponse(requestOptions);
    }
}
